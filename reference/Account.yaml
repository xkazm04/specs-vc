openapi: 3.1.0
info:
  contact: {}
  title: Account services
  version: 3.9.4
  x-logo:
    url: 'https://tatum.io/images/logo.svg'
    altText: Tatum
  description: |-
      <p>An endpoint to handle operations in Tatum Virtual accounts and on the blockchain, generate blockchain addresses, and link them to accounts.<br/>
      There are 2 main concepts within Tatum Virtual accounts and blockchains:
      <ul>
      <li>Tatum account with a generated blockchain address - customers can use Tatum's Virtual account transactions, send funds to blockchain addresses, and receive funds from blockchain users.</li>
      <li>Tatum account with no blockchain address generated - an account generated on the private ledger with a currency like BTC, but without a blockchain address associated with it. Customers can send and receive funds within Tatum Private Virtual and send assets to the blockchain. However, it is impossible to receive funds from the blockchain.</li>
      </ul></p>
servers:
  - url: 'https://api-eu1.tatum.io'
  - url: 'https://api-us-west1.tatum.io'
tags:
  - description: ''
    name: Address
  - description: ''
    name: Account operations
  - description: ''
    name: List accounts
  - description: ''
    name: Account security
paths:
  '/v3/offchain/account/{id}/address':
    post:
      description: |
        <h4>2 credits per API call and 20 credits for each address registered for scanning every day. If address is FLOW or FUSD, additional 3000 credits are consumed - see <a href="#operation/FlowGenerateAddress">Flow address generation.</a></h4><br/>
        <p>Create a new deposit address for the account. This method associates public blockchain's ledger address with the account on Tatum's private ledger.<br/>
        It is possible to generate multiple blockchain addresses for the same ledger account. By this, it is possible to aggregate various blockchain transactions from different addresses into the same account.
        Depending on the currency of an account, this method will either generate a public address for Bitcoin, Bitcoin Cash,
        Litecoin or Ethereum, DestinationTag in case of XRP or message in case of XLM. More information about supported blockchains and address types can be found <a href="#operation/createAccount">here</a>.<br/>
        Addresses are generated in the natural order of the Extended public key provided in the account. Derivation index is the representation of that order - starts from 0 and ends at 2^31.
        When a new address is generated, the last not used index is used to generate an address. It is possible to skip some of the addresses to the different index, which means all the skipped addresses will no longer be used.
        </p>
      operationId: generateDepositAddress
      summary: Create new deposit address
      tags:
        - Address
      parameters:
        - description: Account ID
          in: path
          name: id
          required: true
          schema:
            type: string
            example: 5e68c66581f2ee32bc354087
        - description: '<p>Derivation path index for specific address. If not present, last used index for given xpub of account + 1 is used. We recommend not to pass this value manually, since when some of the indexes are skipped, it is not possible to use them lately to generate address from it.</p>'
          in: query
          name: index
          schema:
            type: number
            example: 2
      responses:
        '200':
          content:
            application/json:
              schema:
                required:
                  - address
                  - currency
                properties:
                  address:
                    description: Blockchain address.
                    example: 7c21ed165e294db78b95f0f181086d6f
                    type: string
                  currency:
                    description: 'Currency of generated address. BTC, LTC, DOGE, BCH, ETH, XRP, XLM, BNB, TRX, ERC20, TRC20.'
                    example: BTC
                    type: string
                  derivationKey:
                    description: Derivation key index for given address.
                    format: int32
                    type: integer
                    maximum: 2147483647
                  xpub:
                    description: 'Extended public key to derive address from. In case of XRP, this is account address, since address is defined as DestinationTag, which is address field. In case of XLM, this is account address, since address is defined as message, which is address field.'
                    example: xpub6FB4LJzdKNkkpsjggFAGS2p34G48pqjtmSktmK2Ke3k1LKqm9ULsg8bGfDakYUrdhe2EHw5uGKX9DrMbrgYnVfDwrksT4ZVQ3vmgEruo3Ka
                    type: string
                  destinationTag:
                    description: 'In case of XRP, destinationTag is the distinguisher of the account.'
                    type: number
                    example: 5
                  memo:
                    description: 'In case of BNB, message is the distinguisher of the account.'
                    type: string
                    example: '5'
                  message:
                    description: 'In case of XLM, message is the distinguisher of the account.'
                    type: string
                    example: '5'
                type: object
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: account.not.exists
                        example: account.not.exists
                        type: string
                      message:
                        description: No such account.
                        example: No such account.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: account.xpub.missing
                        example: account.xpub.missing
                        type: string
                      message:
                        description: 'No xpub assigned to account, it is not possible to generate address. Use assignAddress method instead.'
                        example: 'No xpub assigned to account, it is not possible to generate address. Use assignAddress method instead.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: xpub.used
                        example: xpub.used
                        type: string
                      message:
                        description: XPub already used registered within Tatum
                        example: XPub already used registered within Tatum
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: Address.index.used
                        example: address.index.used
                        type: string
                      message:
                        description: 'Unable to create address, derivation index is already used.'
                        example: 'Unable to create address, derivation index is already used.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: offchain.not.supported
                        example: offchain.not.supported
                        type: string
                      message:
                        description: 'Offchain not supported for account with ${account.currency} currency.'
                        example: 'Offchain not supported for account with ${account.currency} currency.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: Address.generation.failed.wrong.xpub
                        example: address.generation.failed.wrong.xpub
                        type: string
                      message:
                        description: 'Unable to generate address, wrong xpub and account type.'
                        example: 'Unable to generate address, wrong xpub and account type.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: Address.generation.failed
                        example: address.generation.failed
                        type: string
                      message:
                        description: Unable to generate address.
                        example: Unable to generate address.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: vc.not.found
                        example: vc.not.found
                        type: string
                      message:
                        description: No such virtual currency.
                        example: No such virtual currency.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: Address.used
                        example: address.used
                        type: string
                      message:
                        description: Address and currency already in use.
                        example: Address and currency already in use.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
    get:
      description: |
        <h4>1 credit per API call.</h4><br/>
        <p>Get all deposit addresses generated for account. It is possible to deposit funds from another blockchain
        address to any of associated addresses and they will be credited on the Tatum Virtual account connected to the address.</p>
      operationId: getAllDepositAddresses
      summary: Get all deposit addresses for account
      tags:
        - Address
      parameters:
        - description: Account ID
          in: path
          name: id
          required: true
          schema:
            type: string
            example: 5e68c66581f2ee32bc354087
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  required:
                    - address
                    - currency
                  properties:
                    address:
                      description: Blockchain address.
                      example: 7c21ed165e294db78b95f0f181086d6f
                      type: string
                    currency:
                      description: 'Currency of generated address. BTC, LTC, DOGE, BCH, ETH, XRP, XLM, BNB, TRX, ERC20, TRC20.'
                      example: BTC
                      type: string
                    derivationKey:
                      description: Derivation key index for given address.
                      format: int32
                      type: integer
                      maximum: 2147483647
                    xpub:
                      description: 'Extended public key to derive address from. In case of XRP, this is account address, since address is defined as DestinationTag, which is address field. In case of XLM, this is account address, since address is defined as message, which is address field.'
                      example: xpub6FB4LJzdKNkkpsjggFAGS2p34G48pqjtmSktmK2Ke3k1LKqm9ULsg8bGfDakYUrdhe2EHw5uGKX9DrMbrgYnVfDwrksT4ZVQ3vmgEruo3Ka
                      type: string
                    destinationTag:
                      description: 'In case of XRP, destinationTag is the distinguisher of the account.'
                      type: number
                      example: 5
                    memo:
                      description: 'In case of BNB, message is the distinguisher of the account.'
                      type: string
                      example: '5'
                    message:
                      description: 'In case of XLM, message is the distinguisher of the account.'
                      type: string
                      example: '5'
                  type: object
                type: array
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  /v3/offchain/account/address/batch:
    post:
      description: |
        <h4>2 credits per API call, 1 credit for every address created and 20 credits for each address registered for scanning every day. If address is FLOW or FUSD, additional 3000 credits are consumed for each address - see <a href="#operation/FlowGenerateAddress">Flow address generation.<a/></h4><br/>
        <p>Create new deposit addressess for the account. This method associates public blockchain's ledger address with the account on Tatum's Virtual account.<br/>
        It is possible to generate multiple blockchain addresses for the same ledger account. By this, it is possible to aggregate various blockchain transactions from different addresses into the same account.
        Depending on the currency of an account, this method will either generate a public address for Bitcoin, Bitcoin Cash,
        Litecoin or Ethereum, DestinationTag in case of XRP or message in case of XLM. More information about supported blockchains and address types can be found <a href="#operation/createAccount">here</a>.<br/>
        Addresses are generated in the natural order of the Extended public key provided in the account. Derivation index is the representation of that order - starts from 0 and ends at 2^31.
        When a new address is generated, the last not used index is used to generate an address. It is possible to skip some of the addresses to the different index, which means all the skipped addresses will no longer be used.
        </p>
      operationId: generateDepositAddressesBatch
      summary: Create new deposit addresses in a batch call
      tags:
        - Address
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - addresses
              properties:
                addresses:
                  type: array
                  items:
                    type: object
                    required:
                      - accountId
                    properties:
                      accountId:
                        description: 'ID of the account, for which blockchain address will be created.'
                        example: 5e6be8e9e6aa436299950c41
                        maxLength: 24
                        minLength: 24
                        type: string
                      derivationKey:
                        description: 'Derivation key index for given address to generate. If not present, first not used address will be created.'
                        format: int32
                        type: integer
                        minimum: 0
                        maximum: 2147483647
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - address
                    - currency
                  properties:
                    address:
                      description: Blockchain address.
                      example: 7c21ed165e294db78b95f0f181086d6f
                      type: string
                    currency:
                      description: 'Currency of generated address. BTC, LTC, DOGE, BCH, ETH, XRP, XLM, BNB, TRX, ERC20, TRC20.'
                      example: BTC
                      type: string
                    derivationKey:
                      description: Derivation key index for given address.
                      format: int32
                      type: integer
                      maximum: 2147483647
                    xpub:
                      description: 'Extended public key to derive address from. In case of XRP, this is account address, since address is defined as DestinationTag, which is address field. In case of XLM, this is account address, since address is defined as message, which is address field.'
                      example: xpub6FB4LJzdKNkkpsjggFAGS2p34G48pqjtmSktmK2Ke3k1LKqm9ULsg8bGfDakYUrdhe2EHw5uGKX9DrMbrgYnVfDwrksT4ZVQ3vmgEruo3Ka
                      type: string
                    destinationTag:
                      description: 'In case of XRP, destinationTag is the distinguisher of the account.'
                      type: number
                      example: 5
                    memo:
                      description: 'In case of BNB, message is the distinguisher of the account.'
                      type: string
                      example: '5'
                    message:
                      description: 'In case of XLM, message is the distinguisher of the account.'
                      type: string
                      example: '5'
                  type: object
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: account.not.exists
                        example: account.not.exists
                        type: string
                      message:
                        description: No such account.
                        example: No such account.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: account.xpub.missing
                        example: account.xpub.missing
                        type: string
                      message:
                        description: 'No xpub assigned to account, it is not possible to generate address. Use assignAddress method instead.'
                        example: 'No xpub assigned to account, it is not possible to generate address. Use assignAddress method instead.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: xpub.used
                        example: xpub.used
                        type: string
                      message:
                        description: XPub already used registered within Tatum
                        example: XPub already used registered within Tatum
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: Address.index.used
                        example: address.index.used
                        type: string
                      message:
                        description: 'Unable to create address, derivation index is already used.'
                        example: 'Unable to create address, derivation index is already used.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: offchain.not.supported
                        example: offchain.not.supported
                        type: string
                      message:
                        description: 'Offchain not supported for account with ${account.currency} currency.'
                        example: 'Offchain not supported for account with ${account.currency} currency.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: Address.generation.failed.wrong.xpub
                        example: address.generation.failed.wrong.xpub
                        type: string
                      message:
                        description: 'Unable to generate address, wrong xpub and account type.'
                        example: 'Unable to generate address, wrong xpub and account type.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: Address.generation.failed
                        example: address.generation.failed
                        type: string
                      message:
                        description: Unable to generate address.
                        example: Unable to generate address.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: vc.not.found
                        example: vc.not.found
                        type: string
                      message:
                        description: No such virtual currency.
                        example: No such virtual currency.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: Address.used
                        example: address.used
                        type: string
                      message:
                        description: Address and currency already in use.
                        example: Address and currency already in use.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/offchain/account/address/{address}/{currency}':
    get:
      description: |
        <h4>1 credit per API call.</h4><br/>
        <p>Check, whether blockchain address for given currency is registered within Tatum and assigned to Tatum Account.
        Returns account this address belongs to, otherwise throws an error.</p>
      operationId: addressExists
      summary: 'Check, if deposit address is assigned'
      tags:
        - Address
      parameters:
        - description: Currency
          in: path
          name: currency
          required: true
          schema:
            type: string
            example: BNB
        - description: Blockchain Address to check
          in: path
          name: address
          required: true
          schema:
            example: tbnb1sfj9981j2eo1ij2e09
            type: string
        - description: 'In case of XLM or XRP, this is a memo or DestinationTag to search for.'
          in: query
          name: index
          required: false
          schema:
            example: 1
            type: number
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  id:
                    description: Account ID.
                    example: 5e68c66581f2ee32bc354087
                    type: string
                  balance:
                    properties:
                      accountBalance:
                        description: 'Account balance represents all assets on the account, available and blocked.'
                        example: '1000000'
                        type: string
                      availableBalance:
                        description: Available balance on the account represents account balance minus blocked amount on the account. Available balance should be user do determine how much can customer send or withdraw from the account.
                        example: '1000000'
                        type: string
                    type: object
                    required:
                      - accountBalance
                      - availableBalance
                  currency:
                    description: Currency of account.
                    example: BTC
                    type: string
                  frozen:
                    description: Indicates whether account is frozen or not.
                    example: false
                    type: boolean
                  active:
                    description: Indicates whether account is active or not.
                    example: true
                    type: boolean
                  customerId:
                    description: ID of newly created customer or existing customer associated with account.
                    type: string
                    example: 5e68c66581f2ee32bc354087
                  accountCode:
                    description: For bookkeeping to distinct account purpose.
                    example: 03_ACC_01
                    type: string
                  accountingCurrency:
                    description: All transaction will be accounted in this currency for all accounts.
                    example: EUR
                    type: string
                  xpub:
                    description: Extended public key to generate addresses from.
                    example: xpub6FB4LJzdKNkkpsjggFAGS2p34G48pqjtmSktmK2Ke3k1LKqm9ULsg8bGfDakYUrdhe2EHw5uGKX9DrMbrgYnVfDwrksT4ZVQ3vmgEruo3Ka
                    type: string
                required:
                  - id
                  - active
                  - frozen
                  - currency
                  - balance
                type: object
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: account.not.exists
                        example: account.not.exists
                        type: string
                      message:
                        description: No such account.
                        example: No such account.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: Address.not.found
                        example: address.not.found
                        type: string
                      message:
                        description: No such address exists.
                        example: No such address exists.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/offchain/account/{id}/address/{address}':
    delete:
      description: |
        <h4>1 credit per API call.</h4><br/>
        <p>Remove blockchain address from the Virtual account. Tatum will not check for any incoming deposits on this address for this account.
        It will not be possible to generate the address in the future anymore.</p>
      operationId: removeAddress
      summary: Remove address for account
      tags:
        - Address
      parameters:
        - description: Account ID
          in: path
          name: id
          required: true
          schema:
            type: string
            example: 5e68c66581f2ee32bc354087
        - description: Blockchain address
          in: path
          name: address
          required: true
          schema:
            type: string
            example: 2MsM67NLa71fHvTUBqNENW15P68nHB2vVXb
        - description: 'Destination tag or memo attribute for XRP, BNB or XLM addresses'
          in: query
          name: index
          required: false
          schema:
            type: number
            minimum: 1
            example: 1
      responses:
        '204':
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    description: account.not.exists
                    example: account.not.exists
                    type: string
                  message:
                    description: No such account.
                    example: No such account.
                    type: string
                  statusCode:
                    description: '403'
                    example: 403
                    type: number
                required:
                  - errorCode
                  - message
                  - statusCode
                type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
    post:
      description: |
        <h4>2 credits for API call and 20 credits for each address registered for scanning every day.</h4><br/>
        <p>This method is used when the account has no default xpub assigned, and addresses are handled manually. It is possible to pair any number of blockchain address to the account.</p>
      operationId: assignAddress
      summary: Assign address for account
      tags:
        - Address
      parameters:
        - description: Account ID
          in: path
          name: id
          required: true
          schema:
            type: string
            example: 5e68c66581f2ee32bc354087
        - description: Blockchain address
          in: path
          name: address
          required: true
          schema:
            type: string
            example: 2MsM67NLa71fHvTUBqNENW15P68nHB2vVXb
        - description: Destination tag or memo attribute for XRP or XLM addresses
          in: query
          name: index
          required: false
          schema:
            type: number
            minimum: 1
            example: 1
      responses:
        '200':
          content:
            application/json:
              schema:
                required:
                  - address
                  - currency
                properties:
                  address:
                    description: Blockchain address.
                    example: 7c21ed165e294db78b95f0f181086d6f
                    type: string
                  currency:
                    description: 'Currency of generated address. BTC, LTC, DOGE, BCH, ETH, XRP, XLM, BNB, TRX, ERC20, TRC20.'
                    example: BTC
                    type: string
                  derivationKey:
                    description: Derivation key index for given address.
                    format: int32
                    type: integer
                    maximum: 2147483647
                  xpub:
                    description: 'Extended public key to derive address from. In case of XRP, this is account address, since address is defined as DestinationTag, which is address field. In case of XLM, this is account address, since address is defined as message, which is address field.'
                    example: xpub6FB4LJzdKNkkpsjggFAGS2p34G48pqjtmSktmK2Ke3k1LKqm9ULsg8bGfDakYUrdhe2EHw5uGKX9DrMbrgYnVfDwrksT4ZVQ3vmgEruo3Ka
                    type: string
                  destinationTag:
                    description: 'In case of XRP, destinationTag is the distinguisher of the account.'
                    type: number
                    example: 5
                  memo:
                    description: 'In case of BNB, message is the distinguisher of the account.'
                    type: string
                    example: '5'
                  message:
                    description: 'In case of XLM, message is the distinguisher of the account.'
                    type: string
                    example: '5'
                type: object
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: account.not.exists
                        example: account.not.exists
                        type: string
                      message:
                        description: No such account.
                        example: No such account.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: account.xpub.present
                        example: account.xpub.present
                        type: string
                      message:
                        description: 'Xpub assigned to account, it is not possible to assign address. Use generateAddress method instead.'
                        example: 'Xpub assigned to account, it is not possible to assign address. Use generateAddress method instead.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: offchain.not.supported
                        example: offchain.not.supported
                        type: string
                      message:
                        description: 'Offchain not supported for account with ${account.currency} currency.'
                        example: 'Offchain not supported for account with ${account.currency} currency.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  /v3/ledger/account:
    post:
      description: |
        <h4>2 credits per API call.</h4><br/>
        <p>Creates a new account for the customer. This will create an account on Tatum Private Virtual. It is possible to create an account for every supported cryptocurrency, FIAT, any ERC20 token created within a Tatum instance, and Tatum virtual currencies. When the customer field is already present, the account is added to the customer's list of accounts. If the customer field is not present, a new customer is created along with the account.<br/>
        Every account has its own balance. Tatum supports 2 types of balances - accountBalance and availableBalance. The account balance represents all assets in the account, both available and blocked. The available balance in the account represents account balance minus the blocked amount in the account. The available balance should be used to determine how much a customer can send or withdraw from the account.<br/>
        An account is always created with a specific currency. Once the currency is set, it cannot be changed.<br/>
        When an account's currency is blockchain-based, like BTC or ETH, the account is usually created with xpub. Xpub represents an extended public key of the blockchain wallet, which will be connected to this account. Adding xpub to the account does not connect any specific blockchain address to this account. Xpub is just a generator of addresses, not an address itself.
        Every blockchain has different types of xpubs:
        <ul>
        <li><b>BTC</b> - xpub can be obtained from <a href="#operation/BtcGenerateWallet">generate wallet</a></li>
        <li><b>LTC</b> - xpub can be obtained from <a href="#operation/LtcGenerateWallet">generate wallet</a></li>
        <li><b>DOGE</b> - xpub can be obtained from <a href="#operation/DogeGenerateWallet">generate wallet</a></li>
        <li><b>BCH</b> - xpub can be obtained from <a href="#operation/BchGenerateWallet">generate wallet</a></li>
        <li><b>ADA</b> - xpub can be obtained from <a href="#operation/AdaGenerateWallet">generate wallet</a></li>
        <li><b>ETH and ERC20</b> - xpub can be obtained from <a href="#operation/EthGenerateWallet">generate wallet</a></li>
        <li><b>XRP</b> - xpub is the address field from <a href="#operation/XrpWallet">generate account</a></li>
        <li><b>XLM</b> - xpub is the address field from <a href="#operation/XlmWallet">generate account</a></li>
        <li><b>BNB</b> - xpub is the address field from <a href="#operation/BnbGenerateWallet">generate account</a></li>
        <li><b>LUNA</b> - xpub is the address field from <a href="#operation/TerraGenerateWallet">generate account</a></li>
        <li><b>BSC</b> - xpub can be obtained from <a href="#operation/BscGenerateWallet">generate wallet</a></li>
        <li><b>EGLD</b> - no xpub, use address field from <a href="#operation/EgldGenerateWallet">generate wallet</a></li>
        <li><b>ALGO</b> - no xpub, use address field from <a href="#operation/AlgoGenerateWallet">generate wallet</a></li>
        <li><b>SOL</b> - no xpub, use address field from <a href="#operation/SolanaGenerateWallet">generate wallet</a></li>
        <li><b>MATIC</b> - xpub can be obtained from <a href="#operation/PolygonGenerateWallet">generate wallet</a></li>
        <li><b>KLAY</b> - xpub can be obtained from <a href="#operation/KlaytnGenerateWallet">generate wallet</a></li>
        <li><b>XDC</b> - xpub can be obtained from <a href="#operation/XdcGenerateWallet">generate wallet</a></li>
        <li><b>KCS</b> - xpub can be obtained from <a href="#operation/KcsGenerateWallet">generate wallet</a></li>
        <li><b>CELO, cEUR, cUSD and ERC20</b> - xpub can be obtained from <a href="#operation/CeloGenerateWallet">generate wallet</a></li>
        <li><b>TRON and TRC tokens</b> - xpub can be obtained from <a href="#operation/GenerateTronwallet">generate wallet</a></li>
        <li><b>FLOW and FUSD</b> - xpub can be obtained from <a href="#operation/GenerateFlowwallet">generate wallet</a></li>
        </ul>
        There are 2 options for connecting an account to a blockchain:
        <ul>
        <li>If xpub is present in the account, addresses are generated for the account via <a href="#operation/generateDepositAddress">Create new deposit address</a>. This is the preferred mechanism.</li>
        <li>If xpub is not present in the account, addresses for this account are assigned manually via <a href="#operation/assignAddress">Assign address</a>. This feature is used when there are already existing addresses to be used in Tatum.</li>
        </ul></p>
      operationId: createAccount
      summary: Create new account
      tags:
        - Account operations
      requestBody:
        content:
          application/json:
            schema:
              properties:
                currency:
                  description: |
                    Account currency. Supported values are BTC, BNB, LTC, DOGE, BCH, ETH, XLM, XRP, LUNA, LUNA_KRW, LUNA_USD, TRON, BSC, SOL, MATIC, ALGO, KCS, EGLD, KLAY, XDC, CELO, Tatum Virtual Currencies started with VC_ prefix (this includes FIAT currencies), USDT, WBTC, LEO, LINK, GMC, UNI, FREE, MKR, USDC, BAT, TUSD, BUSD, PAX, PAXG, PLTC, MMY, XCON, USDT_TRON, BETH, BUSD, BBTC, BADA, WBNB, BDOT, BXRP, BLTC, BBCH, CAKE, BUSD_BSC, ERC20, BEP20 or TRC-10/20 custom tokens registered in the Tatum Platform, XLM or XRP Assets created via Tatum Platform. ERC20 tokens and BEP20 tokens do not have Testnet blockchains, so it is impossible to use them in a non-production environment.
                    You can emulate behaviour by <a href="#operation/createErc20">registering your custom ERC20 token</a> in the platform and receive tokens using <a href="https://erc20faucet.com/" target="_blank">https://erc20faucet.com/</a>.
                  example: BTC
                  maxLength: 40
                  minLength: 2
                  type: string
                xpub:
                  description: Extended public key to generate addresses from.
                  maxLength: 192
                  minLength: 1
                  example: xpub6EsCk1uU6cJzqvP9CdsTiJwT2rF748YkPnhv5Qo8q44DG7nn2vbyt48YRsNSUYS44jFCW9gwvD9kLQu9AuqXpTpM1c5hgg9PsuBLdeNncid
                  type: string
                customer:
                  properties:
                    accountingCurrency:
                      description: 'All transaction will be accounted in this currency for all accounts. Currency can be overridden per account level. If not set, EUR is used. ISO-4217'
                      enum:
                        - AED
                        - AFN
                        - ALL
                        - AMD
                        - ANG
                        - AOA
                        - ARS
                        - AUD
                        - AWG
                        - AZN
                        - BAM
                        - BBD
                        - BDT
                        - BGN
                        - BHD
                        - BIF
                        - BMD
                        - BND
                        - BOB
                        - BRL
                        - BSD
                        - BTN
                        - BWP
                        - BYN
                        - BYR
                        - BZD
                        - CAD
                        - CDF
                        - CHF
                        - CLF
                        - CLP
                        - CNY
                        - COP
                        - CRC
                        - CUC
                        - CUP
                        - CVE
                        - CZK
                        - DJF
                        - DKK
                        - DOP
                        - DOGE
                        - DZD
                        - EGP
                        - ERN
                        - ETB
                        - EUR
                        - FJD
                        - FKP
                        - FLOW
                        - FUSD
                        - GBP
                        - GEL
                        - GGP
                        - GHS
                        - GIP
                        - GMD
                        - GNF
                        - GTQ
                        - GYD
                        - HKD
                        - HNL
                        - HRK
                        - HTG
                        - HUF
                        - IDR
                        - ILS
                        - IMP
                        - INR
                        - IQD
                        - IRR
                        - ISK
                        - JEP
                        - JMD
                        - JOD
                        - JPY
                        - KES
                        - KGS
                        - KHR
                        - KMF
                        - KPW
                        - KRW
                        - KWD
                        - KYD
                        - KZT
                        - LAK
                        - LBP
                        - LKR
                        - LRD
                        - LSL
                        - LTL
                        - LVL
                        - LYD
                        - MAD
                        - MDL
                        - MGA
                        - MKD
                        - MMK
                        - MNT
                        - MOP
                        - MRO
                        - MUR
                        - MVR
                        - MWK
                        - MXN
                        - MYR
                        - MZN
                        - NAD
                        - NGN
                        - NIO
                        - NOK
                        - NPR
                        - NZD
                        - OMR
                        - PAB
                        - PEN
                        - PGK
                        - PHP
                        - PKR
                        - PLN
                        - PYG
                        - QAR
                        - RON
                        - RSD
                        - RUB
                        - RWF
                        - SAR
                        - SBD
                        - SCR
                        - SDG
                        - SEK
                        - SGD
                        - SHP
                        - SLL
                        - SOS
                        - SRD
                        - STD
                        - SVC
                        - SYP
                        - SZL
                        - THB
                        - TJS
                        - TMT
                        - TND
                        - TOP
                        - TRY
                        - TTD
                        - TWD
                        - TZS
                        - UAH
                        - UGX
                        - USD
                        - UYU
                        - UZS
                        - VEF
                        - VND
                        - VUV
                        - WST
                        - XAF
                        - XAG
                        - XAU
                        - XCD
                        - XDR
                        - XOF
                        - XPF
                        - YER
                        - ZAR
                        - ZMK
                        - ZMW
                        - ZWL
                      example: USD
                      maxLength: 3
                      minLength: 3
                      type: string
                    customerCountry:
                      description: Country customer has to be compliant with. ISO-3166-1
                      example: US
                      maxLength: 2
                      minLength: 2
                      type: string
                    externalId:
                      description: Customer external ID. Use only anonymized identification you have in your system. If customer with externalId does not exists new customer is created. If customer with specified externalId already exists it is updated.
                      example: '123654'
                      maxLength: 100
                      minLength: 1
                      type: string
                    providerCountry:
                      description: Country service provider has to be compliant with. ISO-3166-1
                      example: US
                      maxLength: 2
                      minLength: 2
                      type: string
                  required:
                    - externalId
                  type: object
                  description: If customer is filled then is created or updated.
                compliant:
                  description: 'Enable compliant checks. If this is enabled, it is impossible to create account if compliant check fails.'
                  example: false
                  type: boolean
                accountCode:
                  description: For bookkeeping to distinct account purpose.
                  maxLength: 50
                  minLength: 1
                  example: AC_1011_B
                  type: string
                accountingCurrency:
                  description: 'All transaction will be accounted in this currency for all accounts. Currency can be overridden per account level. If not set, customer accountingCurrency is used or EUR by default. ISO-4217'
                  enum:
                    - AED
                    - AFN
                    - ALL
                    - AMD
                    - ANG
                    - AOA
                    - ARS
                    - AUD
                    - AWG
                    - AZN
                    - BAM
                    - BBD
                    - BDT
                    - BGN
                    - BHD
                    - BIF
                    - BMD
                    - BND
                    - BOB
                    - BRL
                    - BSD
                    - BTN
                    - BWP
                    - BYN
                    - BYR
                    - BZD
                    - CAD
                    - CDF
                    - CHF
                    - CLF
                    - CLP
                    - CNY
                    - COP
                    - CRC
                    - CUC
                    - CUP
                    - CVE
                    - CZK
                    - DJF
                    - DKK
                    - DOP
                    - DOGE
                    - DZD
                    - EGP
                    - ERN
                    - ETB
                    - EUR
                    - FJD
                    - FKP
                    - FLOW
                    - FUSD
                    - GBP
                    - GEL
                    - GGP
                    - GHS
                    - GIP
                    - GMD
                    - GNF
                    - GTQ
                    - GYD
                    - HKD
                    - HNL
                    - HRK
                    - HTG
                    - HUF
                    - IDR
                    - ILS
                    - IMP
                    - INR
                    - IQD
                    - IRR
                    - ISK
                    - JEP
                    - JMD
                    - JOD
                    - JPY
                    - KES
                    - KGS
                    - KHR
                    - KMF
                    - KPW
                    - KRW
                    - KWD
                    - KYD
                    - KZT
                    - LAK
                    - LBP
                    - LKR
                    - LRD
                    - LSL
                    - LTL
                    - LVL
                    - LYD
                    - MAD
                    - MDL
                    - MGA
                    - MKD
                    - MMK
                    - MNT
                    - MOP
                    - MRO
                    - MUR
                    - MVR
                    - MWK
                    - MXN
                    - MYR
                    - MZN
                    - NAD
                    - NGN
                    - NIO
                    - NOK
                    - NPR
                    - NZD
                    - OMR
                    - PAB
                    - PEN
                    - PGK
                    - PHP
                    - PKR
                    - PLN
                    - PYG
                    - QAR
                    - RON
                    - RSD
                    - RUB
                    - RWF
                    - SAR
                    - SBD
                    - SCR
                    - SDG
                    - SEK
                    - SGD
                    - SHP
                    - SLL
                    - SOS
                    - SRD
                    - STD
                    - SVC
                    - SYP
                    - SZL
                    - THB
                    - TJS
                    - TMT
                    - TND
                    - TOP
                    - TRY
                    - TTD
                    - TWD
                    - TZS
                    - UAH
                    - UGX
                    - USD
                    - UYU
                    - UZS
                    - VEF
                    - VND
                    - VUV
                    - WST
                    - XAF
                    - XAG
                    - XAU
                    - XCD
                    - XDR
                    - XOF
                    - XPF
                    - YER
                    - ZAR
                    - ZMK
                    - ZMW
                    - ZWL
                  example: USD
                  maxLength: 3
                  minLength: 3
                  type: string
                accountNumber:
                  description: Account number from external system.
                  maxLength: 50
                  minLength: 1
                  example: '123456'
                  type: string
              required:
                - currency
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  id:
                    description: Account ID.
                    example: 5e68c66581f2ee32bc354087
                    type: string
                  balance:
                    properties:
                      accountBalance:
                        description: 'Account balance represents all assets on the account, available and blocked.'
                        example: '1000000'
                        type: string
                      availableBalance:
                        description: Available balance on the account represents account balance minus blocked amount on the account. Available balance should be user do determine how much can customer send or withdraw from the account.
                        example: '1000000'
                        type: string
                    type: object
                    required:
                      - accountBalance
                      - availableBalance
                  currency:
                    description: Currency of account.
                    example: BTC
                    type: string
                  frozen:
                    description: Indicates whether account is frozen or not.
                    example: false
                    type: boolean
                  active:
                    description: Indicates whether account is active or not.
                    example: true
                    type: boolean
                  customerId:
                    description: ID of newly created customer or existing customer associated with account.
                    type: string
                    example: 5e68c66581f2ee32bc354087
                  accountCode:
                    description: For bookkeeping to distinct account purpose.
                    example: 03_ACC_01
                    type: string
                  accountingCurrency:
                    description: All transaction will be accounted in this currency for all accounts.
                    example: EUR
                    type: string
                  xpub:
                    description: Extended public key to generate addresses from.
                    example: xpub6FB4LJzdKNkkpsjggFAGS2p34G48pqjtmSktmK2Ke3k1LKqm9ULsg8bGfDakYUrdhe2EHw5uGKX9DrMbrgYnVfDwrksT4ZVQ3vmgEruo3Ka
                    type: string
                required:
                  - id
                  - active
                  - frozen
                  - currency
                  - balance
                type: object
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to perform the required operation due to a logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: compliance.country.btc.not.supported
                        example: compliance.country.btc.not.supported
                        type: string
                      message:
                        description: Customer country not supported for BTC.
                        example: Customer country not supported for BTC.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: compliance.country.eth.not.supported
                        example: compliance.country.eth.not.supported
                        type: string
                      message:
                        description: Customer country not supported for ETH.
                        example: Customer country not supported for ETH.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: account.blockchain.testnet
                        example: account.blockchain.testnet
                        type: string
                      message:
                        description: 'Unable to create account, unsupported testnet blockchain.'
                        example: 'Unable to create account, unsupported testnet blockchain.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: account.xpub.present
                        example: account.xpub.present
                        type: string
                      message:
                        description: 'Unable to create ${account.currency} account with xpub.'
                        example: 'Unable to create ${account.currency} account with xpub.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: ledger.currency.invalid
                        example: ledger.currency.invalid
                        type: string
                      message:
                        description: 'Unable to create an account, unsupported currency.'
                        example: 'Unable to create an account, unsupported currency.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: account.xpub.incompatible
                        example: account.xpub.incompatible
                        type: string
                      message:
                        description: Xpub not compatible with account currency.
                        example: Xpub not compatible with account currency.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: Address.generation.failed.wrong.xpub
                        example: address.generation.failed.wrong.xpub
                        type: string
                      message:
                        description: 'Unable to generate address, wrong xpub and account type.'
                        example: 'Unable to generate address, wrong xpub and account type.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: Address.generation.failed
                        example: address.generation.failed
                        type: string
                      message:
                        description: Unable to generate address.
                        example: Unable to generate address.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: customer.not.exists
                        example: customer.not.exists
                        type: string
                      message:
                        description: 'No customer with given external ID ${externalId} exists.'
                        example: 'No customer with given external ID ${externalId} exists.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: customer.not.active
                        example: customer.not.active
                        type: string
                      message:
                        description: Customer not active.
                        example: Customer not active.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
    get:
      description: <h4>1 credit per API call.</h4><br/><p>Lists all accounts. Inactive accounts are also visible.</p>
      operationId: getAllAccounts
      summary: List all accounts
      tags:
        - List accounts
      parameters:
        - description: Max number of items per page is 50.
          in: query
          name: pageSize
          schema:
            type: number
            example: 10
            maximum: 50
            minimum: 1
          required: true
        - description: Offset to obtain the next page of data.
          in: query
          name: offset
          schema:
            type: number
            example: 0
        - description: For bookkeeping to distinct account purpose.
          in: query
          name: accountCode
          schema:
            maxLength: 50
            example: AC_1011_B
            minLength: 1
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    id:
                      description: Account ID.
                      example: 5e68c66581f2ee32bc354087
                      type: string
                    balance:
                      properties:
                        accountBalance:
                          description: 'Account balance represents all assets on the account, available and blocked.'
                          example: '1000000'
                          type: string
                        availableBalance:
                          description: Available balance on the account represents account balance minus blocked amount on the account. Available balance should be user do determine how much can customer send or withdraw from the account.
                          example: '1000000'
                          type: string
                      type: object
                      required:
                        - accountBalance
                        - availableBalance
                    currency:
                      description: Currency of account.
                      example: BTC
                      type: string
                    frozen:
                      description: Indicates whether account is frozen or not.
                      example: false
                      type: boolean
                    active:
                      description: Indicates whether account is active or not.
                      example: true
                      type: boolean
                    customerId:
                      description: ID of newly created customer or existing customer associated with account.
                      type: string
                      example: 5e68c66581f2ee32bc354087
                    accountCode:
                      description: For bookkeeping to distinct account purpose.
                      example: 03_ACC_01
                      type: string
                    accountingCurrency:
                      description: All transaction will be accounted in this currency for all accounts.
                      example: EUR
                      type: string
                    xpub:
                      description: Extended public key to generate addresses from.
                      example: xpub6FB4LJzdKNkkpsjggFAGS2p34G48pqjtmSktmK2Ke3k1LKqm9ULsg8bGfDakYUrdhe2EHw5uGKX9DrMbrgYnVfDwrksT4ZVQ3vmgEruo3Ka
                      type: string
                  required:
                    - id
                    - active
                    - frozen
                    - currency
                    - balance
                  type: object
                type: array
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  /v3/ledger/account/batch:
    post:
      description: |
        <h4>2 credits per API call + 1 credit for every account created.</h4><br/>
        <p>Creates new accounts for the customer in a batch call.</p>
      operationId: createAccountBatch
      summary: Create multiple accounts in a batch call
      tags:
        - Account operations
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                accounts:
                  type: array
                  items:
                    properties:
                      currency:
                        description: |
                          Account currency. Supported values are BTC, BNB, LTC, DOGE, BCH, ETH, XLM, XRP, TRON, BSC, LUNA, LUNA_KRW, LUNA_USD,SOL, MATIC, ALGO, KCS, KLAY, XDC EGLD, CELO, Tatum Virtual Currencies started with VC_ prefix (this includes FIAT currencies), USDT, WBTC, LEO, LINK, GMC, UNI, FREE, MKR, USDC, BAT, TUSD, BUSD, PAX, PAXG, PLTC, MMY, XCON, USDT_TRON, BETH, BUSD, BBTC, BADA, WBNB, BDOT, BXRP, BLTC, BBCH, CAKE, BUSD_BSC, ERC20, BEP20 or TRC-10/20 custom tokens registered in the Tatum Platform, XLM or XRP Assets created via Tatum Platform. ERC20 tokens and BEP20 tokens do not have Testnet blockchains, so it is impossible to use them in a non-production environment.
                          You can emulate behaviour by <a href="#operation/createErc20">registering your custom ERC20 token</a> in the platform and receive tokens using <a href="https://erc20faucet.com/" target="_blank">https://erc20faucet.com/</a>.
                        example: BTC
                        maxLength: 40
                        minLength: 2
                        type: string
                      xpub:
                        description: Extended public key to generate addresses from.
                        maxLength: 192
                        minLength: 1
                        example: xpub6EsCk1uU6cJzqvP9CdsTiJwT2rF748YkPnhv5Qo8q44DG7nn2vbyt48YRsNSUYS44jFCW9gwvD9kLQu9AuqXpTpM1c5hgg9PsuBLdeNncid
                        type: string
                      customer:
                        properties:
                          accountingCurrency:
                            description: 'All transaction will be accounted in this currency for all accounts. Currency can be overridden per account level. If not set, EUR is used. ISO-4217'
                            enum:
                              - AED
                              - AFN
                              - ALL
                              - AMD
                              - ANG
                              - AOA
                              - ARS
                              - AUD
                              - AWG
                              - AZN
                              - BAM
                              - BBD
                              - BDT
                              - BGN
                              - BHD
                              - BIF
                              - BMD
                              - BND
                              - BOB
                              - BRL
                              - BSD
                              - BTN
                              - BWP
                              - BYN
                              - BYR
                              - BZD
                              - CAD
                              - CDF
                              - CHF
                              - CLF
                              - CLP
                              - CNY
                              - COP
                              - CRC
                              - CUC
                              - CUP
                              - CVE
                              - CZK
                              - DJF
                              - DKK
                              - DOP
                              - DOGE
                              - DZD
                              - EGP
                              - ERN
                              - ETB
                              - EUR
                              - FJD
                              - FKP
                              - FLOW
                              - FUSD
                              - GBP
                              - GEL
                              - GGP
                              - GHS
                              - GIP
                              - GMD
                              - GNF
                              - GTQ
                              - GYD
                              - HKD
                              - HNL
                              - HRK
                              - HTG
                              - HUF
                              - IDR
                              - ILS
                              - IMP
                              - INR
                              - IQD
                              - IRR
                              - ISK
                              - JEP
                              - JMD
                              - JOD
                              - JPY
                              - KES
                              - KGS
                              - KHR
                              - KMF
                              - KPW
                              - KRW
                              - KWD
                              - KYD
                              - KZT
                              - LAK
                              - LBP
                              - LKR
                              - LRD
                              - LSL
                              - LTL
                              - LVL
                              - LYD
                              - MAD
                              - MDL
                              - MGA
                              - MKD
                              - MMK
                              - MNT
                              - MOP
                              - MRO
                              - MUR
                              - MVR
                              - MWK
                              - MXN
                              - MYR
                              - MZN
                              - NAD
                              - NGN
                              - NIO
                              - NOK
                              - NPR
                              - NZD
                              - OMR
                              - PAB
                              - PEN
                              - PGK
                              - PHP
                              - PKR
                              - PLN
                              - PYG
                              - QAR
                              - RON
                              - RSD
                              - RUB
                              - RWF
                              - SAR
                              - SBD
                              - SCR
                              - SDG
                              - SEK
                              - SGD
                              - SHP
                              - SLL
                              - SOS
                              - SRD
                              - STD
                              - SVC
                              - SYP
                              - SZL
                              - THB
                              - TJS
                              - TMT
                              - TND
                              - TOP
                              - TRY
                              - TTD
                              - TWD
                              - TZS
                              - UAH
                              - UGX
                              - USD
                              - UYU
                              - UZS
                              - VEF
                              - VND
                              - VUV
                              - WST
                              - XAF
                              - XAG
                              - XAU
                              - XCD
                              - XDR
                              - XOF
                              - XPF
                              - YER
                              - ZAR
                              - ZMK
                              - ZMW
                              - ZWL
                            example: USD
                            maxLength: 3
                            minLength: 3
                            type: string
                          customerCountry:
                            description: Country customer has to be compliant with. ISO-3166-1
                            example: US
                            maxLength: 2
                            minLength: 2
                            type: string
                          externalId:
                            description: Customer external ID. Use only anonymized identification you have in your system. If customer with externalId does not exists new customer is created. If customer with specified externalId already exists it is updated.
                            example: '123654'
                            maxLength: 100
                            minLength: 1
                            type: string
                          providerCountry:
                            description: Country service provider has to be compliant with. ISO-3166-1
                            example: US
                            maxLength: 2
                            minLength: 2
                            type: string
                        required:
                          - externalId
                        type: object
                        description: If customer is filled then is created or updated.
                      compliant:
                        description: 'Enable compliant checks. If this is enabled, it is impossible to create account if compliant check fails.'
                        example: false
                        type: boolean
                      accountCode:
                        description: For bookkeeping to distinct account purpose.
                        maxLength: 50
                        minLength: 1
                        example: AC_1011_B
                        type: string
                      accountingCurrency:
                        description: 'All transaction will be accounted in this currency for all accounts. Currency can be overridden per account level. If not set, customer accountingCurrency is used or EUR by default. ISO-4217'
                        enum:
                          - AED
                          - AFN
                          - ALL
                          - AMD
                          - ANG
                          - AOA
                          - ARS
                          - AUD
                          - AWG
                          - AZN
                          - BAM
                          - BBD
                          - BDT
                          - BGN
                          - BHD
                          - BIF
                          - BMD
                          - BND
                          - BOB
                          - BRL
                          - BSD
                          - BTN
                          - BWP
                          - BYN
                          - BYR
                          - BZD
                          - CAD
                          - CDF
                          - CHF
                          - CLF
                          - CLP
                          - CNY
                          - COP
                          - CRC
                          - CUC
                          - CUP
                          - CVE
                          - CZK
                          - DJF
                          - DKK
                          - DOP
                          - DOGE
                          - DZD
                          - EGP
                          - ERN
                          - ETB
                          - EUR
                          - FJD
                          - FKP
                          - FLOW
                          - FUSD
                          - GBP
                          - GEL
                          - GGP
                          - GHS
                          - GIP
                          - GMD
                          - GNF
                          - GTQ
                          - GYD
                          - HKD
                          - HNL
                          - HRK
                          - HTG
                          - HUF
                          - IDR
                          - ILS
                          - IMP
                          - INR
                          - IQD
                          - IRR
                          - ISK
                          - JEP
                          - JMD
                          - JOD
                          - JPY
                          - KES
                          - KGS
                          - KHR
                          - KMF
                          - KPW
                          - KRW
                          - KWD
                          - KYD
                          - KZT
                          - LAK
                          - LBP
                          - LKR
                          - LRD
                          - LSL
                          - LTL
                          - LVL
                          - LYD
                          - MAD
                          - MDL
                          - MGA
                          - MKD
                          - MMK
                          - MNT
                          - MOP
                          - MRO
                          - MUR
                          - MVR
                          - MWK
                          - MXN
                          - MYR
                          - MZN
                          - NAD
                          - NGN
                          - NIO
                          - NOK
                          - NPR
                          - NZD
                          - OMR
                          - PAB
                          - PEN
                          - PGK
                          - PHP
                          - PKR
                          - PLN
                          - PYG
                          - QAR
                          - RON
                          - RSD
                          - RUB
                          - RWF
                          - SAR
                          - SBD
                          - SCR
                          - SDG
                          - SEK
                          - SGD
                          - SHP
                          - SLL
                          - SOS
                          - SRD
                          - STD
                          - SVC
                          - SYP
                          - SZL
                          - THB
                          - TJS
                          - TMT
                          - TND
                          - TOP
                          - TRY
                          - TTD
                          - TWD
                          - TZS
                          - UAH
                          - UGX
                          - USD
                          - UYU
                          - UZS
                          - VEF
                          - VND
                          - VUV
                          - WST
                          - XAF
                          - XAG
                          - XAU
                          - XCD
                          - XDR
                          - XOF
                          - XPF
                          - YER
                          - ZAR
                          - ZMK
                          - ZMW
                          - ZWL
                        example: USD
                        maxLength: 3
                        minLength: 3
                        type: string
                      accountNumber:
                        description: Account number from external system.
                        maxLength: 50
                        minLength: 1
                        example: '123456'
                        type: string
                    required:
                      - currency
                    type: object
              required:
                - accounts
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      description: Account ID.
                      example: 5e68c66581f2ee32bc354087
                      type: string
                    balance:
                      properties:
                        accountBalance:
                          description: 'Account balance represents all assets on the account, available and blocked.'
                          example: '1000000'
                          type: string
                        availableBalance:
                          description: Available balance on the account represents account balance minus blocked amount on the account. Available balance should be user do determine how much can customer send or withdraw from the account.
                          example: '1000000'
                          type: string
                      type: object
                      required:
                        - accountBalance
                        - availableBalance
                    currency:
                      description: Currency of account.
                      example: BTC
                      type: string
                    frozen:
                      description: Indicates whether account is frozen or not.
                      example: false
                      type: boolean
                    active:
                      description: Indicates whether account is active or not.
                      example: true
                      type: boolean
                    customerId:
                      description: ID of newly created customer or existing customer associated with account.
                      type: string
                      example: 5e68c66581f2ee32bc354087
                    accountCode:
                      description: For bookkeeping to distinct account purpose.
                      example: 03_ACC_01
                      type: string
                    accountingCurrency:
                      description: All transaction will be accounted in this currency for all accounts.
                      example: EUR
                      type: string
                    xpub:
                      description: Extended public key to generate addresses from.
                      example: xpub6FB4LJzdKNkkpsjggFAGS2p34G48pqjtmSktmK2Ke3k1LKqm9ULsg8bGfDakYUrdhe2EHw5uGKX9DrMbrgYnVfDwrksT4ZVQ3vmgEruo3Ka
                      type: string
                  required:
                    - id
                    - active
                    - frozen
                    - currency
                    - balance
                  type: object
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to perform the required operation due to a logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: compliance.country.btc.not.supported
                        example: compliance.country.btc.not.supported
                        type: string
                      message:
                        description: Customer country not supported for BTC.
                        example: Customer country not supported for BTC.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: compliance.country.eth.not.supported
                        example: compliance.country.eth.not.supported
                        type: string
                      message:
                        description: Customer country not supported for ETH.
                        example: Customer country not supported for ETH.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: account.blockchain.testnet
                        example: account.blockchain.testnet
                        type: string
                      message:
                        description: 'Unable to create account, unsupported testnet blockchain.'
                        example: 'Unable to create account, unsupported testnet blockchain.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: account.xpub.present
                        example: account.xpub.present
                        type: string
                      message:
                        description: 'Unable to create ${account.currency} account with xpub.'
                        example: 'Unable to create ${account.currency} account with xpub.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: ledger.currency.invalid
                        example: ledger.currency.invalid
                        type: string
                      message:
                        description: 'Unable to create an account, unsupported currency.'
                        example: 'Unable to create an account, unsupported currency.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: account.xpub.incompatible
                        example: account.xpub.incompatible
                        type: string
                      message:
                        description: Xpub not compatible with account currency.
                        example: Xpub not compatible with account currency.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: Address.generation.failed.wrong.xpub
                        example: address.generation.failed.wrong.xpub
                        type: string
                      message:
                        description: 'Unable to generate address, wrong xpub and account type.'
                        example: 'Unable to generate address, wrong xpub and account type.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: Address.generation.failed
                        example: address.generation.failed
                        type: string
                      message:
                        description: Unable to generate address.
                        example: Unable to generate address.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: customer.not.exists
                        example: customer.not.exists
                        type: string
                      message:
                        description: 'No customer with given external ID ${externalId} exists.'
                        example: 'No customer with given external ID ${externalId} exists.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: customer.not.active
                        example: customer.not.active
                        type: string
                      message:
                        description: Customer not active.
                        example: Customer not active.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/ledger/account/customer/{id}':
    get:
      description: <h4>1 credit per API call.</h4><br/><p>Lists all accounts associated with a customer. Only active accounts are visible.</p>
      operationId: getAccountsByCustomerId
      summary: List all customer accounts
      tags:
        - List accounts
      parameters:
        - description: Max number of items per page is 50.
          in: query
          name: pageSize
          schema:
            type: number
            example: 10
            maximum: 50
            minimum: 1
          required: true
        - description: Offset to obtain the next page of data.
          in: query
          name: offset
          schema:
            type: number
            example: 0
        - description: Internal customer ID
          in: path
          name: id
          required: true
          schema:
            example: 5e68c66581f2ee32bc354087
            type: string
        - description: For bookkeeping to distinct account purpose.
          in: query
          name: accountCode
          schema:
            maxLength: 50
            example: AC_1011_B
            minLength: 1
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    id:
                      description: Account ID.
                      example: 5e68c66581f2ee32bc354087
                      type: string
                    balance:
                      properties:
                        accountBalance:
                          description: 'Account balance represents all assets on the account, available and blocked.'
                          example: '1000000'
                          type: string
                        availableBalance:
                          description: Available balance on the account represents account balance minus blocked amount on the account. Available balance should be user do determine how much can customer send or withdraw from the account.
                          example: '1000000'
                          type: string
                      type: object
                      required:
                        - accountBalance
                        - availableBalance
                    currency:
                      description: Currency of account.
                      example: BTC
                      type: string
                    frozen:
                      description: Indicates whether account is frozen or not.
                      example: false
                      type: boolean
                    active:
                      description: Indicates whether account is active or not.
                      example: true
                      type: boolean
                    customerId:
                      description: ID of newly created customer or existing customer associated with account.
                      type: string
                      example: 5e68c66581f2ee32bc354087
                    accountCode:
                      description: For bookkeeping to distinct account purpose.
                      example: 03_ACC_01
                      type: string
                    accountingCurrency:
                      description: All transaction will be accounted in this currency for all accounts.
                      example: EUR
                      type: string
                    xpub:
                      description: Extended public key to generate addresses from.
                      example: xpub6FB4LJzdKNkkpsjggFAGS2p34G48pqjtmSktmK2Ke3k1LKqm9ULsg8bGfDakYUrdhe2EHw5uGKX9DrMbrgYnVfDwrksT4ZVQ3vmgEruo3Ka
                      type: string
                  required:
                    - id
                    - active
                    - frozen
                    - currency
                    - balance
                  type: object
                type: array
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/ledger/account/{id}':
    get:
      description: <h4>1 credit per API call.</h4><br/><p>Gets active account by ID. Displays all information regarding the given account.</p>
      operationId: getAccountByAccountId
      summary: Get account by ID
      tags:
        - List accounts
      parameters:
        - description: Account ID
          in: path
          name: id
          required: true
          schema:
            type: string
            example: 5e68c66581f2ee32bc354087
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  id:
                    description: Account ID.
                    example: 5e68c66581f2ee32bc354087
                    type: string
                  balance:
                    properties:
                      accountBalance:
                        description: 'Account balance represents all assets on the account, available and blocked.'
                        example: '1000000'
                        type: string
                      availableBalance:
                        description: Available balance on the account represents account balance minus blocked amount on the account. Available balance should be user do determine how much can customer send or withdraw from the account.
                        example: '1000000'
                        type: string
                    type: object
                    required:
                      - accountBalance
                      - availableBalance
                  currency:
                    description: Currency of account.
                    example: BTC
                    type: string
                  frozen:
                    description: Indicates whether account is frozen or not.
                    example: false
                    type: boolean
                  active:
                    description: Indicates whether account is active or not.
                    example: true
                    type: boolean
                  customerId:
                    description: ID of newly created customer or existing customer associated with account.
                    type: string
                    example: 5e68c66581f2ee32bc354087
                  accountCode:
                    description: For bookkeeping to distinct account purpose.
                    example: 03_ACC_01
                    type: string
                  accountingCurrency:
                    description: All transaction will be accounted in this currency for all accounts.
                    example: EUR
                    type: string
                  xpub:
                    description: Extended public key to generate addresses from.
                    example: xpub6FB4LJzdKNkkpsjggFAGS2p34G48pqjtmSktmK2Ke3k1LKqm9ULsg8bGfDakYUrdhe2EHw5uGKX9DrMbrgYnVfDwrksT4ZVQ3vmgEruo3Ka
                    type: string
                required:
                  - id
                  - active
                  - frozen
                  - currency
                  - balance
                type: object
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to perform the required operation due to a logical error or invalid permissions.'
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    description: account.not.exists
                    example: account.not.exists
                    type: string
                  message:
                    description: No such account.
                    example: No such account.
                    type: string
                  statusCode:
                    description: '403'
                    example: 403
                    type: number
                required:
                  - errorCode
                  - message
                  - statusCode
                type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
    put:
      description: <h4>2 credits per API call.</h4><br/><p>Update account by ID. Only a small number of fields can be updated.</p>
      operationId: updateAccountByAccountId
      summary: Update account
      tags:
        - Account operations
      parameters:
        - description: Account ID
          in: path
          name: id
          required: true
          schema:
            type: string
            example: 5e68c66581f2ee32bc354087
      requestBody:
        content:
          application/json:
            schema:
              properties:
                accountCode:
                  description: For bookkeeping to distinct account purpose.
                  maxLength: 50
                  minLength: 1
                  example: AC_1011_B
                  type: string
                accountNumber:
                  description: Account number from external system.
                  maxLength: 50
                  minLength: 1
                  example: '123456'
                  type: string
              type: object
        required: true
      responses:
        '204':
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to perform the required operation due to a logical error or invalid permissions.'
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    description: account.not.exists
                    example: account.not.exists
                    type: string
                  message:
                    description: No such account.
                    example: No such account.
                    type: string
                  statusCode:
                    description: '403'
                    example: 403
                    type: number
                required:
                  - errorCode
                  - message
                  - statusCode
                type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/ledger/account/{id}/balance':
    get:
      description: <h4>1 credit per API call.</h4><br/><p>Get balance for the account.</p>
      operationId: getAccountBalance
      summary: Get account balance
      tags:
        - List accounts
      parameters:
        - description: Account ID
          in: path
          name: id
          required: true
          schema:
            type: string
            example: 5e68c66581f2ee32bc354087
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  accountBalance:
                    description: 'Account balance represents all assets on the account, available and blocked.'
                    example: '1000000'
                    type: string
                  availableBalance:
                    description: Available balance on the account represents account balance minus blocked amount on the account. Available balance should be user do determine how much can customer send or withdraw from the account.
                    example: '1000000'
                    type: string
                type: object
                required:
                  - accountBalance
                  - availableBalance
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to perform the required operation due to a logical error or invalid permissions.'
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    description: account.not.exists
                    example: account.not.exists
                    type: string
                  message:
                    description: No such account.
                    example: No such account.
                    type: string
                  statusCode:
                    description: '403'
                    example: 403
                    type: number
                required:
                  - errorCode
                  - message
                  - statusCode
                type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/ledger/account/block/{id}':
    post:
      description: |
        <h4>2 credits per API call.</h4><br/>
        <p>Blocks an amount in an account. Any number of distinct amounts can be blocked in one account.
        Every new blockage has its own distinct ID, which is used as a reference. When the amount is blocked, it is debited from the available balance of the account.
        The account balance remains the same. The account balance represents the total amount of funds in the account. The available balance represents the total amount of funds that can be used to perform transactions. When an account is frozen, the available balance is set to 0 minus all blockages for the account.</p>
      operationId: blockAmount
      summary: Block an amount in an account
      tags:
        - Account operations
      parameters:
        - description: Account ID
          in: path
          name: id
          required: true
          schema:
            type: string
            example: 5e6be89ee6aa436299950c3f
      requestBody:
        content:
          application/json:
            schema:
              properties:
                amount:
                  description: Amount to be blocked on account.
                  maxLength: 38
                  pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                  example: '5'
                  type: string
                type:
                  description: Type of blockage.
                  type: string
                  minLength: 1
                  maxLength: 100
                  example: DEBIT_CARD_OP
                description:
                  description: Description of blockage.
                  type: string
                  minLength: 1
                  maxLength: 300
                  example: Card payment in the shop.
              required:
                - amount
                - type
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: ID of the entity.
                    example: 5e68c66581f2ee32bc354087
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to perform the required operation due to a logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: account.not.exists
                        example: account.not.exists
                        type: string
                      message:
                        description: No such account.
                        example: No such account.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: customer.not.exists
                        example: customer.not.exists
                        type: string
                      message:
                        description: 'No customer with given external ID ${externalId} exists.'
                        example: 'No customer with given external ID ${externalId} exists.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
    put:
      description: |
        <h4>2 credits per API call.</h4><br/>
        <p>Unblocks a previously blocked amount in an account and invokes a ledger transaction from that account to a different recipient.
        If the request fails, the amount is not unblocked.</p>
      operationId: unblockAmountWithTransaction
      summary: Unblock an amount in an account and perform a transaction
      tags:
        - Account operations
      parameters:
        - description: Blockage ID
          in: path
          name: id
          required: true
          schema:
            type: string
            example: 5e6be89ee6aa436299950c3f
      requestBody:
        content:
          application/json:
            schema:
              properties:
                recipientAccountId:
                  description: Internal recipient account ID within Tatum platform
                  example: 5e6645712b55823de7ea82f2
                  maxLength: 24
                  minLength: 24
                  type: string
                amount:
                  description: Amount to be sent. Amount can be smaller then the blocked amount.
                  maxLength: 38
                  example: '5'
                  type: string
                  pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                anonymous:
                  default: false
                  description: 'Anonymous transaction does not show sender account to recipient, default is false'
                  example: false
                  type: boolean
                compliant:
                  description: 'Enable compliant checks. Transaction will not be processed, if compliant check fails.'
                  example: false
                  type: boolean
                transactionCode:
                  description: For bookkeeping to distinct transaction purpose.
                  example: 1_01_EXTERNAL_CODE
                  maxLength: 100
                  minLength: 1
                  type: string
                paymentId:
                  description: 'Payment ID, External identifier of the payment, which can be used to pair transactions within Tatum accounts.'
                  example: '9625'
                  maxLength: 100
                  minLength: 1
                  type: string
                recipientNote:
                  description: 'Note visible to both, sender and recipient'
                  example: Private note
                  maxLength: 500
                  minLength: 1
                  type: string
                baseRate:
                  type: number
                  example: 1
                  default: 1
                  minimum: 0
                  description: Exchange rate of the base pair. Only applicable for Tatum's Virtual currencies Virtual transactions. Override default exchange rate for the Virtual Currency.
                senderNote:
                  description: Note visible to sender
                  example: Sender note
                  maxLength: 500
                  minLength: 1
                  type: string
              required:
                - amount
                - recipientAccountId
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  reference:
                    description: 'Transaction internal reference - unique identifier within Tatum Virtual account. In order of failure, use this value to search for problems.'
                    example: 0c64cc04-5412-4e57-a51c-ee5727939bcb
                    type: string
                type: object
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to perform the required operation due to a logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: blockage.not.exists
                        example: blockage.not.exists
                        type: string
                      message:
                        description: No such blockage.
                        example: No such blockage.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: blockage.amount.exceeded
                        example: blockage.amount.exceeded
                        type: string
                      message:
                        description: Amount to transfer is greater then amount of the blockage.
                        example: Amount to transfer is greater then amount of the blockage.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.format
                        example: amount.format
                        type: string
                      message:
                        description: Amount has incorrect format.
                        example: Amount has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.not.exists
                        example: senderAccount.not.exists
                        type: string
                      message:
                        description: 'Unable to find sender account ${transaction.senderAccountId}.'
                        example: 'Unable to find sender account ${transaction.senderAccountId}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: compliance.country.btc.not.supported
                        example: compliance.country.btc.not.supported
                        type: string
                      message:
                        description: Customer country not supported for BTC.
                        example: Customer country not supported for BTC.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: compliance.country.eth.not.supported
                        example: compliance.country.eth.not.supported
                        type: string
                      message:
                        description: Customer country not supported for ETH.
                        example: Customer country not supported for ETH.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: rate.not.found
                        example: rate.not.found
                        type: string
                      message:
                        description: No such currency rate.
                        example: No such currency rate.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: vc.not.found
                        example: vc.not.found
                        type: string
                      message:
                        description: No such virtual currency.
                        example: No such virtual currency.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.frozen
                        example: senderAccount.frozen
                        type: string
                      message:
                        description: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        example: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.customer.disabled
                        example: senderAccount.customer.disabled
                        type: string
                      message:
                        description: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        example: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: recipientAccount.not.exists
                        example: recipientAccount.not.exists
                        type: string
                      message:
                        description: 'Unable to find recipient account ${transaction.recipientAccountId}.'
                        example: 'Unable to find recipient account ${transaction.recipientAccountId}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: transaction.currency.incompatible
                        example: transaction.currency.incompatible
                        type: string
                      message:
                        description: 'Incompatible currencies for sender account ${transaction.senderAccountId} and recipient account ${transaction.recipientAccountId}.'
                        example: 'Incompatible currencies for sender account ${transaction.senderAccountId} and recipient account ${transaction.recipientAccountId}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: balance.insufficient
                        example: balance.insufficient
                        type: string
                      message:
                        description: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        example: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.btc
                        example: amount.btc
                        type: string
                      message:
                        description: 'BTC|LTC|BCH payment amount must be at least 0.00000000000001, not ${transaction.amount}.'
                        example: 'BTC|LTC|BCH payment amount must be at least 0.00000000000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: transaction.amount.ada
                        example: transaction.amount.ada
                        type: string
                      message:
                        description: 'ADA payment amount must be at least 0.000001, not ${transaction.amount}.'
                        example: 'ADA payment amount must be at least 0.000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.eth
                        example: amount.eth
                        type: string
                      message:
                        description: 'ETH payment amount must be at least 0.000000000001, not ${transaction.amount}.'
                        example: 'ETH payment amount must be at least 0.000000000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: transaction.not.compliant
                        example: transaction.not.compliant
                        type: string
                      message:
                        description: 'Transaction not compliant, recipient account customer country is not defined.'
                        example: 'Transaction not compliant, recipient account customer country is not defined.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
    delete:
      description: <h4>1 credit per API call.</h4><br/><p>Unblocks a previously blocked amount in an account. Increases the available balance in the account where the amount was blocked.</p>
      operationId: deleteBlockAmount
      summary: Unblock a blocked amount in an account
      tags:
        - Account operations
      parameters:
        - description: Blockage ID
          in: path
          name: id
          required: true
          schema:
            type: string
            example: 5e6be89ee6aa436299950c3f
      responses:
        '204':
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
    get:
      description: <h4>1 credit per API call.</h4><br/><p>Gets blocked amounts for an account.</p>
      operationId: getBlockAmount
      summary: Get blocked amounts in an account
      tags:
        - List accounts
      parameters:
        - description: Account ID
          in: path
          name: id
          required: true
          schema:
            type: string
            example: 5e6be89ee6aa436299950c3f
        - description: Max number of items per page is 50.
          in: query
          name: pageSize
          schema:
            type: number
            example: 10
            maximum: 50
            minimum: 1
          required: true
        - description: Offset to obtain the next page of data.
          in: query
          name: offset
          schema:
            type: number
            example: 0
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      description: ID of the blockage.
                      type: string
                      example: 5e68c66581f2ee32bc354087
                    accountId:
                      description: ID of the account this blockage is for.
                      type: string
                      example: 5e68c66581f2ee32bc354087
                    amount:
                      description: Amount blocked on account.
                      example: '5'
                      type: string
                    type:
                      description: Type of blockage.
                      type: string
                      example: DEBIT_CARD_OP
                    description:
                      description: Description of blockage.
                      type: string
                      example: Card payment in the shop.
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/ledger/account/block/{id}/detail':
    get:
      description: <h4>1 credit per API call.</h4><br/><p>Gets blocked amount by id.</p>
      operationId: getBlockAmountById
      summary: Get blocked amount by ID
      tags:
        - List accounts
      parameters:
        - description: Blocked amount ID
          in: path
          name: id
          required: true
          schema:
            type: string
            example: 5e6be89ee6aa436299950c3f
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  id:
                    description: ID of the blockage.
                    type: string
                    example: 5e68c66581f2ee32bc354087
                  accountId:
                    description: ID of the account this blockage is for.
                    type: string
                    example: 5e68c66581f2ee32bc354087
                  amount:
                    description: Amount blocked on account.
                    example: '5'
                    type: string
                  type:
                    description: Type of blockage.
                    type: string
                    example: DEBIT_CARD_OP
                  description:
                    description: Description of blockage.
                    type: string
                    example: Card payment in the shop.
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/ledger/account/block/account/{id}':
    delete:
      description: '<h4>1 credit per API call, 1 credit for each deleted blockage. 1 API call + 2 blockages  = 3 credits.</h4><br/><p>Unblocks previously blocked amounts in an account. Increases the available balance in the account where the amount was blocked.</p>'
      operationId: deleteAllBlockAmount
      summary: Unblock all blocked amounts in an account
      tags:
        - Account operations
      parameters:
        - description: Account ID
          in: path
          name: id
          required: true
          schema:
            type: string
            example: 5e6be89ee6aa436299950c3f
      responses:
        '204':
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to perform the required operation due to a logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: account.not.exists
                        example: account.not.exists
                        type: string
                      message:
                        description: No such account.
                        example: No such account.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: customer.not.exists
                        example: customer.not.exists
                        type: string
                      message:
                        description: 'No customer with given external ID ${externalId} exists.'
                        example: 'No customer with given external ID ${externalId} exists.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: customer.blockage.inactive
                        example: customer.blockage.inactive
                        type: string
                      message:
                        description: Unable to delete blockages on account for inactive customer.
                        example: Unable to delete blockages on account for inactive customer.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/ledger/account/{id}/activate':
    put:
      description: <h4>2 credits per API call.</h4><br/><p>Activates an account.</p>
      operationId: activateAccount
      summary: Activate account
      tags:
        - Account security
      parameters:
        - description: Account ID
          in: path
          name: id
          required: true
          schema:
            type: string
            example: 5e68c66581f2ee32bc354087
      responses:
        '204':
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to perform the required operation due a to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: account.not.exists
                        example: account.not.exists
                        type: string
                      message:
                        description: No such account.
                        example: No such account.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: account.active
                        example: account.active
                        type: string
                      message:
                        description: Unable to activate active account.
                        example: Unable to activate active account.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: customer.not.exists
                        example: customer.not.exists
                        type: string
                      message:
                        description: 'No customer with given external ID ${externalId} exists.'
                        example: 'No customer with given external ID ${externalId} exists.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: account.customer.inactive
                        example: account.customer.inactive
                        type: string
                      message:
                        description: 'Unable to activate account, customer inactive.'
                        example: 'Unable to activate account, customer inactive.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/ledger/account/{id}/deactivate':
    put:
      description: '<h4>2 credits per API call.</h4><br/><p>Deactivates an account. Only accounts with account and available balances of zero can be deactivated. Deactivated accounts are not visible in the list of accounts, it is not possible to send funds to these accounts or perform transactions. However, they are still present in the ledger and all transaction histories.</p>'
      operationId: deactivateAccount
      summary: Deactivate account
      tags:
        - Account security
      parameters:
        - description: Account ID
          in: path
          name: id
          required: true
          schema:
            type: string
            example: 5e68c66581f2ee32bc354087
      responses:
        '204':
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to perform the required operation due to a logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: account.not.exists
                        example: account.not.exists
                        type: string
                      message:
                        description: No such account.
                        example: No such account.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: account.inactive
                        example: account.inactive
                        type: string
                      message:
                        description: Unable to deactivate inactive account.
                        example: Unable to deactivate inactive account.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: account.balance.non.zero
                        example: account.balance.non.zero
                        type: string
                      message:
                        description: Unable to deactivate account with non-zero balance.
                        example: Unable to deactivate account with non-zero balance.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: account.trade.non.zero
                        example: account.trade.non.zero
                        type: string
                      message:
                        description: Unable to deactivate account with non-zero exchange trades.
                        example: Unable to deactivate account with non-zero exchange trades.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/ledger/account/{id}/freeze':
    put:
      description: '<h4>2 credits per API call.</h4><br/><p>Disables all outgoing transactions. Incoming transactions to the account are available. When an account is frozen, its available balance is set to 0. This operation will create a new blockage of type ACCOUNT_FROZEN, which is automatically deleted when the account is unfrozen.</p>'
      operationId: freezeAccount
      summary: Freeze account
      tags:
        - Account security
      parameters:
        - description: Account ID
          in: path
          name: id
          required: true
          schema:
            type: string
            example: 5e68c66581f2ee32bc354087
      responses:
        '204':
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to perform the required operation due to a logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: account.not.exists
                        example: account.not.exists
                        type: string
                      message:
                        description: No such account.
                        example: No such account.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: account.frozen
                        example: account.frozen
                        type: string
                      message:
                        description: Unable to freeze frozen account.
                        example: Unable to freeze frozen account.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/ledger/account/{id}/unfreeze':
    put:
      description: <h4>2 credits per API call.</h4><br/><p>Unfreezes a previously frozen account. Unfreezing a non-frozen account not affect the account.</p>
      operationId: unfreezeAccount
      summary: Unfreeze account
      tags:
        - Account security
      parameters:
        - description: Account ID
          in: path
          name: id
          required: true
          schema:
            type: string
            example: 5e68c66581f2ee32bc354087
      responses:
        '204':
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to perform the required operation due to a logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: account.not.exists
                        example: account.not.exists
                        type: string
                      message:
                        description: No such account.
                        example: No such account.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: account.not.frozen
                        example: account.not.frozen
                        type: string
                      message:
                        description: Unable to unfreeze unfrozen account.
                        example: Unable to unfreeze unfrozen account.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
components:
  securitySchemes:
    X-Api-Key:
      description: |
        To maintain the highest security level, Tatum requires X-API-Key HTTP header.
        This X-API-Key represents identification of the plan and can be used by 1 developer or per environment.
        Each X-API-Key is bound to the test or production blockchains.
      in: header
      name: x-api-key
      type: apiKey
