openapi: 3.1.0
info:
  contact: {}
  title: Transactions
  version: 3.9.4
  x-logo:
    url: 'https://tatum.io/images/logo.svg'
    altText: Tatum
  description: |-
      <p>An endpoint used to create and list transactions within Tatum Private Ledger. A transaction is performed between 2 accounts with the same currency. To perform an exchange operation between accounts with different currencies, API calls from <a href="#tag/Ledger-Order-Book">Order Book</a> sections are available. Transactions in the ledger are instant, with a settlement time of below 200ms.<br/>
      Tatum Private Ledger supports microtransactions - a transaction of an amount as little as 1e-30 (30 decimal places). Transactions are atomic.<br/>
      When there is an insufficient balance in the sender account, or recipient account cannot receive funds, the transaction is not settled.</p>
servers:
  - url: 'https://api-eu1.tatum.io'
  - url: 'https://api-us-west1.tatum.io'
tags:
  - description: ''
    name: Payments
  - description: ''
    name: List transcations
  - description: ''
    name: Withdrawal operations
  - description: ''
    name: Offchain withdrawal
paths:
  /v3/ledger/transaction:
    post:
      description: |
        <h4>4 credits per API call.</h4><br/>
        <p>Sends a payment within Tatum Private Ledger. All assets are settled instantly.<br/>
        When a transaction is settled, 2 transaction records are created, 1 for each of the participants. These 2 records are connected via a transaction reference, which is the same for both of them.<br/>
        This method is only used for transferring assets between accounts within Tatum and will not send any funds to blockchain addresses.<br/>
        If there is an insufficient balance in the sender account, no transaction is recorded.<br/>
        It is possible to perform an anonymous transaction where the sender account is not visible for the recipient.<br/>
        The FIAT currency value of every transaction is calculated automatically. The FIAT value is based on the accountingCurrency of the account connected to the transaction and is available in the marketValue parameter of the transaction.</p>
      operationId: sendTransaction
      summary: Send payment
      tags:
        - Payments
      requestBody:
        content:
          application/json:
            schema:
              properties:
                senderAccountId:
                  description: Internal sender account ID within Tatum platform
                  example: 5e6645712b55823de7ea82f1
                  maxLength: 24
                  minLength: 24
                  type: string
                recipientAccountId:
                  description: Internal recipient account ID within Tatum platform
                  example: 5e6645712b55823de7ea82f2
                  maxLength: 24
                  minLength: 24
                  type: string
                amount:
                  description: Amount to be sent.
                  maxLength: 38
                  example: '5'
                  type: string
                  pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                anonymous:
                  default: false
                  description: 'Anonymous transaction does not show sender account to recipient, default is false'
                  example: false
                  type: boolean
                compliant:
                  description: 'Enable compliant checks. Transaction will not be processed, if compliant check fails.'
                  example: false
                  type: boolean
                transactionCode:
                  description: For bookkeeping to distinct transaction purpose.
                  example: 1_01_EXTERNAL_CODE
                  maxLength: 100
                  minLength: 1
                  type: string
                paymentId:
                  description: 'Payment ID, External identifier of the payment, which can be used to pair transactions within Tatum accounts.'
                  example: '9625'
                  maxLength: 100
                  minLength: 1
                  type: string
                recipientNote:
                  description: 'Note visible to both, sender and recipient'
                  example: Private note
                  maxLength: 500
                  minLength: 1
                  type: string
                baseRate:
                  type: number
                  example: 1
                  default: 1
                  minimum: 0
                  description: Exchange rate of the base pair. Only applicable for Tatum's Virtual currencies Ledger transactions. Override default exchange rate for the Virtual Currency.
                senderNote:
                  description: Note visible to sender
                  example: Sender note
                  maxLength: 500
                  minLength: 1
                  type: string
              required:
                - amount
                - recipientAccountId
                - senderAccountId
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  reference:
                    description: 'Transaction internal reference - unique identifier within Tatum ledger. In order of failure, use this value to search for problems.'
                    example: 0c64cc04-5412-4e57-a51c-ee5727939bcb
                    type: string
                type: object
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to perform the required operation due to a logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: amount.format
                        example: amount.format
                        type: string
                      message:
                        description: Amount has incorrect format.
                        example: Amount has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.not.exists
                        example: senderAccount.not.exists
                        type: string
                      message:
                        description: 'Unable to find sender account ${transaction.senderAccountId}.'
                        example: 'Unable to find sender account ${transaction.senderAccountId}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: compliance.country.btc.not.supported
                        example: compliance.country.btc.not.supported
                        type: string
                      message:
                        description: Customer country not supported for BTC.
                        example: Customer country not supported for BTC.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: compliance.country.eth.not.supported
                        example: compliance.country.eth.not.supported
                        type: string
                      message:
                        description: Customer country not supported for ETH.
                        example: Customer country not supported for ETH.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: rate.not.found
                        example: rate.not.found
                        type: string
                      message:
                        description: No such currency rate.
                        example: No such currency rate.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: vc.not.found
                        example: vc.not.found
                        type: string
                      message:
                        description: No such virtual currency.
                        example: No such virtual currency.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.frozen
                        example: senderAccount.frozen
                        type: string
                      message:
                        description: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        example: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.customer.disabled
                        example: senderAccount.customer.disabled
                        type: string
                      message:
                        description: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        example: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: recipientAccount.not.exists
                        example: recipientAccount.not.exists
                        type: string
                      message:
                        description: 'Unable to find recipient account ${transaction.recipientAccountId}.'
                        example: 'Unable to find recipient account ${transaction.recipientAccountId}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: transaction.currency.incompatible
                        example: transaction.currency.incompatible
                        type: string
                      message:
                        description: 'Incompatible currencies for sender account ${transaction.senderAccountId} and recipient account ${transaction.recipientAccountId}.'
                        example: 'Incompatible currencies for sender account ${transaction.senderAccountId} and recipient account ${transaction.recipientAccountId}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: balance.insufficient
                        example: balance.insufficient
                        type: string
                      message:
                        description: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        example: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.btc
                        example: amount.btc
                        type: string
                      message:
                        description: 'BTC|LTC|BCH payment amount must be at least 0.00000000000001, not ${transaction.amount}.'
                        example: 'BTC|LTC|BCH payment amount must be at least 0.00000000000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: transaction.amount.ada
                        example: transaction.amount.ada
                        type: string
                      message:
                        description: 'ADA payment amount must be at least 0.000001, not ${transaction.amount}.'
                        example: 'ADA payment amount must be at least 0.000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.eth
                        example: amount.eth
                        type: string
                      message:
                        description: 'ETH payment amount must be at least 0.000000000001, not ${transaction.amount}.'
                        example: 'ETH payment amount must be at least 0.000000000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: transaction.not.compliant
                        example: transaction.not.compliant
                        type: string
                      message:
                        description: 'Transaction not compliant, recipient account customer country is not defined.'
                        example: 'Transaction not compliant, recipient account customer country is not defined.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  /v3/ledger/transaction/batch:
    post:
      description: |
        <h4>2 + 2 * N per API call. (N - count of transactions)</h4><br/>
        <p>Sends the N payments within Tatum Private Ledger. All assets are settled instantly.<br/>
        When a transaction is settled, 2 transaction records are created, 1 for each of the participants. These 2 records are connected via a transaction reference, which is the same for both of them.<br/>
        This method is only used for transferring assets between accounts within Tatum and will not send any funds to blockchain addresses.<br/>
        If there is an insufficient balance in the sender account, no transaction is recorded.<br/>
        It is possible to perform an anonymous transaction where the sender account is not visible for the recipient.<br/>
        The FIAT currency value of every transaction is calculated automatically. The FIAT value is based on the accountingCurrency of the account connected to the transaction and is available in the marketValue parameter of the transaction.</p>
      operationId: sendTransactionBatch
      summary: Send payment in batch
      tags:
        - Payments
      requestBody:
        content:
          application/json:
            schema:
              properties:
                senderAccountId:
                  description: Internal sender account ID within Tatum platform
                  example: 5e6645712b55823de7ea82f1
                  maxLength: 24
                  minLength: 24
                  type: string
                transaction:
                  description: Array of block seals.
                  type: array
                  items:
                    type: object
                    required:
                      - amount
                      - recipientAccountId
                    properties:
                      recipientAccountId:
                        description: Internal recipient account ID within Tatum platform
                        example: 5e6645712b55823de7ea82f2
                        maxLength: 24
                        minLength: 24
                        type: string
                      amount:
                        description: Amount to be sent.
                        maxLength: 38
                        example: '5'
                        type: string
                        pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                      anonymous:
                        default: false
                        description: 'Anonymous transaction does not show sender account to recipient, default is false'
                        example: false
                        type: boolean
                      compliant:
                        description: 'Enable compliant checks. Transaction will not be processed, if compliant check fails.'
                        example: false
                        type: boolean
                      transactionCode:
                        description: For bookkeeping to distinct transaction purpose.
                        example: 1_01_EXTERNAL_CODE
                        maxLength: 100
                        minLength: 1
                        type: string
                      paymentId:
                        description: 'Payment ID, External identifier of the payment, which can be used to pair transactions within Tatum accounts.'
                        example: '9625'
                        maxLength: 100
                        minLength: 1
                        type: string
                      recipientNote:
                        description: 'Note visible to both, sender and recipient'
                        example: Private note
                        maxLength: 500
                        minLength: 1
                        type: string
                      baseRate:
                        type: number
                        example: 1
                        default: 1
                        minimum: 0
                        description: Exchange rate of the base pair. Only applicable for Tatum's Virtual currencies Ledger transactions. Override default exchange rate for the Virtual Currency.
                      senderNote:
                        description: Note visible to sender
                        example: Sender note
                        maxLength: 500
                        minLength: 1
                        type: string
              required:
                - senderAccountId
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    reference:
                      description: 'Transaction internal reference - unique identifier within Tatum ledger. In order of failure, use this value to search for problems.'
                      example: 0c64cc04-5412-4e57-a51c-ee5727939bcb
                      type: string
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to perform the required operation due to a logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: amount.format
                        example: amount.format
                        type: string
                      message:
                        description: Amount has incorrect format.
                        example: Amount has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.not.exists
                        example: senderAccount.not.exists
                        type: string
                      message:
                        description: 'Unable to find sender account ${transaction.senderAccountId}.'
                        example: 'Unable to find sender account ${transaction.senderAccountId}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: compliance.country.btc.not.supported
                        example: compliance.country.btc.not.supported
                        type: string
                      message:
                        description: Customer country not supported for BTC.
                        example: Customer country not supported for BTC.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: compliance.country.eth.not.supported
                        example: compliance.country.eth.not.supported
                        type: string
                      message:
                        description: Customer country not supported for ETH.
                        example: Customer country not supported for ETH.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: rate.not.found
                        example: rate.not.found
                        type: string
                      message:
                        description: No such currency rate.
                        example: No such currency rate.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: vc.not.found
                        example: vc.not.found
                        type: string
                      message:
                        description: No such virtual currency.
                        example: No such virtual currency.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.frozen
                        example: senderAccount.frozen
                        type: string
                      message:
                        description: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        example: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.customer.disabled
                        example: senderAccount.customer.disabled
                        type: string
                      message:
                        description: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        example: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: recipientAccount.not.exists
                        example: recipientAccount.not.exists
                        type: string
                      message:
                        description: 'Unable to find recipient account ${transaction.recipientAccountId}.'
                        example: 'Unable to find recipient account ${transaction.recipientAccountId}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: transaction.currency.incompatible
                        example: transaction.currency.incompatible
                        type: string
                      message:
                        description: 'Incompatible currencies for sender account ${transaction.senderAccountId} and recipient account ${transaction.recipientAccountId}.'
                        example: 'Incompatible currencies for sender account ${transaction.senderAccountId} and recipient account ${transaction.recipientAccountId}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: balance.insufficient
                        example: balance.insufficient
                        type: string
                      message:
                        description: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        example: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.btc
                        example: amount.btc
                        type: string
                      message:
                        description: 'BTC|LTC|BCH payment amount must be at least 0.00000000000001, not ${transaction.amount}.'
                        example: 'BTC|LTC|BCH payment amount must be at least 0.00000000000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: transaction.amount.ada
                        example: transaction.amount.ada
                        type: string
                      message:
                        description: 'ADA payment amount must be at least 0.000001, not ${transaction.amount}.'
                        example: 'ADA payment amount must be at least 0.000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.eth
                        example: amount.eth
                        type: string
                      message:
                        description: 'ETH payment amount must be at least 0.000000000001, not ${transaction.amount}.'
                        example: 'ETH payment amount must be at least 0.000000000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: transaction.not.compliant
                        example: transaction.not.compliant
                        type: string
                      message:
                        description: 'Transaction not compliant, recipient account customer country is not defined.'
                        example: 'Transaction not compliant, recipient account customer country is not defined.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  /v3/ledger/transaction/account:
    post:
      description: <h4>1 credit per API call.</h4><br/><p>Finds transactions for the account identified by the given account ID.</p>
      operationId: getTransactionsByAccountId
      summary: Find transactions for account.
      tags:
        - List transcations
      parameters:
        - description: Max number of items per page is 50. Either count or pageSize is accepted.
          in: query
          name: pageSize
          schema:
            type: number
            example: 10
            maximum: 50
            minimum: 1
        - description: Offset to obtain the next page of data.
          in: query
          name: offset
          schema:
            type: number
            example: 0
        - description: Get the total transaction count based on the filter. Either count or pageSize is accepted.
          in: query
          name: count
          example: true
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              properties:
                id:
                  description: Account ID - source of transaction(s).
                  example: 5e6be8e9e6aa436299950c41
                  maxLength: 24
                  minLength: 24
                  type: string
                counterAccount:
                  description: Counter account - transaction(s) destination account.
                  example: 5e6be8e9e6aa436299950c41
                  maxLength: 24
                  minLength: 24
                  type: string
                from:
                  description: 'Starting date to search for transactions from in UTC millis. If not present, search all history.'
                  example: 1571833231000
                  type: integer
                  format: int64
                  minimum: 0
                to:
                  description: 'Date until to search for transactions in UTC millis. If not present, search up till now.'
                  example: 1571833231000
                  type: integer
                  format: int64
                  minimum: 0
                currency:
                  description: Currency of the transactions.
                  example: BTC
                  minLength: 1
                  maxLength: 50
                  type: string
                amount:
                  type: array
                  description: Amount of the transaction. AND is used between filter options.
                  items:
                    type: object
                    properties:
                      op:
                        type: string
                        description: Filtering operation.
                        example: gte
                        enum:
                          - gte
                          - lte
                          - gt
                          - lt
                          - eq
                          - neq
                      value:
                        type: string
                        description: Value of the operation.
                        example: '1.5'
                    required:
                      - op
                      - value
                currencies:
                  description: List of currencies of the transactions.
                  type: array
                  items:
                    example: BTC
                    minLength: 1
                    maxLength: 50
                    type: string
                transactionType:
                  description: Type of payment
                  enum:
                    - FAILED
                    - DEBIT_PAYMENT
                    - CREDIT_PAYMENT
                    - CREDIT_DEPOSIT
                    - DEBIT_WITHDRAWAL
                    - CANCEL_WITHDRAWAL
                    - DEBIT_OUTGOING_PAYMENT
                    - EXCHANGE_BUY
                    - EXCHANGE_SELL
                    - DEBIT_TRANSACTION
                    - CREDIT_INCOMING_PAYMENT
                transactionTypes:
                  description: Types of payment
                  type: array
                  items:
                    type: string
                    example: CREDIT_PAYMENT
                    enum:
                      - FAILED
                      - DEBIT_PAYMENT
                      - CREDIT_PAYMENT
                      - CREDIT_DEPOSIT
                      - DEBIT_WITHDRAWAL
                      - CANCEL_WITHDRAWAL
                      - DEBIT_OUTGOING_PAYMENT
                      - EXCHANGE_BUY
                      - EXCHANGE_SELL
                      - DEBIT_TRANSACTION
                      - CREDIT_INCOMING_PAYMENT
                opType:
                  description: Type of operation
                  enum:
                    - PAYMENT
                    - WITHDRAWAL
                    - BLOCKCHAIN_TRANSACTION
                    - EXCHANGE
                    - FAILED
                    - DEPOSIT
                    - MINT
                    - REVOKE
                  example: PAYMENT
                  type: string
                transactionCode:
                  description: For bookkeeping to distinct transaction purpose.
                  example: 1_01_EXTERNAL_CODE
                  maxLength: 100
                  minLength: 1
                  type: string
                paymentId:
                  description: Payment ID defined in payment order by sender.
                  example: '65426'
                  maxLength: 100
                  minLength: 1
                  type: string
                recipientNote:
                  description: Recipient note defined in payment order by sender.
                  example: '65426'
                  maxLength: 500
                  minLength: 1
                  type: string
                senderNote:
                  description: Sender note defined in payment order by sender.
                  example: '65426'
                  maxLength: 500
                  minLength: 1
                  type: string
              required:
                - id
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - items:
                      properties:
                        accountId:
                          description: Source account - source of transaction(s)
                          example: 5e6645712b55823de7ea82f1
                          type: string
                        counterAccountId:
                          description: 'Counter account - transaction(s) destination account. In case of blockchain recipient, this is addess of blockchain account.'
                          example: 5e6645712b55823de7ea82f1
                          type: string
                        currency:
                          description: Transaction currency
                          example: BTC
                          type: string
                        amount:
                          description: Amount in account's currency
                          example: '0.1'
                          type: string
                        anonymous:
                          description: 'Whether the transaction is anonymous. If true, counter account owner does not see source account.'
                          example: false
                          type: boolean
                        created:
                          description: Time in UTC of transaction.
                          example: 1572031674384
                          type: number
                        marketValue:
                          description: FIAT value of transaction.
                          properties:
                            amount:
                              description: Value of transaction in given base pair.
                              example: '1235.56'
                              type: string
                            currency:
                              description: Base pair.
                              example: EUR
                              enum:
                                - AED
                                - AFN
                                - ALL
                                - AMD
                                - ANG
                                - AOA
                                - ARS
                                - AUD
                                - AWG
                                - AZN
                                - BAM
                                - BAT
                                - BBD
                                - BCH
                                - BDT
                                - BGN
                                - BHD
                                - BIF
                                - BMD
                                - BND
                                - BOB
                                - BRL
                                - BSD
                                - BTC
                                - BTN
                                - BWP
                                - BYN
                                - BYR
                                - BZD
                                - CAD
                                - CDF
                                - CHF
                                - CLF
                                - CLP
                                - CNY
                                - COP
                                - CRC
                                - CUC
                                - CUP
                                - CVE
                                - CZK
                                - DJF
                                - DKK
                                - DOP
                                - DOGE
                                - DZD
                                - EGP
                                - ERN
                                - ETB
                                - ETH
                                - EUR
                                - FJD
                                - FKP
                                - FLOW
                                - FUSD
                                - FREE
                                - GMC
                                - GMC_BSC
                                - RMD
                                - GBP
                                - GEL
                                - GGP
                                - GHS
                                - GIP
                                - GMD
                                - GNF
                                - GTQ
                                - GYD
                                - HKD
                                - HNL
                                - HRK
                                - HTG
                                - HUF
                                - IDR
                                - ILS
                                - IMP
                                - INR
                                - IQD
                                - IRR
                                - ISK
                                - JEP
                                - JMD
                                - JOD
                                - JPY
                                - KES
                                - KGS
                                - KHR
                                - KMF
                                - KPW
                                - KRW
                                - KWD
                                - KYD
                                - KZT
                                - LAK
                                - LBP
                                - LEO
                                - LINK
                                - LKR
                                - LRD
                                - LSL
                                - LTC
                                - LTL
                                - LVL
                                - LYD
                                - MAD
                                - MDL
                                - MGA
                                - MKD
                                - MKR
                                - MMK
                                - MMY
                                - MNT
                                - MOP
                                - MRO
                                - MUR
                                - MVR
                                - MWK
                                - MXN
                                - MYR
                                - MZN
                                - NAD
                                - NGN
                                - NIO
                                - NOK
                                - NPR
                                - NZD
                                - OMR
                                - PAB
                                - PAX
                                - PAXG
                                - PEN
                                - PGK
                                - PHP
                                - PKR
                                - PLN
                                - PLTC
                                - PYG
                                - QAR
                                - RON
                                - RSD
                                - RUB
                                - RWF
                                - SAR
                                - SBD
                                - SCR
                                - SDG
                                - SEK
                                - SGD
                                - SHP
                                - SLL
                                - SOS
                                - SRD
                                - STD
                                - SVC
                                - SYP
                                - SZL
                                - THB
                                - TJS
                                - TMT
                                - TND
                                - TOP
                                - TRY
                                - TTD
                                - TRON
                                - TUSD
                                - BUSD
                                - TWD
                                - TZS
                                - UAH
                                - UGX
                                - UNI
                                - USD
                                - USDC
                                - USDT
                                - USDT_TRON
                                - USDT_MATIC
                                - QTUM
                                - UYU
                                - UZS
                                - VEF
                                - VND
                                - VUV
                                - WBTC
                                - WST
                                - XAF
                                - XAG
                                - XAU
                                - XCD
                                - XCON
                                - XDR
                                - XOF
                                - XPF
                                - XRP
                                - YER
                                - ZAR
                                - ZMK
                                - ZMW
                                - ZWL
                              type: string
                            sourceDate:
                              description: Date of validity of rate in UTC.
                              example: 1572031674384
                              type: number
                            source:
                              description: Source of base pair.
                              example: fixer.io
                              type: string
                          type: object
                          required:
                            - amount
                            - currency
                            - sourceDate
                            - source
                        operationType:
                          description: Type of operation.
                          enum:
                            - PAYMENT
                            - WITHDRAWAL
                            - BLOCKCHAIN_TRANSACTION
                            - EXCHANGE
                            - FAILED
                            - DEPOSIT
                            - MINT
                            - REVOKE
                          example: PAYMENT
                          type: string
                        transactionType:
                          description: Type of payment.
                          enum:
                            - FAILED
                            - DEBIT_PAYMENT
                            - CREDIT_PAYMENT
                            - CREDIT_DEPOSIT
                            - DEBIT_WITHDRAWAL
                            - CANCEL_WITHDRAWAL
                            - DEBIT_OUTGOING_PAYMENT
                            - CREDIT_INCOMING_PAYMENT
                            - EXCHANGE_BUY
                            - EXCHANGE_SELL
                          example: CREDIT_PAYMENT
                          type: string
                        reference:
                          description: 'Transaction internal reference - unique identifier within Tatum ledger. In order of failure, use this value to search for problems.'
                          example: 5e6be8e9e6aa436299950c41
                          type: string
                        transactionCode:
                          description: For bookkeeping to distinct transaction purpose.
                          example: 1_01_EXTERNAL_CODE
                          type: string
                        senderNote:
                          description: Note visible for sender.
                          example: Sender note
                          type: string
                        recipientNote:
                          description: Note visible for both sender and recipient.
                          example: Private note
                          type: string
                        paymentId:
                          description: Payment ID defined in payment order by sender.
                          example: '65426'
                          type: string
                        attr:
                          example: '123'
                          description: 'Present only for operationType WITHDRAWAL and XLM / XRP based accounts it represents message or destinationTag of the recipient, if present.'
                          type: string
                        address:
                          type: string
                          description: 'For operationType DEPOSIT it represents address, on which was deposit credited for the account.'
                          example: qrppgud79n5h5ehqt9s7x8uc82pcag82es0w9tada0
                        txId:
                          type: string
                          description: 'For operationType DEPOSIT, BLOCKCHAIN_TRANSACTION it represents transaction id, for which deposit occured.'
                          example: c6c176e3f6705596d58963f0ca79b34ffa5b78874a65df9c974e22cf86a7ba67
                      type: object
                      required:
                        - accountId
                        - reference
                        - anonymous
                        - amount
                        - marketValue
                        - created
                        - operationType
                        - transactionType
                        - currency
                    type: array
                  - type: number
                    description: Total transaction count.
                    example: 20
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  /v3/ledger/transaction/customer:
    post:
      description: <h4>1 credit per API call.</h4><br/><p>Finds transactions for all accounts of the customer identified by the given internal customer ID.</p>
      operationId: getTransactionsByCustomerId
      summary: Find transactions for a customer across all of the customer's accounts.
      tags:
        - List transcations
      parameters:
        - description: Max number of items per page is 50. Either count or pageSize is accepted.
          in: query
          name: pageSize
          schema:
            type: number
            example: 10
            maximum: 50
            minimum: 1
        - description: Offset to obtain the next page of data.
          in: query
          name: offset
          schema:
            type: number
            example: 0
        - description: Get total transaction count based on the filter. Either count or pageSize is accepted.
          in: query
          name: count
          example: true
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              properties:
                id:
                  description: Customer internal ID to search for.
                  example: 5e6be8e9e6aa436299950c41
                  maxLength: 24
                  minLength: 24
                  type: string
                account:
                  description: Source account - source of transaction(s).
                  example: 5e6be8e9e6aa436299950c41
                  maxLength: 24
                  minLength: 24
                  type: string
                counterAccount:
                  description: Counter account - transaction(s) destination account.
                  example: 5e6be8e9e6aa436299950c41
                  maxLength: 24
                  minLength: 24
                  type: string
                currency:
                  description: Currency of the transactions.
                  example: BTC
                  minLength: 1
                  maxLength: 50
                  type: string
                from:
                  description: 'Starting date to search for transactions from in UTC millis. If not present, search all history.'
                  example: 1571833231000
                  type: integer
                  format: int64
                  minimum: 0
                to:
                  description: 'Date until to search for transactions in UTC millis. If not present, search up till now.'
                  example: 1571833231000
                  type: integer
                  format: int64
                  minimum: 0
                amount:
                  type: array
                  description: Amount of the transaction. AND is used between filter options.
                  items:
                    type: object
                    properties:
                      op:
                        type: string
                        description: Filtering operation.
                        example: gte
                        enum:
                          - gte
                          - lte
                          - gt
                          - lt
                          - eq
                          - neq
                      value:
                        type: string
                        description: Value of the operation.
                        example: '1.5'
                    required:
                      - op
                      - value
                currencies:
                  description: List of currencies of the transactions.
                  type: array
                  items:
                    example: BTC
                    minLength: 1
                    maxLength: 50
                    type: string
                transactionType:
                  description: Type of payment
                  enum:
                    - FAILED
                    - DEBIT_PAYMENT
                    - CREDIT_PAYMENT
                    - CREDIT_DEPOSIT
                    - DEBIT_WITHDRAWAL
                    - CANCEL_WITHDRAWAL
                    - DEBIT_OUTGOING_PAYMENT
                    - EXCHANGE_BUY
                    - EXCHANGE_SELL
                    - DEBIT_TRANSACTION
                    - CREDIT_INCOMING_PAYMENT
                transactionTypes:
                  description: Types of payment
                  type: array
                  items:
                    type: string
                    example: CREDIT_PAYMENT
                    enum:
                      - FAILED
                      - DEBIT_PAYMENT
                      - CREDIT_PAYMENT
                      - CREDIT_DEPOSIT
                      - DEBIT_WITHDRAWAL
                      - CANCEL_WITHDRAWAL
                      - DEBIT_OUTGOING_PAYMENT
                      - EXCHANGE_BUY
                      - EXCHANGE_SELL
                      - DEBIT_TRANSACTION
                      - CREDIT_INCOMING_PAYMENT
                opType:
                  description: Type of operation.
                  enum:
                    - PAYMENT
                    - WITHDRAWAL
                    - BLOCKCHAIN_TRANSACTION
                    - EXCHANGE
                    - FAILED
                    - DEPOSIT
                    - MINT
                    - REVOKE
                  example: PAYMENT
                  type: string
                transactionCode:
                  description: For bookkeeping to distinct transaction purpose.
                  example: 1_01_EXTERNAL_CODE
                  maxLength: 100
                  minLength: 1
                  type: string
                paymentId:
                  description: Payment ID defined in payment order by sender.
                  example: '65426'
                  maxLength: 100
                  minLength: 1
                  type: string
                recipientNote:
                  description: Recipient note defined in payment order by sender.
                  example: '65426'
                  maxLength: 500
                  minLength: 1
                  type: string
                senderNote:
                  description: Sender note defined in payment order by sender.
                  example: '65426'
                  maxLength: 500
                  minLength: 1
                  type: string
              required:
                - id
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - items:
                      properties:
                        accountId:
                          description: Source account - source of transaction(s)
                          example: 5e6645712b55823de7ea82f1
                          type: string
                        counterAccountId:
                          description: 'Counter account - transaction(s) destination account. In case of blockchain recipient, this is addess of blockchain account.'
                          example: 5e6645712b55823de7ea82f1
                          type: string
                        currency:
                          description: Transaction currency
                          example: BTC
                          type: string
                        amount:
                          description: Amount in account's currency
                          example: '0.1'
                          type: string
                        anonymous:
                          description: 'Whether the transaction is anonymous. If true, counter account owner does not see source account.'
                          example: false
                          type: boolean
                        created:
                          description: Time in UTC of transaction.
                          example: 1572031674384
                          type: number
                        marketValue:
                          description: FIAT value of transaction.
                          properties:
                            amount:
                              description: Value of transaction in given base pair.
                              example: '1235.56'
                              type: string
                            currency:
                              description: Base pair.
                              example: EUR
                              enum:
                                - AED
                                - AFN
                                - ALL
                                - AMD
                                - ANG
                                - AOA
                                - ARS
                                - AUD
                                - AWG
                                - AZN
                                - BAM
                                - BAT
                                - BBD
                                - BCH
                                - BDT
                                - BGN
                                - BHD
                                - BIF
                                - BMD
                                - BND
                                - BOB
                                - BRL
                                - BSD
                                - BTC
                                - BTN
                                - BWP
                                - BYN
                                - BYR
                                - BZD
                                - CAD
                                - CDF
                                - CHF
                                - CLF
                                - CLP
                                - CNY
                                - COP
                                - CRC
                                - CUC
                                - CUP
                                - CVE
                                - CZK
                                - DJF
                                - DKK
                                - DOP
                                - DOGE
                                - DZD
                                - EGP
                                - ERN
                                - ETB
                                - ETH
                                - EUR
                                - FJD
                                - FKP
                                - FLOW
                                - FUSD
                                - FREE
                                - GMC
                                - GMC_BSC
                                - RMD
                                - GBP
                                - GEL
                                - GGP
                                - GHS
                                - GIP
                                - GMD
                                - GNF
                                - GTQ
                                - GYD
                                - HKD
                                - HNL
                                - HRK
                                - HTG
                                - HUF
                                - IDR
                                - ILS
                                - IMP
                                - INR
                                - IQD
                                - IRR
                                - ISK
                                - JEP
                                - JMD
                                - JOD
                                - JPY
                                - KES
                                - KGS
                                - KHR
                                - KMF
                                - KPW
                                - KRW
                                - KWD
                                - KYD
                                - KZT
                                - LAK
                                - LBP
                                - LEO
                                - LINK
                                - LKR
                                - LRD
                                - LSL
                                - LTC
                                - LTL
                                - LVL
                                - LYD
                                - MAD
                                - MDL
                                - MGA
                                - MKD
                                - MKR
                                - MMK
                                - MMY
                                - MNT
                                - MOP
                                - MRO
                                - MUR
                                - MVR
                                - MWK
                                - MXN
                                - MYR
                                - MZN
                                - NAD
                                - NGN
                                - NIO
                                - NOK
                                - NPR
                                - NZD
                                - OMR
                                - PAB
                                - PAX
                                - PAXG
                                - PEN
                                - PGK
                                - PHP
                                - PKR
                                - PLN
                                - PLTC
                                - PYG
                                - QAR
                                - RON
                                - RSD
                                - RUB
                                - RWF
                                - SAR
                                - SBD
                                - SCR
                                - SDG
                                - SEK
                                - SGD
                                - SHP
                                - SLL
                                - SOS
                                - SRD
                                - STD
                                - SVC
                                - SYP
                                - SZL
                                - THB
                                - TJS
                                - TMT
                                - TND
                                - TOP
                                - TRY
                                - TTD
                                - TRON
                                - TUSD
                                - BUSD
                                - TWD
                                - TZS
                                - UAH
                                - UGX
                                - UNI
                                - USD
                                - USDC
                                - USDT
                                - USDT_TRON
                                - USDT_MATIC
                                - QTUM
                                - UYU
                                - UZS
                                - VEF
                                - VND
                                - VUV
                                - WBTC
                                - WST
                                - XAF
                                - XAG
                                - XAU
                                - XCD
                                - XCON
                                - XDR
                                - XOF
                                - XPF
                                - XRP
                                - YER
                                - ZAR
                                - ZMK
                                - ZMW
                                - ZWL
                              type: string
                            sourceDate:
                              description: Date of validity of rate in UTC.
                              example: 1572031674384
                              type: number
                            source:
                              description: Source of base pair.
                              example: fixer.io
                              type: string
                          type: object
                          required:
                            - amount
                            - currency
                            - sourceDate
                            - source
                        operationType:
                          description: Type of operation.
                          enum:
                            - PAYMENT
                            - WITHDRAWAL
                            - BLOCKCHAIN_TRANSACTION
                            - EXCHANGE
                            - FAILED
                            - DEPOSIT
                            - MINT
                            - REVOKE
                          example: PAYMENT
                          type: string
                        transactionType:
                          description: Type of payment.
                          enum:
                            - FAILED
                            - DEBIT_PAYMENT
                            - CREDIT_PAYMENT
                            - CREDIT_DEPOSIT
                            - DEBIT_WITHDRAWAL
                            - CANCEL_WITHDRAWAL
                            - DEBIT_OUTGOING_PAYMENT
                            - CREDIT_INCOMING_PAYMENT
                            - EXCHANGE_BUY
                            - EXCHANGE_SELL
                          example: CREDIT_PAYMENT
                          type: string
                        reference:
                          description: 'Transaction internal reference - unique identifier within Tatum ledger. In order of failure, use this value to search for problems.'
                          example: 5e6be8e9e6aa436299950c41
                          type: string
                        transactionCode:
                          description: For bookkeeping to distinct transaction purpose.
                          example: 1_01_EXTERNAL_CODE
                          type: string
                        senderNote:
                          description: Note visible for sender.
                          example: Sender note
                          type: string
                        recipientNote:
                          description: Note visible for both sender and recipient.
                          example: Private note
                          type: string
                        paymentId:
                          description: Payment ID defined in payment order by sender.
                          example: '65426'
                          type: string
                        attr:
                          example: '123'
                          description: 'Present only for operationType WITHDRAWAL and XLM / XRP based accounts it represents message or destinationTag of the recipient, if present.'
                          type: string
                        address:
                          type: string
                          description: 'For operationType DEPOSIT it represents address, on which was deposit credited for the account.'
                          example: qrppgud79n5h5ehqt9s7x8uc82pcag82es0w9tada0
                        txId:
                          type: string
                          description: 'For operationType DEPOSIT, BLOCKCHAIN_TRANSACTION it represents transaction id, for which deposit occured.'
                          example: c6c176e3f6705596d58963f0ca79b34ffa5b78874a65df9c974e22cf86a7ba67
                      type: object
                      required:
                        - accountId
                        - reference
                        - anonymous
                        - amount
                        - marketValue
                        - created
                        - operationType
                        - transactionType
                        - currency
                    type: array
                  - type: number
                    description: Total transaction count.
                    example: 20
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  /v3/ledger/transaction/ledger:
    post:
      description: <h4>1 credit per API call.</h4><br/><p>Find transactions across whole ledger.</p>
      operationId: getTransactions
      summary: Find transactions within the Virtual account.
      tags:
        - List transcations
      parameters:
        - description: Max number of items per page is 50. Either count or pageSize is accepted.
          in: query
          name: pageSize
          schema:
            type: number
            example: 10
            maximum: 50
            minimum: 1
        - description: Offset to obtain the next page of data.
          in: query
          name: offset
          schema:
            type: number
            example: 0
        - description: Get the total transaction count based on the filter. Either count or pageSize is accepted.
          in: query
          name: count
          example: true
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              properties:
                account:
                  description: Source account - source of transaction(s).
                  example: 5e6be8e9e6aa436299950c41
                  maxLength: 24
                  minLength: 24
                  type: string
                counterAccount:
                  description: Counter account - transaction(s) destination account.
                  example: 5e6be8e9e6aa436299950c41
                  maxLength: 24
                  minLength: 24
                  type: string
                currency:
                  description: Currency of the transactions.
                  example: BTC
                  minLength: 1
                  maxLength: 50
                  type: string
                from:
                  description: 'Starting date to search for transactions from in UTC millis. If not present, search all history.'
                  example: 1571833231000
                  type: integer
                  format: int64
                  minimum: 0
                amount:
                  type: array
                  description: Amount of the transaction. AND is used between filter options.
                  items:
                    type: object
                    properties:
                      op:
                        type: string
                        description: Filtering operation.
                        example: gte
                        enum:
                          - gte
                          - lte
                          - gt
                          - lt
                          - eq
                          - neq
                      value:
                        type: string
                        description: Value of the operation.
                        example: '1.5'
                    required:
                      - op
                      - value
                currencies:
                  description: List of currencies of the transactions.
                  type: array
                  items:
                    example: BTC
                    minLength: 1
                    maxLength: 50
                    type: string
                transactionType:
                  description: Type of payment
                  enum:
                    - FAILED
                    - DEBIT_PAYMENT
                    - CREDIT_PAYMENT
                    - CREDIT_DEPOSIT
                    - DEBIT_WITHDRAWAL
                    - CANCEL_WITHDRAWAL
                    - DEBIT_OUTGOING_PAYMENT
                    - EXCHANGE_BUY
                    - EXCHANGE_SELL
                    - DEBIT_TRANSACTION
                    - CREDIT_INCOMING_PAYMENT
                transactionTypes:
                  description: Types of payment
                  type: array
                  items:
                    type: string
                    example: CREDIT_PAYMENT
                    enum:
                      - FAILED
                      - DEBIT_PAYMENT
                      - CREDIT_PAYMENT
                      - CREDIT_DEPOSIT
                      - DEBIT_WITHDRAWAL
                      - CANCEL_WITHDRAWAL
                      - DEBIT_OUTGOING_PAYMENT
                      - EXCHANGE_BUY
                      - EXCHANGE_SELL
                      - DEBIT_TRANSACTION
                      - CREDIT_INCOMING_PAYMENT
                opType:
                  description: Type of operation.
                  enum:
                    - PAYMENT
                    - WITHDRAWAL
                    - BLOCKCHAIN_TRANSACTION
                    - EXCHANGE
                    - FAILED
                    - DEPOSIT
                    - MINT
                    - REVOKE
                  example: PAYMENT
                  type: string
                transactionCode:
                  description: For bookkeeping to distinct transaction purpose.
                  example: 1_01_EXTERNAL_CODE
                  maxLength: 100
                  minLength: 1
                  type: string
                paymentId:
                  description: Payment ID defined in payment order by sender.
                  example: '65426'
                  maxLength: 100
                  minLength: 1
                  type: string
                recipientNote:
                  description: Recipient note defined in payment order by sender.
                  example: '65426'
                  maxLength: 500
                  minLength: 1
                  type: string
                senderNote:
                  description: Sender note defined in payment order by sender.
                  example: '65426'
                  maxLength: 500
                  minLength: 1
                  type: string
                to:
                  description: 'Date until to search for transactions in UTC millis. If not present, search up till now.'
                  example: 1571833231000
                  type: integer
                  format: int64
                  minimum: 0
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - items:
                      properties:
                        accountId:
                          description: Source account - source of transaction(s)
                          example: 5e6645712b55823de7ea82f1
                          type: string
                        counterAccountId:
                          description: 'Counter account - transaction(s) destination account. In case of blockchain recipient, this is addess of blockchain account.'
                          example: 5e6645712b55823de7ea82f1
                          type: string
                        currency:
                          description: Transaction currency
                          example: BTC
                          type: string
                        amount:
                          description: Amount in account's currency
                          example: '0.1'
                          type: string
                        anonymous:
                          description: 'Whether the transaction is anonymous. If true, counter account owner does not see source account.'
                          example: false
                          type: boolean
                        created:
                          description: Time in UTC of transaction.
                          example: 1572031674384
                          type: number
                        marketValue:
                          description: FIAT value of transaction.
                          properties:
                            amount:
                              description: Value of transaction in given base pair.
                              example: '1235.56'
                              type: string
                            currency:
                              description: Base pair.
                              example: EUR
                              enum:
                                - AED
                                - AFN
                                - ALL
                                - AMD
                                - ANG
                                - AOA
                                - ARS
                                - AUD
                                - AWG
                                - AZN
                                - BAM
                                - BAT
                                - BBD
                                - BCH
                                - BDT
                                - BGN
                                - BHD
                                - BIF
                                - BMD
                                - BND
                                - BOB
                                - BRL
                                - BSD
                                - BTC
                                - BTN
                                - BWP
                                - BYN
                                - BYR
                                - BZD
                                - CAD
                                - CDF
                                - CHF
                                - CLF
                                - CLP
                                - CNY
                                - COP
                                - CRC
                                - CUC
                                - CUP
                                - CVE
                                - CZK
                                - DJF
                                - DKK
                                - DOP
                                - DOGE
                                - DZD
                                - EGP
                                - ERN
                                - ETB
                                - ETH
                                - EUR
                                - FJD
                                - FKP
                                - FLOW
                                - FUSD
                                - FREE
                                - GMC
                                - GMC_BSC
                                - RMD
                                - GBP
                                - GEL
                                - GGP
                                - GHS
                                - GIP
                                - GMD
                                - GNF
                                - GTQ
                                - GYD
                                - HKD
                                - HNL
                                - HRK
                                - HTG
                                - HUF
                                - IDR
                                - ILS
                                - IMP
                                - INR
                                - IQD
                                - IRR
                                - ISK
                                - JEP
                                - JMD
                                - JOD
                                - JPY
                                - KES
                                - KGS
                                - KHR
                                - KMF
                                - KPW
                                - KRW
                                - KWD
                                - KYD
                                - KZT
                                - LAK
                                - LBP
                                - LEO
                                - LINK
                                - LKR
                                - LRD
                                - LSL
                                - LTC
                                - LTL
                                - LVL
                                - LYD
                                - MAD
                                - MDL
                                - MGA
                                - MKD
                                - MKR
                                - MMK
                                - MMY
                                - MNT
                                - MOP
                                - MRO
                                - MUR
                                - MVR
                                - MWK
                                - MXN
                                - MYR
                                - MZN
                                - NAD
                                - NGN
                                - NIO
                                - NOK
                                - NPR
                                - NZD
                                - OMR
                                - PAB
                                - PAX
                                - PAXG
                                - PEN
                                - PGK
                                - PHP
                                - PKR
                                - PLN
                                - PLTC
                                - PYG
                                - QAR
                                - RON
                                - RSD
                                - RUB
                                - RWF
                                - SAR
                                - SBD
                                - SCR
                                - SDG
                                - SEK
                                - SGD
                                - SHP
                                - SLL
                                - SOS
                                - SRD
                                - STD
                                - SVC
                                - SYP
                                - SZL
                                - THB
                                - TJS
                                - TMT
                                - TND
                                - TOP
                                - TRY
                                - TTD
                                - TRON
                                - TUSD
                                - BUSD
                                - TWD
                                - TZS
                                - UAH
                                - UGX
                                - UNI
                                - USD
                                - USDC
                                - USDT
                                - USDT_TRON
                                - USDT_MATIC
                                - QTUM
                                - UYU
                                - UZS
                                - VEF
                                - VND
                                - VUV
                                - WBTC
                                - WST
                                - XAF
                                - XAG
                                - XAU
                                - XCD
                                - XCON
                                - XDR
                                - XOF
                                - XPF
                                - XRP
                                - YER
                                - ZAR
                                - ZMK
                                - ZMW
                                - ZWL
                              type: string
                            sourceDate:
                              description: Date of validity of rate in UTC.
                              example: 1572031674384
                              type: number
                            source:
                              description: Source of base pair.
                              example: fixer.io
                              type: string
                          type: object
                          required:
                            - amount
                            - currency
                            - sourceDate
                            - source
                        operationType:
                          description: Type of operation.
                          enum:
                            - PAYMENT
                            - WITHDRAWAL
                            - BLOCKCHAIN_TRANSACTION
                            - EXCHANGE
                            - FAILED
                            - DEPOSIT
                            - MINT
                            - REVOKE
                          example: PAYMENT
                          type: string
                        transactionType:
                          description: Type of payment.
                          enum:
                            - FAILED
                            - DEBIT_PAYMENT
                            - CREDIT_PAYMENT
                            - CREDIT_DEPOSIT
                            - DEBIT_WITHDRAWAL
                            - CANCEL_WITHDRAWAL
                            - DEBIT_OUTGOING_PAYMENT
                            - CREDIT_INCOMING_PAYMENT
                            - EXCHANGE_BUY
                            - EXCHANGE_SELL
                          example: CREDIT_PAYMENT
                          type: string
                        reference:
                          description: 'Transaction internal reference - unique identifier within Tatum ledger. In order of failure, use this value to search for problems.'
                          example: 5e6be8e9e6aa436299950c41
                          type: string
                        transactionCode:
                          description: For bookkeeping to distinct transaction purpose.
                          example: 1_01_EXTERNAL_CODE
                          type: string
                        senderNote:
                          description: Note visible for sender.
                          example: Sender note
                          type: string
                        recipientNote:
                          description: Note visible for both sender and recipient.
                          example: Private note
                          type: string
                        paymentId:
                          description: Payment ID defined in payment order by sender.
                          example: '65426'
                          type: string
                        attr:
                          example: '123'
                          description: 'Present only for operationType WITHDRAWAL and XLM / XRP based accounts it represents message or destinationTag of the recipient, if present.'
                          type: string
                        address:
                          type: string
                          description: 'For operationType DEPOSIT it represents address, on which was deposit credited for the account.'
                          example: qrppgud79n5h5ehqt9s7x8uc82pcag82es0w9tada0
                        txId:
                          type: string
                          description: 'For operationType DEPOSIT, BLOCKCHAIN_TRANSACTION it represents transaction id, for which deposit occured.'
                          example: c6c176e3f6705596d58963f0ca79b34ffa5b78874a65df9c974e22cf86a7ba67
                      type: object
                      required:
                        - accountId
                        - reference
                        - anonymous
                        - amount
                        - marketValue
                        - created
                        - operationType
                        - transactionType
                        - currency
                    type: array
                  - type: number
                    description: Total transaction count.
                    example: 20
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/ledger/transaction/reference/{reference}':
    get:
      description: <h4>1 credit per API call.</h4><br/><p>Finds transactions for all accounts with the given reference.</p>
      operationId: getTransactionsByReference
      summary: Find transactions with a given reference across all accounts.
      tags:
        - List transcations
      parameters:
        - in: path
          name: reference
          required: true
          schema:
            maxLength: 100
            minLength: 20
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    accountId:
                      description: Source account - source of transaction(s)
                      example: 5e6645712b55823de7ea82f1
                      type: string
                    counterAccountId:
                      description: 'Counter account - transaction(s) destination account. In case of blockchain recipient, this is addess of blockchain account.'
                      example: 5e6645712b55823de7ea82f1
                      type: string
                    currency:
                      description: Transaction currency
                      example: BTC
                      type: string
                    amount:
                      description: Amount in account's currency
                      example: '0.1'
                      type: string
                    anonymous:
                      description: 'Whether the transaction is anonymous. If true, counter account owner does not see source account.'
                      example: false
                      type: boolean
                    created:
                      description: Time in UTC of transaction.
                      example: 1572031674384
                      type: number
                    marketValue:
                      description: FIAT value of transaction.
                      properties:
                        amount:
                          description: Value of transaction in given base pair.
                          example: '1235.56'
                          type: string
                        currency:
                          description: Base pair.
                          example: EUR
                          enum:
                            - AED
                            - AFN
                            - ALL
                            - AMD
                            - ANG
                            - AOA
                            - ARS
                            - AUD
                            - AWG
                            - AZN
                            - BAM
                            - BAT
                            - BBD
                            - BCH
                            - BDT
                            - BGN
                            - BHD
                            - BIF
                            - BMD
                            - BND
                            - BOB
                            - BRL
                            - BSD
                            - BTC
                            - BTN
                            - BWP
                            - BYN
                            - BYR
                            - BZD
                            - CAD
                            - CDF
                            - CHF
                            - CLF
                            - CLP
                            - CNY
                            - COP
                            - CRC
                            - CUC
                            - CUP
                            - CVE
                            - CZK
                            - DJF
                            - DKK
                            - DOP
                            - DOGE
                            - DZD
                            - EGP
                            - ERN
                            - ETB
                            - ETH
                            - EUR
                            - FJD
                            - FKP
                            - FLOW
                            - FUSD
                            - FREE
                            - GMC
                            - GMC_BSC
                            - RMD
                            - GBP
                            - GEL
                            - GGP
                            - GHS
                            - GIP
                            - GMD
                            - GNF
                            - GTQ
                            - GYD
                            - HKD
                            - HNL
                            - HRK
                            - HTG
                            - HUF
                            - IDR
                            - ILS
                            - IMP
                            - INR
                            - IQD
                            - IRR
                            - ISK
                            - JEP
                            - JMD
                            - JOD
                            - JPY
                            - KES
                            - KGS
                            - KHR
                            - KMF
                            - KPW
                            - KRW
                            - KWD
                            - KYD
                            - KZT
                            - LAK
                            - LBP
                            - LEO
                            - LINK
                            - LKR
                            - LRD
                            - LSL
                            - LTC
                            - LTL
                            - LVL
                            - LYD
                            - MAD
                            - MDL
                            - MGA
                            - MKD
                            - MKR
                            - MMK
                            - MMY
                            - MNT
                            - MOP
                            - MRO
                            - MUR
                            - MVR
                            - MWK
                            - MXN
                            - MYR
                            - MZN
                            - NAD
                            - NGN
                            - NIO
                            - NOK
                            - NPR
                            - NZD
                            - OMR
                            - PAB
                            - PAX
                            - PAXG
                            - PEN
                            - PGK
                            - PHP
                            - PKR
                            - PLN
                            - PLTC
                            - PYG
                            - QAR
                            - RON
                            - RSD
                            - RUB
                            - RWF
                            - SAR
                            - SBD
                            - SCR
                            - SDG
                            - SEK
                            - SGD
                            - SHP
                            - SLL
                            - SOS
                            - SRD
                            - STD
                            - SVC
                            - SYP
                            - SZL
                            - THB
                            - TJS
                            - TMT
                            - TND
                            - TOP
                            - TRY
                            - TTD
                            - TRON
                            - TUSD
                            - BUSD
                            - TWD
                            - TZS
                            - UAH
                            - UGX
                            - UNI
                            - USD
                            - USDC
                            - USDT
                            - USDT_TRON
                            - USDT_MATIC
                            - QTUM
                            - UYU
                            - UZS
                            - VEF
                            - VND
                            - VUV
                            - WBTC
                            - WST
                            - XAF
                            - XAG
                            - XAU
                            - XCD
                            - XCON
                            - XDR
                            - XOF
                            - XPF
                            - XRP
                            - YER
                            - ZAR
                            - ZMK
                            - ZMW
                            - ZWL
                          type: string
                        sourceDate:
                          description: Date of validity of rate in UTC.
                          example: 1572031674384
                          type: number
                        source:
                          description: Source of base pair.
                          example: fixer.io
                          type: string
                      type: object
                      required:
                        - amount
                        - currency
                        - sourceDate
                        - source
                    operationType:
                      description: Type of operation.
                      enum:
                        - PAYMENT
                        - WITHDRAWAL
                        - BLOCKCHAIN_TRANSACTION
                        - EXCHANGE
                        - FAILED
                        - DEPOSIT
                        - MINT
                        - REVOKE
                      example: PAYMENT
                      type: string
                    transactionType:
                      description: Type of payment.
                      enum:
                        - FAILED
                        - DEBIT_PAYMENT
                        - CREDIT_PAYMENT
                        - CREDIT_DEPOSIT
                        - DEBIT_WITHDRAWAL
                        - CANCEL_WITHDRAWAL
                        - DEBIT_OUTGOING_PAYMENT
                        - CREDIT_INCOMING_PAYMENT
                        - EXCHANGE_BUY
                        - EXCHANGE_SELL
                      example: CREDIT_PAYMENT
                      type: string
                    reference:
                      description: 'Transaction internal reference - unique identifier within Tatum ledger. In order of failure, use this value to search for problems.'
                      example: 5e6be8e9e6aa436299950c41
                      type: string
                    transactionCode:
                      description: For bookkeeping to distinct transaction purpose.
                      example: 1_01_EXTERNAL_CODE
                      type: string
                    senderNote:
                      description: Note visible for sender.
                      example: Sender note
                      type: string
                    recipientNote:
                      description: Note visible for both sender and recipient.
                      example: Private note
                      type: string
                    paymentId:
                      description: Payment ID defined in payment order by sender.
                      example: '65426'
                      type: string
                    attr:
                      example: '123'
                      description: 'Present only for operationType WITHDRAWAL and XLM / XRP based accounts it represents message or destinationTag of the recipient, if present.'
                      type: string
                    address:
                      type: string
                      description: 'For operationType DEPOSIT it represents address, on which was deposit credited for the account.'
                      example: qrppgud79n5h5ehqt9s7x8uc82pcag82es0w9tada0
                    txId:
                      type: string
                      description: 'For operationType DEPOSIT, BLOCKCHAIN_TRANSACTION it represents transaction id, for which deposit occured.'
                      example: c6c176e3f6705596d58963f0ca79b34ffa5b78874a65df9c974e22cf86a7ba67
                  type: object
                  required:
                    - accountId
                    - reference
                    - anonymous
                    - amount
                    - marketValue
                    - created
                    - operationType
                    - transactionType
                    - currency
                type: array
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  /v3/offchain/blockchain/estimate:
    post:
      description: |
        <h4>2 credits per API call.</h4><br/>
        <p>Estimate current transaction fee for ledger to blockchain transaction.<br/>
        Supported blockchains:
        <ul>
        <li>Bitcoin</li>
        <li>Litecoin</li>
        <li>Dogecoin</li>
        </ul>
        </p>
      operationId: offchainEstimateFee
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - senderAccountId
                - address
                - amount
              properties:
                senderAccountId:
                  description: Sender account ID
                  example: 5e68c66581f2ee32bc354087
                  maxLength: 24
                  minLength: 24
                  type: string
                address:
                  description: 'Blockchain address to send assets to. For BTC, LTC, DOGE and BCH, it is possible to enter list of multiple recipient blockchain addresses as a comma separated string.'
                  example: mpTwPdF8up9kidgcAStriUPwRdnE9MRAg7
                  maxLength: 10000
                  minLength: 1
                  type: string
                amount:
                  description: Amount to be withdrawn to blockchain.
                  maxLength: 38
                  example: '0.001'
                  type: string
                  pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                multipleAmounts:
                  description: 'For BTC, LTC, DOGE and BCH, it is possible to enter list of multiple recipient blockchain amounts. List of recipient addresses must be present in the address field and total sum of amounts must be equal to the amount field.'
                  type: array
                  items:
                    type: string
                    example: '0.1'
                    pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                attr:
                  description: Used to parametrize withdrawal as a change address for left coins from transaction. XPub or attr must be used.
                  maxLength: 256
                  minLength: 1
                  type: string
                xpub:
                  description: Extended public key (xpub) of the wallet associated with the accounts.
                  maxLength: 150
                  minLength: 1
                  example: xpub6EsCk1uU6cJzqvP9CdsTiJwT2rF748YkPnhv5Qo8q44DG7nn2vbyt48YRsNSUYS44jFCW9gwvD9kLQu9AuqXpTpM1c5hgg9PsuBLdeNncid
                  type: string
        required: true
      responses:
        '200':
          headers: {}
          content:
            application/json:
              schema:
                type: object
                required:
                  - fast
                  - medium
                  - slow
                properties:
                  fast:
                    type: string
                    description: 'Transaction fee in BTC|LTC to be paid, if transaction should be included in next 1-2 blocks.'
                    example: '0.006584'
                  medium:
                    type: string
                    description: 'Transaction fee in BTC|LTC to be paid, if transaction should be included in next 5-6 blocks.'
                    example: '0.004584'
                  slow:
                    type: string
                    description: 'Transaction fee in BTC|LTC to be paid, if transaction should be included in next 7+ blocks.'
                    example: '0.002584'
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Forbidden
                    description: Forbidden
                    type: string
                  statusCode:
                    example: 403
                    description: '403'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
      summary: Estimate ledger to blockchain transaction fee
      tags:
        - Offchain withdrawal
  /v3/offchain/bitcoin/transfer:
    post:
      description: |
        <h4>2 credits per API call.</h4><br/>
        <p>Send Bitcoin from Tatum account to address. This will create Tatum internal withdrawal request with ID. If every system works as expected, withdrawal request is marked as complete and transaction id is assigned to it.
        <ul>
        <li>If Bitcoin server connection is unavailable, withdrawal request is cancelled.</li>
        <li>If blockchain transfer is successful, but is it not possible to reach Tatum, transaction id of blockchain transaction is returned and withdrawal request must be completed manually, otherwise all other withdrawals will be pending.</li>
        </ul>
        There are two possibilites how the transaction on the blockchain can be created:
        <ul>
        <li>Using mnemonic - all of the addresses, that are generated from the mnemonic are scanned for the incoming deposits
        which are used as a source of the transaction. Assets, which are not used in a transaction are moved to the system address wih the derivation index 0. Address with index 0 cannot be assigned automatically to any account and is used for custodial wallet use cases. For non-custodial wallets, field <b>attr</b> should be present and it should be address with the index 1 of the connected wallet.</li>
        <li>Using keyPair - addresses which are used as a source of the transaction are entered manually</li>
        </ul>
        It is possible to perform ledger to blockchain transaction for ledger accounts without blockchain address assigned to them.<br/>
        This method is a helper method, which internally wraps these steps:
        <ol>
        <li><a href="#operation/storeWithdrawal">Store withdrawal</a> - create a ledger transaction, which debits the assets on the sender account.</li>
        <li><a href="#operation/BtcTransferBlockchain">Perform blockchain transaction</a> - </li>
        <li><a href="#operation/completeWithdrawal">Complete withdrawal</a> - move the withdrawal to the completed state, when all of the previous steps were successful.</li>
        </ol>
        When some of the steps fails, <a href="#operation/cancelInProgressWithdrawal">Cancel withdrawal</a> operation is used, which cancels withdrawal and creates refund transaction to the sender account.</li>
        This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.
        No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and losing funds. In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages.</p>
      operationId: BtcTransfer
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - properties:
                    senderAccountId:
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      maxLength: 24
                      minLength: 24
                      type: string
                    address:
                      description: 'Blockchain address to send assets to. For BTC, LTC, DOGE and BCH, it is possible to enter list of multiple recipient blockchain addresses as a comma separated string.'
                      example: mpTwPdF8up9kidgcAStriUPwRdnE9MRAg7
                      maxLength: 10000
                      minLength: 1
                      type: string
                    amount:
                      description: Amount to be withdrawn to blockchain.
                      maxLength: 38
                      example: '0.001'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    fee:
                      description: 'Fee to be submitted as a transaction fee to blockchain. If none is set, default value of 0.0005 BTC is used. Minimum fee is 0.00001 BTC.'
                      example: '0.0005'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    multipleAmounts:
                      description: 'For BTC, LTC, DOGE and BCH, it is possible to enter list of multiple recipient blockchain amounts. List of recipient addresses must be present in the address field and total sum of amounts must be equal to the amount field.'
                      type: array
                      items:
                        type: string
                        example: '0.1'
                        pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    attr:
                      description: Used to parametrize withdrawal as a change address for left coins from transaction. XPub or attr must be used.
                      maxLength: 256
                      minLength: 1
                      type: string
                    mnemonic:
                      maxLength: 500
                      minLength: 1
                      description: |
                        Mnemonic seed - usually 12-24 words with access to whole wallet.
                        Either mnemonic, keyPair or signature Id must be present - depends on the type of account and xpub.
                        Tatum KMS does not support keyPair type of off-chain transaction, only mnemonic based.
                      example: urge pulp usage sister evidence arrest palm math please chief egg abuse
                      type: string
                    xpub:
                      description: 'Extended public key (xpub) of the wallet associated with the accounts. Should be present, when mnemonic is used.'
                      maxLength: 150
                      minLength: 1
                      example: xpub6EsCk1uU6cJzqvP9CdsTiJwT2rF748YkPnhv5Qo8q44DG7nn2vbyt48YRsNSUYS44jFCW9gwvD9kLQu9AuqXpTpM1c5hgg9PsuBLdeNncid
                      type: string
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderNote:
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      maxLength: 500
                      minLength: 1
                      type: string
                  required:
                    - amount
                    - senderAccountId
                    - address
                    - mnemonic
                    - xpub
                  type: object
                  title: Mnemonic
                - properties:
                    senderAccountId:
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      maxLength: 24
                      minLength: 24
                      type: string
                    address:
                      description: 'Blockchain address to send assets to. For BTC, LTC, DOGE and BCH, it is possible to enter list of multiple recipient blockchain addresses as a comma separated string.'
                      example: mpTwPdF8up9kidgcAStriUPwRdnE9MRAg7
                      maxLength: 10000
                      minLength: 1
                      type: string
                    amount:
                      description: Amount to be withdrawn to blockchain.
                      maxLength: 38
                      example: '0.001'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    fee:
                      description: 'Fee to be submitted as a transaction fee to blockchain. If none is set, default value of 0.0005 BTC is used. Minimum fee is 0.00001 BTC.'
                      example: '0.0005'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    multipleAmounts:
                      description: 'For BTC, LTC, DOGE and BCH, it is possible to enter list of multiple recipient blockchain amounts. List of recipient addresses must be present in the address field and total sum of amounts must be equal to the amount field.'
                      type: array
                      items:
                        type: string
                        example: '0.1'
                        pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    keyPair:
                      description: |
                        Array of assigned blockchain addresses with their private keys.
                        Either mnemonic, keyPair or signature Id must be present - depends on the type of account and xpub.
                        Tatum KMS does not support keyPair type of off-chain transaction, only mnemonic based.
                      type: array
                      items:
                        type: object
                        properties:
                          address:
                            type: string
                            description: Blockchain address assigned to account withdrawal is made from.
                            maxLength: 50
                            minLength: 30
                          privateKey:
                            type: string
                            description: Private key of blockchain address.
                            example: cTmS2jBWXgFaXZ2xG9jhn67TiyTshnMp3UedamzEhGm6BZV1vLgQ
                            maxLength: 52
                            minLength: 52
                    attr:
                      description: Used to parametrize withdrawal as a change address for left coins from transaction. XPub or attr must be used.
                      maxLength: 256
                      minLength: 1
                      type: string
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderNote:
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      maxLength: 500
                      minLength: 1
                      type: string
                  required:
                    - amount
                    - senderAccountId
                    - address
                    - keyPair
                    - attr
                  type: object
                  title: KeyPair
                - properties:
                    senderAccountId:
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      maxLength: 24
                      minLength: 24
                      type: string
                    address:
                      description: 'Blockchain address to send assets to. For BTC, LTC, DOGE and BCH, it is possible to enter list of multiple recipient blockchain addresses as a comma separated string.'
                      example: mpTwPdF8up9kidgcAStriUPwRdnE9MRAg7
                      maxLength: 10000
                      minLength: 1
                      type: string
                    amount:
                      description: Amount to be withdrawn to blockchain.
                      maxLength: 38
                      example: '0.001'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    fee:
                      description: 'Fee to be submitted as a transaction fee to blockchain. If none is set, default value of 0.0005 BTC is used. Minimum fee is 0.00001 BTC.'
                      example: '0.0005'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    multipleAmounts:
                      description: 'For BTC, LTC, DOGE and BCH, it is possible to enter list of multiple recipient blockchain amounts. List of recipient addresses must be present in the address field and total sum of amounts must be equal to the amount field.'
                      type: array
                      items:
                        type: string
                        example: '0.1'
                        pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    attr:
                      description: Used to parametrize withdrawal as a change address for left coins from transaction. XPub or attr must be used.
                      maxLength: 256
                      minLength: 1
                      type: string
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: |
                        Signature hash of the mnemonic, which will be used to sign transactions locally.
                        All signature Ids should be present, which might be used to sign transaction.
                        Tatum KMS does not support keyPair type of off-chain transaction, only mnemonic based.
                    xpub:
                      description: 'Extended public key (xpub) of the wallet associated with the accounts. Should be present, when mnemonic is used.'
                      maxLength: 150
                      minLength: 1
                      example: xpub6EsCk1uU6cJzqvP9CdsTiJwT2rF748YkPnhv5Qo8q44DG7nn2vbyt48YRsNSUYS44jFCW9gwvD9kLQu9AuqXpTpM1c5hgg9PsuBLdeNncid
                      type: string
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderNote:
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      maxLength: 500
                      minLength: 1
                      type: string
                  required:
                    - amount
                    - senderAccountId
                    - address
                    - signatureId
                    - xpub
                  type: object
                  title: signatureId
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      id:
                        description: 'ID of withdrawal. If transaction is not valid in blockchain, use this id to cancel withdrawal.'
                        example: 5e68c66581f2ee32bc354087
                        type: string
                      txId:
                        description: TX hash of successful transaction.
                        example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
                        type: string
                      completed:
                        description: 'Whethet withdrawal was completed in Tatum''s internal ledger. If not, it must be done manually.'
                        example: true
                        type: boolean
                    required:
                      - txId
                      - id
                      - completed
                  - type: object
                    properties:
                      signatureId:
                        description: 'ID of prepared payment template to sign. This is should be stored on a client side to retrieve ID of the blockchain transaction, when signing application signs the transaction and broadcasts it to the blockchain.'
                        example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
                        format: uuid
                        type: string
                    required:
                      - id
                      - signatureId
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: transaction.invalid.body
                        example: transaction.invalid.body
                        type: string
                      message:
                        description: 'Either UTXO, or addresses must be present.'
                        example: 'Either UTXO, or addresses must be present.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.missing
                        example: withdrawal.missing
                        type: string
                      message:
                        description: No such withdrawal.
                        example: No such withdrawal.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: rate.not.found
                        example: rate.not.found
                        type: string
                      message:
                        description: No such currency rate.
                        example: No such currency rate.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: vc.not.found
                        example: vc.not.found
                        type: string
                      message:
                        description: No such virtual currency.
                        example: No such virtual currency.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.failed.transaction.failed
                        example: withdrawal.failed.transaction.failed
                        type: string
                      message:
                        description: 'Unable to store withdrawal, it is impossible to create transaction.'
                        example: 'Unable to store withdrawal, it is impossible to create transaction.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: blockchain.error.code
                        example: blockchain.error.code
                        type: string
                      message:
                        description: '${error.message} Code: ${error.code}'
                        example: '${error.message} Code: ${error.code}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: tx.hash.index.spent
                        example: tx.hash.index.spent
                        type: string
                      message:
                        description: No such UTXO for transaction and index.
                        example: No such UTXO for transaction and index.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: blockchain.broadcast.error
                        example: blockchain.broadcast.error
                        type: string
                      message:
                        description: 'Unable to broadcast transaction, wrong input data.'
                        example: 'Unable to broadcast transaction, wrong input data.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: transaction.preparation.failed
                        example: transaction.preparation.failed
                        type: string
                      message:
                        description: Impossible to prepare transaction. Either mnemonic or keyPair and attr must be present.
                        example: Impossible to prepare transaction. Either mnemonic or keyPair and attr must be present.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.account.virtual
                        example: withdrawal.account.virtual
                        type: string
                      message:
                        description: Sender account cannot be virtual.
                        example: Sender account cannot be virtual.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: offchain.not.supported
                        example: offchain.not.supported
                        type: string
                      message:
                        description: 'Offchain not supported for account with ${account.currency} currency.'
                        example: 'Offchain not supported for account with ${account.currency} currency.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.format
                        example: amount.format
                        type: string
                      message:
                        description: Amount has incorrect format.
                        example: Amount has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: fee.format
                        example: fee.format
                        type: string
                      message:
                        description: Fee has incorrect format.
                        example: Fee has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: transaction.preparation.failed.utxo
                        example: transaction.preparation.failed.utxo
                        type: string
                      message:
                        description: Impossible to find last UTXO.
                        example: Impossible to find last UTXO.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: transaction.failed
                        example: transaction.failed
                        type: string
                      message:
                        description: No spendable inputs.
                        example: No spendable inputs.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: key.generation.failed.wrong.mnemonic
                        example: key.generation.failed.wrong.mnemonic
                        type: string
                      message:
                        description: 'Unable to generate address, wrong mnemonic and index.'
                        example: 'Unable to generate address, wrong mnemonic and index.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.not.cancelled.transaction.failed
                        example: withdrawal.not.cancelled.transaction.failed
                        type: string
                      message:
                        description: 'Unable to broadcast transaction, and impossible to cancel withdrawal. ID is attached, "${withdrawalId}", cancel it manually.'
                        example: 'Unable to broadcast transaction, and impossible to cancel withdrawal. ID is attached, "${withdrawalId}", cancel it manually.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.prepare.failed
                        example: withdrawal.prepare.failed
                        type: string
                      message:
                        description: 'Unable to prepare transaction, withdrawal cancelled.'
                        example: 'Unable to prepare transaction, withdrawal cancelled.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.not.exists
                        example: senderAccount.not.exists
                        type: string
                      message:
                        description: 'Unable to find sender account ${transaction.senderAccountId}.'
                        example: 'Unable to find sender account ${transaction.senderAccountId}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.customer.disabled
                        example: senderAccount.customer.disabled
                        type: string
                      message:
                        description: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        example: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: balance.insufficient
                        example: balance.insufficient
                        type: string
                      message:
                        description: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        example: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: transaction.amount.btc
                        example: transaction.amount.btc
                        type: string
                      message:
                        description: 'BTC|LTC|BCH payment amount must be at least 0.00000001, not ${transaction.amount}.'
                        example: 'BTC|LTC|BCH payment amount must be at least 0.00000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: transaction.amount.eth
                        example: transaction.amount.eth
                        type: string
                      message:
                        description: 'ETH payment amount must be at least 0.000000000000000001, not ${transaction.amount}.'
                        example: 'ETH payment amount must be at least 0.000000000000000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.ada
                        example: amount.ada
                        type: string
                      message:
                        description: 'ADA payment amount must be at least 0.000000000001, not ${transaction.amount}.'
                        example: 'ADA payment amount must be at least 0.000000000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.frozen
                        example: senderAccount.frozen
                        type: string
                      message:
                        description: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        example: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.pending
                        example: withdrawal.pending
                        type: string
                      message:
                        description: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        example: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
      summary: Send Bitcoin from Tatum account to address
      tags:
        - Offchain withdrawal
  /v3/offchain/bcash/transfer:
    post:
      description: |
        <h4>10 credits per API call.</h4><br/>
        <p>Send Bitcoin Cash from Tatum account to address. This will create Tatum internal withdrawal request with ID. If every system works as expected, withdrawal request is marked as complete and transaction id is assigned to it.
        <ul>
        <li>If Bitcoin Cash server connection is unavailable, withdrawal request is cancelled.</li>
        <li>If blockchain transfer is successful, but is it not possible to reach Tatum, transaction id of blockchain transaction is returned and withdrawal request must be completed manually, otherwise all other withdrawals will be pending.</li>
        </ul>
        There are two possibilites how the transaction on the blockchain can be created:
        <ul>
        <li>Using mnemonic - all of the addresses, that are generated from the mnemonic are scanned for the incoming deposits
        which are used as a source of the transaction. Assets, which are not used in a transaction are moved to the system address wih the derivation index 0. Address with index 0 cannot be assigned automatically to any account and is used for custodial wallet use cases. For non-custodial wallets, field <b>attr</b> should be present and it should be address with the index 1 of the connected wallet.</li>
        <li>Using keyPair - addresses which are used as a source of the transaction are entered manually</li>
        </ul>
        It is possible to perform ledger to blockchain transaction for ledger accounts without blockchain address assigned to them.<br/>
        This method is a helper method, which internally wraps these steps:
        <ol>
        <li><a href="#operation/storeWithdrawal">Store withdrawal</a> - create a ledger transaction, which debits the assets on the sender account.</li>
        <li><a href="#operation/BchTransferBlockchain">Perform blockchain transaction</a> - </li>
        <li><a href="#operation/completeWithdrawal">Complete withdrawal</a> - move the withdrawal to the completed state, when all of the previous steps were successful.</li>
        </ol>
        This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.
        No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and losing funds. In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages.</p>
      operationId: BchTransfer
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - properties:
                    senderAccountId:
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      maxLength: 24
                      minLength: 24
                      type: string
                    address:
                      description: 'Blockchain address to send assets to. For BTC, LTC, DOGE and BCH, it is possible to enter list of multiple recipient blockchain addresses as a comma separated string.'
                      example: 'bitcoincash:qrd9khmeg4nqag3h5gzu8vjt537pm7le85lcauzez'
                      maxLength: 10000
                      minLength: 1
                      type: string
                    amount:
                      description: Amount to be withdrawn to blockchain.
                      maxLength: 38
                      example: '0.001'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    multipleAmounts:
                      description: 'For BTC, LTC, DOGE and BCH, it is possible to enter list of multiple recipient blockchain amounts. List of recipient addresses must be present in the address field and total sum of amounts must be equal to the amount field.'
                      type: array
                      items:
                        type: string
                        example: '0.1'
                        pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    fee:
                      description: 'Fee to be submitted as a transaction fee to blockchain. If none is set, default value of 0.00005 LTC is used. Minimum fee is 0.00001 LTC.'
                      example: '0.00005'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    attr:
                      description: Used to parametrize withdrawal as a change address for left coins from transaction. XPub or attr must be used.
                      maxLength: 256
                      minLength: 1
                      type: string
                    mnemonic:
                      maxLength: 500
                      minLength: 1
                      description: |
                        Mnemonic seed - usually 12-24 words with access to whole wallet.
                        Either mnemonic, keyPair or signature Id must be present - depends on the type of account and xpub.
                        Tatum KMS does not support keyPair type of off-chain transaction, only mnemonic based.
                      example: urge pulp usage sister evidence arrest palm math please chief egg abuse
                      type: string
                    xpub:
                      description: 'Extended public key (xpub) of the wallet associated with the accounts. Should be present, when mnemonic is used.'
                      maxLength: 150
                      minLength: 1
                      example: xpub6EsCk1uU6cJzqvP9CdsTiJwT2rF748YkPnhv5Qo8q44DG7nn2vbyt48YRsNSUYS44jFCW9gwvD9kLQu9AuqXpTpM1c5hgg9PsuBLdeNncid
                      type: string
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderNote:
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      maxLength: 500
                      minLength: 1
                      type: string
                  required:
                    - amount
                    - senderAccountId
                    - address
                    - mnemonic
                    - xpub
                  type: object
                - properties:
                    senderAccountId:
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      maxLength: 24
                      minLength: 24
                      type: string
                    address:
                      description: 'Blockchain address to send assets to. For BTC, LTC, DOGE and BCH, it is possible to enter list of multiple recipient blockchain addresses as a comma separated string.'
                      example: 'bitcoincash:qrd9khmeg4nqag3h5gzu8vjt537pm7le85lcauzez'
                      maxLength: 10000
                      minLength: 1
                      type: string
                    amount:
                      description: Amount to be withdrawn to blockchain.
                      maxLength: 38
                      example: '0.001'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    multipleAmounts:
                      description: 'For BTC, LTC, DOGE and BCH, it is possible to enter list of multiple recipient blockchain amounts. List of recipient addresses must be present in the address field and total sum of amounts must be equal to the amount field.'
                      type: array
                      items:
                        type: string
                        example: '0.1'
                        pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    fee:
                      description: 'Fee to be submitted as a transaction fee to blockchain. If none is set, default value of 0.00005 LTC is used. Minimum fee is 0.00001 LTC.'
                      example: '0.00005'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    keyPair:
                      description: |
                        Array of assigned blockchain addresses with their private keys.
                        Either mnemonic, keyPair or signature Id must be present - depends on the type of account and xpub.
                        Tatum KMS does not support keyPair type of off-chain transaction, only mnemonic based.
                      type: array
                      items:
                        type: object
                        properties:
                          address:
                            type: string
                            description: Blockchain address assigned to account withdrawal is made from.
                            example: 'bitcoincash:qrd9khmeg4nqag3h5gzu8vjt537pm7leez'
                            maxLength: 50
                            minLength: 30
                          privateKey:
                            type: string
                            description: Private key of blockchain address.
                            example: cTmS2jBWXgFaXZ2xG9jhn67TiyTshnMp3UedamzEhGm6BZV1vLgQ
                            maxLength: 52
                            minLength: 52
                    attr:
                      description: Used to parametrize withdrawal as a change address for left coins from transaction. XPub or attr must be used.
                      maxLength: 256
                      minLength: 1
                      type: string
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderNote:
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      maxLength: 500
                      minLength: 1
                      type: string
                  required:
                    - amount
                    - senderAccountId
                    - address
                    - keyPair
                    - attr
                  type: object
                - properties:
                    senderAccountId:
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      maxLength: 24
                      minLength: 24
                      type: string
                    address:
                      description: 'Blockchain address to send assets to. For BTC, LTC, DOGE and BCH, it is possible to enter list of multiple recipient blockchain addresses as a comma separated string.'
                      example: 'bitcoincash:qrd9khmeg4nqag3h5gzu8vjt537pm7le85lcauzez'
                      maxLength: 10000
                      minLength: 1
                      type: string
                    amount:
                      description: Amount to be withdrawn to blockchain.
                      maxLength: 38
                      example: '0.001'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    multipleAmounts:
                      description: 'For BTC, LTC, DOGE and BCH, it is possible to enter list of multiple recipient blockchain amounts. List of recipient addresses must be present in the address field and total sum of amounts must be equal to the amount field.'
                      type: array
                      items:
                        type: string
                        example: '0.1'
                        pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    fee:
                      description: 'Fee to be submitted as a transaction fee to blockchain. If none is set, default value of 0.00005 LTC is used. Minimum fee is 0.00001 LTC.'
                      example: '0.00005'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    attr:
                      description: Used to parametrize withdrawal as a change address for left coins from transaction. XPub or attr must be used.
                      maxLength: 256
                      minLength: 1
                      type: string
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: |
                        Signature hash of the mnemonic, which will be used to sign transactions locally.
                        All signature Ids should be present, which might be used to sign transaction.
                        Tatum KMS does not support keyPair type of off-chain transaction, only mnemonic based.
                    xpub:
                      description: 'Extended public key (xpub) of the wallet associated with the accounts. Should be present, when mnemonic is used.'
                      maxLength: 150
                      minLength: 1
                      example: xpub6EsCk1uU6cJzqvP9CdsTiJwT2rF748YkPnhv5Qo8q44DG7nn2vbyt48YRsNSUYS44jFCW9gwvD9kLQu9AuqXpTpM1c5hgg9PsuBLdeNncid
                      type: string
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderNote:
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      maxLength: 500
                      minLength: 1
                      type: string
                  required:
                    - amount
                    - senderAccountId
                    - address
                    - signatureId
                    - xpub
                  type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      id:
                        description: 'ID of withdrawal. If transaction is not valid in blockchain, use this id to cancel withdrawal.'
                        example: 5e68c66581f2ee32bc354087
                        type: string
                      txId:
                        description: TX hash of successful transaction.
                        example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
                        type: string
                      completed:
                        description: 'Whethet withdrawal was completed in Tatum''s internal ledger. If not, it must be done manually.'
                        example: true
                        type: boolean
                    required:
                      - txId
                      - id
                      - completed
                  - type: object
                    properties:
                      signatureId:
                        description: 'ID of prepared payment template to sign. This is should be stored on a client side to retrieve ID of the blockchain transaction, when signing application signs the transaction and broadcasts it to the blockchain.'
                        example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
                        format: uuid
                        type: string
                    required:
                      - id
                      - signatureId
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: transaction.invalid.body
                        example: transaction.invalid.body
                        type: string
                      message:
                        description: 'Either UTXO, or addresses must be present.'
                        example: 'Either UTXO, or addresses must be present.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.missing
                        example: withdrawal.missing
                        type: string
                      message:
                        description: No such withdrawal.
                        example: No such withdrawal.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: rate.not.found
                        example: rate.not.found
                        type: string
                      message:
                        description: No such currency rate.
                        example: No such currency rate.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: vc.not.found
                        example: vc.not.found
                        type: string
                      message:
                        description: No such virtual currency.
                        example: No such virtual currency.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.failed.transaction.failed
                        example: withdrawal.failed.transaction.failed
                        type: string
                      message:
                        description: 'Unable to store withdrawal, it is impossible to create transaction.'
                        example: 'Unable to store withdrawal, it is impossible to create transaction.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: blockchain.error.code
                        example: blockchain.error.code
                        type: string
                      message:
                        description: '${error.message} Code: ${error.code}'
                        example: '${error.message} Code: ${error.code}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: blockchain.broadcast.error
                        example: blockchain.broadcast.error
                        type: string
                      message:
                        description: 'Unable to broadcast transaction, wrong input data.'
                        example: 'Unable to broadcast transaction, wrong input data.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: transaction.preparation.failed
                        example: transaction.preparation.failed
                        type: string
                      message:
                        description: Impossible to prepare transaction. Either mnemonic or keyPair and attr must be present.
                        example: Impossible to prepare transaction. Either mnemonic or keyPair and attr must be present.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.account.virtual
                        example: withdrawal.account.virtual
                        type: string
                      message:
                        description: Sender account cannot be virtual.
                        example: Sender account cannot be virtual.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: offchain.not.supported
                        example: offchain.not.supported
                        type: string
                      message:
                        description: 'Offchain not supported for account with ${account.currency} currency.'
                        example: 'Offchain not supported for account with ${account.currency} currency.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.format
                        example: amount.format
                        type: string
                      message:
                        description: Amount has incorrect format.
                        example: Amount has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: fee.format
                        example: fee.format
                        type: string
                      message:
                        description: Fee has incorrect format.
                        example: Fee has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: transaction.failed
                        example: transaction.failed
                        type: string
                      message:
                        description: No spendable inputs.
                        example: No spendable inputs.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: key.generation.failed.wrong.mnemonic
                        example: key.generation.failed.wrong.mnemonic
                        type: string
                      message:
                        description: 'Unable to generate address, wrong mnemonic and index.'
                        example: 'Unable to generate address, wrong mnemonic and index.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.not.cancelled.transaction.failed
                        example: withdrawal.not.cancelled.transaction.failed
                        type: string
                      message:
                        description: 'Unable to broadcast transaction, and impossible to cancel withdrawal. ID is attached, "${withdrawalId}", cancel it manually.'
                        example: 'Unable to broadcast transaction, and impossible to cancel withdrawal. ID is attached, "${withdrawalId}", cancel it manually.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.prepare.failed
                        example: withdrawal.prepare.failed
                        type: string
                      message:
                        description: 'Unable to prepare transaction, withdrawal cancelled.'
                        example: 'Unable to prepare transaction, withdrawal cancelled.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.not.exists
                        example: senderAccount.not.exists
                        type: string
                      message:
                        description: 'Unable to find sender account ${transaction.senderAccountId}.'
                        example: 'Unable to find sender account ${transaction.senderAccountId}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.customer.disabled
                        example: senderAccount.customer.disabled
                        type: string
                      message:
                        description: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        example: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: balance.insufficient
                        example: balance.insufficient
                        type: string
                      message:
                        description: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        example: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.btc
                        example: amount.btc
                        type: string
                      message:
                        description: 'BTC|LTC|BCH payment amount must be at least 0.00000000000001, not ${transaction.amount}.'
                        example: 'BTC|LTC|BCH payment amount must be at least 0.00000000000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.eth
                        example: amount.eth
                        type: string
                      message:
                        description: 'ETH payment amount must be at least 0.000000000001, not ${transaction.amount}.'
                        example: 'ETH payment amount must be at least 0.000000000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.frozen
                        example: senderAccount.frozen
                        type: string
                      message:
                        description: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        example: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.pending
                        example: withdrawal.pending
                        type: string
                      message:
                        description: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        example: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
      summary: Send Bitcoin Cash from Tatum account to address
      tags:
        - Offchain withdrawal
  /v3/offchain/litecoin/transfer:
    post:
      description: |
        <h4>10 credits per API call.</h4><br/>
        <p>Send Litecoin from Tatum account to address. This will create Tatum internal withdrawal request with ID. If every system works as expected, withdrawal request is marked as complete and transaction id is assigned to it.
        <ul>
        <li>If Litecoin server connection is unavailable, withdrawal request is cancelled.</li>
        <li>If blockchain transfer is successful, but is it not possible to reach Tatum, transaction id of blockchain transaction is returned and withdrawal request must be completed manually, otherwise all other withdrawals will be pending.</li>
        </ul>
        There are two possibilites how the transaction on the blockchain can be created:
        <ul>
        <li>Using mnemonic - all of the addresses, that are generated from the mnemonic are scanned for the incoming deposits
        which are used as a source of the transaction. Assets, which are not used in a transaction are moved to the system address wih the derivation index 0. Address with index 0 cannot be assigned automatically to any account and is used for custodial wallet use cases. For non-custodial wallets, field <b>attr</b> should be present and it should be address with the index 1 of the connected wallet.</li>
        <li>Using keyPair - addresses which are used as a source of the transaction are entered manually</li>
        </ul>
        It is possible to perform ledger to blockchain transaction for ledger accounts without blockchain address assigned to them.<br/>
        This method is a helper method, which internally wraps these steps:
        <ol>
        <li><a href="#operation/storeWithdrawal">Store withdrawal</a> - create a ledger transaction, which debits the assets on the sender account.</li>
        <li><a href="#operation/LtcTransferBlockchain">Perform blockchain transaction</a> - </li>
        <li><a href="#operation/completeWithdrawal">Complete withdrawal</a> - move the withdrawal to the completed state, when all of the previous steps were successful.</li>
        </ol>
        This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.
        No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and losing funds. In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages.</p>
      operationId: LtcTransfer
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - properties:
                    senderAccountId:
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      maxLength: 24
                      minLength: 24
                      type: string
                    address:
                      description: 'Blockchain address to send assets to. For BTC, LTC, DOGE and BCH, it is possible to enter list of multiple recipient blockchain addresses as a comma separated string.'
                      example: mpTwPdF8up9kidgcAStriUPwRdnE9MRAg7
                      maxLength: 10000
                      minLength: 1
                      type: string
                    amount:
                      description: Amount to be withdrawn to blockchain.
                      maxLength: 38
                      example: '0.001'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    fee:
                      description: 'Fee to be submitted as a transaction fee to blockchain. If none is set, default value of 0.0005 LTC is used. Minimum fee is 0.00001 LTC.'
                      example: '0.0005'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    multipleAmounts:
                      description: 'For BTC, LTC, DOGE and BCH, it is possible to enter list of multiple recipient blockchain amounts. List of recipient addresses must be present in the address field and total sum of amounts must be equal to the amount field.'
                      type: array
                      items:
                        type: string
                        example: '0.1'
                        pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    attr:
                      description: Used to parametrize withdrawal as a change address for left coins from transaction. XPub or attr must be used.
                      maxLength: 256
                      minLength: 1
                      type: string
                    mnemonic:
                      maxLength: 500
                      minLength: 1
                      description: |
                        Mnemonic seed - usually 12-24 words with access to whole wallet.
                        Either mnemonic, keyPair or signature Id must be present - depends on the type of account and xpub.
                        Tatum KMS does not support keyPair type of off-chain transaction, only mnemonic based.
                      example: urge pulp usage sister evidence arrest palm math please chief egg abuse
                      type: string
                    xpub:
                      description: 'Extended public key (xpub) of the wallet associated with the accounts. Should be present, when mnemonic is used.'
                      maxLength: 150
                      minLength: 1
                      example: xpub6EsCk1uU6cJzqvP9CdsTiJwT2rF748YkPnhv5Qo8q44DG7nn2vbyt48YRsNSUYS44jFCW9gwvD9kLQu9AuqXpTpM1c5hgg9PsuBLdeNncid
                      type: string
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderNote:
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      maxLength: 500
                      minLength: 1
                      type: string
                  required:
                    - amount
                    - senderAccountId
                    - address
                    - mnemonic
                    - xpub
                  type: object
                - properties:
                    senderAccountId:
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      maxLength: 24
                      minLength: 24
                      type: string
                    address:
                      description: 'Blockchain address to send assets to. For BTC, LTC, DOGE and BCH, it is possible to enter list of multiple recipient blockchain addresses as a comma separated string.'
                      example: mpTwPdF8up9kidgcAStriUPwRdnE9MRAg7
                      maxLength: 10000
                      minLength: 1
                      type: string
                    amount:
                      description: Amount to be withdrawn to blockchain.
                      maxLength: 38
                      example: '0.001'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    fee:
                      description: 'Fee to be submitted as a transaction fee to blockchain. If none is set, default value of 0.0005 LTC is used. Minimum fee is 0.00001 LTC.'
                      example: '0.0005'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    multipleAmounts:
                      description: 'For BTC, LTC, DOGE and BCH, it is possible to enter list of multiple recipient blockchain amounts. List of recipient addresses must be present in the address field and total sum of amounts must be equal to the amount field.'
                      type: array
                      items:
                        type: string
                        example: '0.1'
                        pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    keyPair:
                      description: |
                        Array of assigned blockchain addresses with their private keys.
                        Either mnemonic, keyPair or signature Id must be present - depends on the type of account and xpub.
                        Tatum KMS does not support keyPair type of off-chain transaction, only mnemonic based.
                      type: array
                      items:
                        type: object
                        properties:
                          address:
                            type: string
                            description: Blockchain address assigned to account withdrawal is made from.
                            maxLength: 50
                            minLength: 30
                          privateKey:
                            type: string
                            description: Private key of blockchain address.
                            maxLength: 52
                            example: cTmS2jBWXgFaXZ2xG9jhn67TiyTshnMp3UedamzEhGm6BZV1vLgQ
                            minLength: 52
                    attr:
                      description: Used to parametrize withdrawal as a change address for left coins from transaction. XPub or attr must be used.
                      maxLength: 256
                      minLength: 1
                      type: string
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderNote:
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      maxLength: 500
                      minLength: 1
                      type: string
                  required:
                    - amount
                    - senderAccountId
                    - address
                    - keyPair
                    - attr
                  type: object
                - properties:
                    senderAccountId:
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      maxLength: 24
                      minLength: 24
                      type: string
                    address:
                      description: 'Blockchain address to send assets to. For BTC, LTC, DOGE and BCH, it is possible to enter list of multiple recipient blockchain addresses as a comma separated string.'
                      example: mpTwPdF8up9kidgcAStriUPwRdnE9MRAg7
                      maxLength: 10000
                      minLength: 1
                      type: string
                    amount:
                      description: Amount to be withdrawn to blockchain.
                      maxLength: 38
                      example: '0.001'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    fee:
                      description: 'Fee to be submitted as a transaction fee to blockchain. If none is set, default value of 0.0005 LTC is used. Minimum fee is 0.00001 LTC.'
                      example: '0.0005'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    multipleAmounts:
                      description: 'For BTC, LTC, DOGE and BCH, it is possible to enter list of multiple recipient blockchain amounts. List of recipient addresses must be present in the address field and total sum of amounts must be equal to the amount field.'
                      type: array
                      items:
                        type: string
                        example: '0.1'
                        pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    attr:
                      description: Used to parametrize withdrawal as a change address for left coins from transaction. XPub or attr must be used.
                      maxLength: 256
                      minLength: 1
                      type: string
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: |
                        Signature hash of the mnemonic, which will be used to sign transactions locally.
                        All signature Ids should be present, which might be used to sign transaction.
                        Tatum KMS does not support keyPair type of off-chain transaction, only mnemonic based.
                    xpub:
                      description: 'Extended public key (xpub) of the wallet associated with the accounts. Should be present, when mnemonic is used.'
                      maxLength: 150
                      minLength: 1
                      example: xpub6EsCk1uU6cJzqvP9CdsTiJwT2rF748YkPnhv5Qo8q44DG7nn2vbyt48YRsNSUYS44jFCW9gwvD9kLQu9AuqXpTpM1c5hgg9PsuBLdeNncid
                      type: string
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderNote:
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      maxLength: 500
                      minLength: 1
                      type: string
                  required:
                    - amount
                    - senderAccountId
                    - address
                    - signatureId
                    - xpub
                  type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      id:
                        description: 'ID of withdrawal. If transaction is not valid in blockchain, use this id to cancel withdrawal.'
                        example: 5e68c66581f2ee32bc354087
                        type: string
                      txId:
                        description: TX hash of successful transaction.
                        example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
                        type: string
                      completed:
                        description: 'Whethet withdrawal was completed in Tatum''s internal ledger. If not, it must be done manually.'
                        example: true
                        type: boolean
                    required:
                      - txId
                      - id
                      - completed
                  - type: object
                    properties:
                      signatureId:
                        description: 'ID of prepared payment template to sign. This is should be stored on a client side to retrieve ID of the blockchain transaction, when signing application signs the transaction and broadcasts it to the blockchain.'
                        example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
                        format: uuid
                        type: string
                    required:
                      - id
                      - signatureId
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: transaction.invalid.body
                        example: transaction.invalid.body
                        type: string
                      message:
                        description: 'Either UTXO, or addresses must be present.'
                        example: 'Either UTXO, or addresses must be present.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.missing
                        example: withdrawal.missing
                        type: string
                      message:
                        description: No such withdrawal.
                        example: No such withdrawal.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: rate.not.found
                        example: rate.not.found
                        type: string
                      message:
                        description: No such currency rate.
                        example: No such currency rate.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: vc.not.found
                        example: vc.not.found
                        type: string
                      message:
                        description: No such virtual currency.
                        example: No such virtual currency.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.failed.transaction.failed
                        example: withdrawal.failed.transaction.failed
                        type: string
                      message:
                        description: 'Unable to store withdrawal, it is impossible to create transaction.'
                        example: 'Unable to store withdrawal, it is impossible to create transaction.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: blockchain.error.code
                        example: blockchain.error.code
                        type: string
                      message:
                        description: '${error.message} Code: ${error.code}'
                        example: '${error.message} Code: ${error.code}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: tx.hash.index.spent
                        example: tx.hash.index.spent
                        type: string
                      message:
                        description: No such UTXO for transaction and index.
                        example: No such UTXO for transaction and index.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: blockchain.broadcast.error
                        example: blockchain.broadcast.error
                        type: string
                      message:
                        description: 'Unable to broadcast transaction, wrong input data.'
                        example: 'Unable to broadcast transaction, wrong input data.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: transaction.preparation.failed
                        example: transaction.preparation.failed
                        type: string
                      message:
                        description: Impossible to prepare transaction. Either mnemonic or keyPair and attr must be present.
                        example: Impossible to prepare transaction. Either mnemonic or keyPair and attr must be present.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.account.virtual
                        example: withdrawal.account.virtual
                        type: string
                      message:
                        description: Sender account cannot be virtual.
                        example: Sender account cannot be virtual.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: offchain.not.supported
                        example: offchain.not.supported
                        type: string
                      message:
                        description: 'Offchain not supported for account with ${account.currency} currency.'
                        example: 'Offchain not supported for account with ${account.currency} currency.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.format
                        example: amount.format
                        type: string
                      message:
                        description: Amount has incorrect format.
                        example: Amount has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: fee.format
                        example: fee.format
                        type: string
                      message:
                        description: Fee has incorrect format.
                        example: Fee has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: transaction.preparation.failed.utxo
                        example: transaction.preparation.failed.utxo
                        type: string
                      message:
                        description: Impossible to find last UTXO.
                        example: Impossible to find last UTXO.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: transaction.failed
                        example: transaction.failed
                        type: string
                      message:
                        description: No spendable inputs.
                        example: No spendable inputs.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: key.generation.failed.wrong.mnemonic
                        example: key.generation.failed.wrong.mnemonic
                        type: string
                      message:
                        description: 'Unable to generate address, wrong mnemonic and index.'
                        example: 'Unable to generate address, wrong mnemonic and index.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.not.cancelled.transaction.failed
                        example: withdrawal.not.cancelled.transaction.failed
                        type: string
                      message:
                        description: 'Unable to broadcast transaction, and impossible to cancel withdrawal. ID is attached, "${withdrawalId}", cancel it manually.'
                        example: 'Unable to broadcast transaction, and impossible to cancel withdrawal. ID is attached, "${withdrawalId}", cancel it manually.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.prepare.failed
                        example: withdrawal.prepare.failed
                        type: string
                      message:
                        description: 'Unable to prepare transaction, withdrawal cancelled.'
                        example: 'Unable to prepare transaction, withdrawal cancelled.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.not.exists
                        example: senderAccount.not.exists
                        type: string
                      message:
                        description: 'Unable to find sender account ${transaction.senderAccountId}.'
                        example: 'Unable to find sender account ${transaction.senderAccountId}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.customer.disabled
                        example: senderAccount.customer.disabled
                        type: string
                      message:
                        description: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        example: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: balance.insufficient
                        example: balance.insufficient
                        type: string
                      message:
                        description: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        example: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.btc
                        example: amount.btc
                        type: string
                      message:
                        description: 'BTC|LTC|BCH payment amount must be at least 0.00000000000001, not ${transaction.amount}.'
                        example: 'BTC|LTC|BCH payment amount must be at least 0.00000000000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.eth
                        example: amount.eth
                        type: string
                      message:
                        description: 'ETH payment amount must be at least 0.000000000001, not ${transaction.amount}.'
                        example: 'ETH payment amount must be at least 0.000000000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.frozen
                        example: senderAccount.frozen
                        type: string
                      message:
                        description: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        example: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.pending
                        example: withdrawal.pending
                        type: string
                      message:
                        description: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        example: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
      summary: Send Litecoin from Tatum account to address
      tags:
        - Offchain withdrawal
  /v3/offchain/flow/transfer:
    post:
      description: |
        <h4>100 credits per API call. Tatum covers the fee connected to the transaction costs in subscription credits. This operation can be done on mainnet only for paid plans.</h4><br/>
        <p>Send Flow or FUSD from Tatum account to address. This will create Tatum internal withdrawal request with ID. If every system works as expected, withdrawal request is marked as complete and transaction id is assigned to it.
        <ul>
        <li>If Flow server connection is unavailable, withdrawal request is cancelled.</li>
        <li>If blockchain transfer is successful, but is it not possible to reach Tatum, transaction id of blockchain transaction is returned and withdrawal request must be completed manually, otherwise all other withdrawals will be pending.</li>
        </ul>
        There are two possibilites how the transaction on the blockchain can be created:
        <ul>
        <li>Using mnemonic and index - private key is generated based on the index in the mnemonic.</li>
        <li>Using secret - private keys is entered manually.</li>
        </ul>
        It is possible to perform ledger to blockchain transaction for ledger accounts without blockchain address assigned to them.<br/>
        This method is a helper method, which internally wraps these steps:
        <ol>
        <li><a href="#operation/storeWithdrawal">Store withdrawal</a> - create a ledger transaction, which debits the assets on the sender account.</li>
        <li><a href="#operation/FlowTransferBlockchain">Perform blockchain transaction</a> - </li>
        <li><a href="#operation/completeWithdrawal">Complete withdrawal</a> - move the withdrawal to the completed state, when all of the previous steps were successful.</li>
        </ol>
        This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.
        No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and losing funds. In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages.</p>
      operationId: FlowTransfer
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 61b3bffddfb389cde19c73be
                      type: string
                    account:
                      description: Blockchain account to send from
                      example: '0x955cd3f17b2fd8ad'
                      maxLength: 18
                      minLength: 18
                      type: string
                    address:
                      description: Blockchain address to send assets
                      example: '0x955cd3f17b2fd8ae'
                      maxLength: 18
                      minLength: 18
                      type: string
                    amount:
                      description: 'Amount to be sent, in Flow.'
                      maxLength: 38
                      example: '10000'
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                      type: string
                    mnemonic:
                      maxLength: 500
                      minLength: 1
                      description: Mnemonic to generate private key.
                      example: urge pulp usage sister evidence arrest palm math please chief egg abuse
                      type: string
                    index:
                      type: number
                      minimum: 0
                      description: Index to the specific address from mnemonic.
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account.
                      example: Sender note
                      type: string
                  required:
                    - account
                    - senderAccountId
                    - address
                    - amount
                    - mnemonic
                    - index
                - type: object
                  properties:
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 61b3bffddfb389cde19c73be
                      type: string
                    account:
                      description: Blockchain account to send from
                      example: '0x955cd3f17b2fd8ad'
                      maxLength: 18
                      minLength: 18
                      type: string
                    address:
                      description: Blockchain address to send assets
                      example: '107627102415955000'
                      maxLength: 18
                      minLength: 18
                      type: string
                    amount:
                      description: 'Amount to be sent, in Flow.'
                      maxLength: 38
                      example: '10000'
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                      type: string
                    privateKey:
                      maxLength: 64
                      minLength: 64
                      description: 'Secret for account. Secret, or signature Id must be present.'
                      example: 37afa218d41d9cd6a2c6f2b96d9eaa3ad96c598252bc50e4d45d62f9356a51f8
                      type: string
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account.
                      example: Sender note
                      type: string
                  required:
                    - account
                    - senderAccountId
                    - address
                    - privateKey
                    - amount
                - type: object
                  properties:
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 61b3bffddfb389cde19c73be
                      type: string
                    account:
                      description: Blockchain account to send from
                      example: '0x955cd3f17b2fd8ad'
                      maxLength: 18
                      minLength: 18
                      type: string
                    address:
                      description: Blockchain address to send assets
                      example: '107627102436159578'
                      maxLength: 18
                      minLength: 18
                      type: string
                    amount:
                      description: 'Amount to be sent, in Flow.'
                      maxLength: 38
                      example: '10000'
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                      type: string
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: 'Identifier of the secret associated in signing application. Secret, or signature Id must be present.'
                    index:
                      type: number
                      minimum: 0
                      description: 'If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account.
                      example: Sender note
                      type: string
                  required:
                    - account
                    - senderAccountId
                    - address
                    - amount
                    - signatureId
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      id:
                        description: 'ID of withdrawal. If transaction is not valid in blockchain, use this id to cancel withdrawal.'
                        example: 5e68c66581f2ee32bc354087
                        type: string
                      txId:
                        description: TX hash of successful transaction.
                        example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
                        type: string
                      completed:
                        description: 'Whethet withdrawal was completed in Tatum''s internal ledger. If not, it must be done manually.'
                        example: true
                        type: boolean
                    required:
                      - txId
                      - id
                      - completed
                  - type: object
                    properties:
                      signatureId:
                        description: 'ID of prepared payment template to sign. This is should be stored on a client side to retrieve ID of the blockchain transaction, when signing application signs the transaction and broadcasts it to the blockchain.'
                        example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
                        format: uuid
                        type: string
                    required:
                      - id
                      - signatureId
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: transaction.invalid.body
                        example: transaction.invalid.body
                        type: string
                      message:
                        description: 'Either UTXO, or addresses must be present.'
                        example: 'Either UTXO, or addresses must be present.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.missing
                        example: withdrawal.missing
                        type: string
                      message:
                        description: No such withdrawal.
                        example: No such withdrawal.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: rate.not.found
                        example: rate.not.found
                        type: string
                      message:
                        description: No such currency rate.
                        example: No such currency rate.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: vc.not.found
                        example: vc.not.found
                        type: string
                      message:
                        description: No such virtual currency.
                        example: No such virtual currency.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.failed.transaction.failed
                        example: withdrawal.failed.transaction.failed
                        type: string
                      message:
                        description: 'Unable to store withdrawal, it is impossible to create transaction.'
                        example: 'Unable to store withdrawal, it is impossible to create transaction.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: blockchain.error.code
                        example: blockchain.error.code
                        type: string
                      message:
                        description: '${error.message} Code: ${error.code}'
                        example: '${error.message} Code: ${error.code}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: tx.hash.index.spent
                        example: tx.hash.index.spent
                        type: string
                      message:
                        description: No such UTXO for transaction and index.
                        example: No such UTXO for transaction and index.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: blockchain.broadcast.error
                        example: blockchain.broadcast.error
                        type: string
                      message:
                        description: 'Unable to broadcast transaction, wrong input data.'
                        example: 'Unable to broadcast transaction, wrong input data.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: transaction.preparation.failed
                        example: transaction.preparation.failed
                        type: string
                      message:
                        description: Impossible to prepare transaction. Either mnemonic or keyPair and attr must be present.
                        example: Impossible to prepare transaction. Either mnemonic or keyPair and attr must be present.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.account.virtual
                        example: withdrawal.account.virtual
                        type: string
                      message:
                        description: Sender account cannot be virtual.
                        example: Sender account cannot be virtual.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: offchain.not.supported
                        example: offchain.not.supported
                        type: string
                      message:
                        description: 'Offchain not supported for account with ${account.currency} currency.'
                        example: 'Offchain not supported for account with ${account.currency} currency.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.format
                        example: amount.format
                        type: string
                      message:
                        description: Amount has incorrect format.
                        example: Amount has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: fee.format
                        example: fee.format
                        type: string
                      message:
                        description: Fee has incorrect format.
                        example: Fee has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: transaction.preparation.failed.utxo
                        example: transaction.preparation.failed.utxo
                        type: string
                      message:
                        description: Impossible to find last UTXO.
                        example: Impossible to find last UTXO.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: transaction.failed
                        example: transaction.failed
                        type: string
                      message:
                        description: No spendable inputs.
                        example: No spendable inputs.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: key.generation.failed.wrong.mnemonic
                        example: key.generation.failed.wrong.mnemonic
                        type: string
                      message:
                        description: 'Unable to generate address, wrong mnemonic and index.'
                        example: 'Unable to generate address, wrong mnemonic and index.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.not.cancelled.transaction.failed
                        example: withdrawal.not.cancelled.transaction.failed
                        type: string
                      message:
                        description: 'Unable to broadcast transaction, and impossible to cancel withdrawal. ID is attached, "${withdrawalId}", cancel it manually.'
                        example: 'Unable to broadcast transaction, and impossible to cancel withdrawal. ID is attached, "${withdrawalId}", cancel it manually.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.prepare.failed
                        example: withdrawal.prepare.failed
                        type: string
                      message:
                        description: 'Unable to prepare transaction, withdrawal cancelled.'
                        example: 'Unable to prepare transaction, withdrawal cancelled.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.not.exists
                        example: senderAccount.not.exists
                        type: string
                      message:
                        description: 'Unable to find sender account ${transaction.senderAccountId}.'
                        example: 'Unable to find sender account ${transaction.senderAccountId}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.customer.disabled
                        example: senderAccount.customer.disabled
                        type: string
                      message:
                        description: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        example: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: balance.insufficient
                        example: balance.insufficient
                        type: string
                      message:
                        description: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        example: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.btc
                        example: amount.btc
                        type: string
                      message:
                        description: 'BTC|LTC|BCH payment amount must be at least 0.00000000000001, not ${transaction.amount}.'
                        example: 'BTC|LTC|BCH payment amount must be at least 0.00000000000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.eth
                        example: amount.eth
                        type: string
                      message:
                        description: 'ETH payment amount must be at least 0.000000000001, not ${transaction.amount}.'
                        example: 'ETH payment amount must be at least 0.000000000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.frozen
                        example: senderAccount.frozen
                        type: string
                      message:
                        description: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        example: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.pending
                        example: withdrawal.pending
                        type: string
                      message:
                        description: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        example: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
      summary: Send Flow or FUSD from Tatum account to address
      tags:
        - Offchain withdrawal
  /v3/offchain/dogecoin/transfer:
    post:
      description: |
        <h4>4 credits per API call.</h4><br/>
        <p>Send Dogecoin from Tatum account to address. This will create Tatum internal withdrawal request with ID. If every system works as expected, withdrawal request is marked as complete and transaction id is assigned to it.
        <ul>
        <li>If Dogecoin server connection is unavailable, withdrawal request is cancelled.</li>
        <li>If blockchain transfer is successful, but is it not possible to reach Tatum, transaction id of blockchain transaction is returned and withdrawal request must be completed manually, otherwise all other withdrawals will be pending.</li>
        </ul>
        There are two possibilites how the transaction on the blockchain can be created:
        <ul>
        <li>Using mnemonic - all of the addresses, that are generated from the mnemonic are scanned for the incoming deposits
        which are used as a source of the transaction. Assets, which are not used in a transaction are moved to the system address wih the derivation index 0. Address with index 0 cannot be assigned automatically to any account and is used for custodial wallet use cases. For non-custodial wallets, field <b>attr</b> should be present and it should be address with the index 1 of the connected wallet.</li>
        <li>Using keyPair - addresses which are used as a source of the transaction are entered manually</li>
        </ul>
        It is possible to perform ledger to blockchain transaction for ledger accounts without blockchain address assigned to them.<br/>
        This method is a helper method, which internally wraps these steps:
        <ol>
        <li><a href="#operation/storeWithdrawal">Store withdrawal</a> - create a ledger transaction, which debits the assets on the sender account.</li>
        <li><a href="#operation/DogeTransferBlockchain">Perform blockchain transaction</a> - </li>
        <li><a href="#operation/completeWithdrawal">Complete withdrawal</a> - move the withdrawal to the completed state, when all of the previous steps were successful.</li>
        </ol>
        This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.
        No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and losing funds. In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages.</p>
      operationId: DogeTransfer
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - properties:
                    senderAccountId:
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      maxLength: 24
                      minLength: 24
                      type: string
                    address:
                      description: 'Blockchain address to send assets to. For BTC, LTC, DOGE and BCH, it is possible to enter list of multiple recipient blockchain addresses as a comma separated string.'
                      example: mpTwPdF8up9kidgcAStriUPwRdnE9MRAg7
                      maxLength: 10000
                      minLength: 1
                      type: string
                    amount:
                      description: Amount to be withdrawn to blockchain.
                      maxLength: 38
                      example: '0.001'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    fee:
                      description: 'Fee to be submitted as a transaction fee to blockchain. If none is set, default value of 1 DOGE is used.'
                      example: '1'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    multipleAmounts:
                      description: 'For BTC, LTC, DOGE and BCH, it is possible to enter list of multiple recipient blockchain amounts. List of recipient addresses must be present in the address field and total sum of amounts must be equal to the amount field.'
                      type: array
                      items:
                        type: string
                        example: '0.1'
                        pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    attr:
                      description: Used to parametrize withdrawal as a change address for left coins from transaction. XPub or attr must be used.
                      maxLength: 256
                      minLength: 1
                      type: string
                    mnemonic:
                      maxLength: 500
                      minLength: 1
                      description: |
                        Mnemonic seed - usually 12-24 words with access to whole wallet.
                        Either mnemonic, keyPair or signature Id must be present - depends on the type of account and xpub.
                        Tatum KMS does not support keyPair type of off-chain transaction, only mnemonic based.
                      example: urge pulp usage sister evidence arrest palm math please chief egg abuse
                      type: string
                    xpub:
                      description: 'Extended public key (xpub) of the wallet associated with the accounts. Should be present, when mnemonic is used.'
                      maxLength: 150
                      minLength: 1
                      example: xpub6EsCk1uU6cJzqvP9CdsTiJwT2rF748YkPnhv5Qo8q44DG7nn2vbyt48YRsNSUYS44jFCW9gwvD9kLQu9AuqXpTpM1c5hgg9PsuBLdeNncid
                      type: string
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderNote:
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      maxLength: 500
                      minLength: 1
                      type: string
                  required:
                    - amount
                    - senderAccountId
                    - address
                    - mnemonic
                    - xpub
                  type: object
                - properties:
                    senderAccountId:
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      maxLength: 24
                      minLength: 24
                      type: string
                    address:
                      description: 'Blockchain address to send assets to. For BTC, LTC, DOGE and BCH, it is possible to enter list of multiple recipient blockchain addresses as a comma separated string.'
                      example: mpTwPdF8up9kidgcAStriUPwRdnE9MRAg7
                      maxLength: 10000
                      minLength: 1
                      type: string
                    amount:
                      description: Amount to be withdrawn to blockchain.
                      maxLength: 38
                      example: '0.001'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    fee:
                      description: 'Fee to be submitted as a transaction fee to blockchain. If none is set, default value of 1 DOGE is used.'
                      example: '1'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    multipleAmounts:
                      description: 'For BTC, LTC, DOGE and BCH, it is possible to enter list of multiple recipient blockchain amounts. List of recipient addresses must be present in the address field and total sum of amounts must be equal to the amount field.'
                      type: array
                      items:
                        type: string
                        example: '0.1'
                        pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    keyPair:
                      description: |
                        Array of assigned blockchain addresses with their private keys.
                        Either mnemonic, keyPair or signature Id must be present - depends on the type of account and xpub.
                        Tatum KMS does not support keyPair type of off-chain transaction, only mnemonic based.
                      type: array
                      items:
                        type: object
                        properties:
                          address:
                            type: string
                            description: Blockchain address assigned to account withdrawal is made from.
                            maxLength: 50
                            minLength: 30
                          privateKey:
                            type: string
                            description: Private key of blockchain address.
                            maxLength: 52
                            example: cTmS2jBWXgFaXZ2xG9jhn67TiyTshnMp3UedamzEhGm6BZV1vLgQ
                            minLength: 52
                    attr:
                      description: Used to parametrize withdrawal as a change address for left coins from transaction. XPub or attr must be used.
                      maxLength: 256
                      minLength: 1
                      type: string
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderNote:
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      maxLength: 500
                      minLength: 1
                      type: string
                  required:
                    - amount
                    - senderAccountId
                    - address
                    - keyPair
                    - attr
                  type: object
                - properties:
                    senderAccountId:
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      maxLength: 24
                      minLength: 24
                      type: string
                    address:
                      description: 'Blockchain address to send assets to. For BTC, LTC, DOGE and BCH, it is possible to enter list of multiple recipient blockchain addresses as a comma separated string.'
                      example: mpTwPdF8up9kidgcAStriUPwRdnE9MRAg7
                      maxLength: 10000
                      minLength: 1
                      type: string
                    amount:
                      description: Amount to be withdrawn to blockchain.
                      maxLength: 38
                      example: '0.001'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    fee:
                      description: 'Fee to be submitted as a transaction fee to blockchain. If none is set, default value of 1 DOGE is used.'
                      example: '1'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    multipleAmounts:
                      description: 'For BTC, LTC, DOGE and BCH, it is possible to enter list of multiple recipient blockchain amounts. List of recipient addresses must be present in the address field and total sum of amounts must be equal to the amount field.'
                      type: array
                      items:
                        type: string
                        example: '0.1'
                        pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    attr:
                      description: Used to parametrize withdrawal as a change address for left coins from transaction. XPub or attr must be used.
                      maxLength: 256
                      minLength: 1
                      type: string
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: |
                        Signature hash of the mnemonic, which will be used to sign transactions locally.
                        All signature Ids should be present, which might be used to sign transaction.
                        Tatum KMS does not support keyPair type of off-chain transaction, only mnemonic based.
                    xpub:
                      description: 'Extended public key (xpub) of the wallet associated with the accounts. Should be present, when mnemonic is used.'
                      maxLength: 150
                      minLength: 1
                      example: xpub6EsCk1uU6cJzqvP9CdsTiJwT2rF748YkPnhv5Qo8q44DG7nn2vbyt48YRsNSUYS44jFCW9gwvD9kLQu9AuqXpTpM1c5hgg9PsuBLdeNncid
                      type: string
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderNote:
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      maxLength: 500
                      minLength: 1
                      type: string
                  required:
                    - amount
                    - senderAccountId
                    - address
                    - signatureId
                    - xpub
                  type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      id:
                        description: 'ID of withdrawal. If transaction is not valid in blockchain, use this id to cancel withdrawal.'
                        example: 5e68c66581f2ee32bc354087
                        type: string
                      txId:
                        description: TX hash of successful transaction.
                        example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
                        type: string
                      completed:
                        description: 'Whethet withdrawal was completed in Tatum''s internal ledger. If not, it must be done manually.'
                        example: true
                        type: boolean
                    required:
                      - txId
                      - id
                      - completed
                  - type: object
                    properties:
                      signatureId:
                        description: 'ID of prepared payment template to sign. This is should be stored on a client side to retrieve ID of the blockchain transaction, when signing application signs the transaction and broadcasts it to the blockchain.'
                        example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
                        format: uuid
                        type: string
                    required:
                      - id
                      - signatureId
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: transaction.invalid.body
                        example: transaction.invalid.body
                        type: string
                      message:
                        description: 'Either UTXO, or addresses must be present.'
                        example: 'Either UTXO, or addresses must be present.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.missing
                        example: withdrawal.missing
                        type: string
                      message:
                        description: No such withdrawal.
                        example: No such withdrawal.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: rate.not.found
                        example: rate.not.found
                        type: string
                      message:
                        description: No such currency rate.
                        example: No such currency rate.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: vc.not.found
                        example: vc.not.found
                        type: string
                      message:
                        description: No such virtual currency.
                        example: No such virtual currency.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.failed.transaction.failed
                        example: withdrawal.failed.transaction.failed
                        type: string
                      message:
                        description: 'Unable to store withdrawal, it is impossible to create transaction.'
                        example: 'Unable to store withdrawal, it is impossible to create transaction.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: blockchain.error.code
                        example: blockchain.error.code
                        type: string
                      message:
                        description: '${error.message} Code: ${error.code}'
                        example: '${error.message} Code: ${error.code}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: tx.hash.index.spent
                        example: tx.hash.index.spent
                        type: string
                      message:
                        description: No such UTXO for transaction and index.
                        example: No such UTXO for transaction and index.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: blockchain.broadcast.error
                        example: blockchain.broadcast.error
                        type: string
                      message:
                        description: 'Unable to broadcast transaction, wrong input data.'
                        example: 'Unable to broadcast transaction, wrong input data.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: transaction.preparation.failed
                        example: transaction.preparation.failed
                        type: string
                      message:
                        description: Impossible to prepare transaction. Either mnemonic or keyPair and attr must be present.
                        example: Impossible to prepare transaction. Either mnemonic or keyPair and attr must be present.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.account.virtual
                        example: withdrawal.account.virtual
                        type: string
                      message:
                        description: Sender account cannot be virtual.
                        example: Sender account cannot be virtual.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: offchain.not.supported
                        example: offchain.not.supported
                        type: string
                      message:
                        description: 'Offchain not supported for account with ${account.currency} currency.'
                        example: 'Offchain not supported for account with ${account.currency} currency.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.format
                        example: amount.format
                        type: string
                      message:
                        description: Amount has incorrect format.
                        example: Amount has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: fee.format
                        example: fee.format
                        type: string
                      message:
                        description: Fee has incorrect format.
                        example: Fee has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: transaction.preparation.failed.utxo
                        example: transaction.preparation.failed.utxo
                        type: string
                      message:
                        description: Impossible to find last UTXO.
                        example: Impossible to find last UTXO.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: transaction.failed
                        example: transaction.failed
                        type: string
                      message:
                        description: No spendable inputs.
                        example: No spendable inputs.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: key.generation.failed.wrong.mnemonic
                        example: key.generation.failed.wrong.mnemonic
                        type: string
                      message:
                        description: 'Unable to generate address, wrong mnemonic and index.'
                        example: 'Unable to generate address, wrong mnemonic and index.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.not.cancelled.transaction.failed
                        example: withdrawal.not.cancelled.transaction.failed
                        type: string
                      message:
                        description: 'Unable to broadcast transaction, and impossible to cancel withdrawal. ID is attached, "${withdrawalId}", cancel it manually.'
                        example: 'Unable to broadcast transaction, and impossible to cancel withdrawal. ID is attached, "${withdrawalId}", cancel it manually.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.prepare.failed
                        example: withdrawal.prepare.failed
                        type: string
                      message:
                        description: 'Unable to prepare transaction, withdrawal cancelled.'
                        example: 'Unable to prepare transaction, withdrawal cancelled.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.not.exists
                        example: senderAccount.not.exists
                        type: string
                      message:
                        description: 'Unable to find sender account ${transaction.senderAccountId}.'
                        example: 'Unable to find sender account ${transaction.senderAccountId}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.customer.disabled
                        example: senderAccount.customer.disabled
                        type: string
                      message:
                        description: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        example: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: balance.insufficient
                        example: balance.insufficient
                        type: string
                      message:
                        description: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        example: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.btc
                        example: amount.btc
                        type: string
                      message:
                        description: 'BTC|LTC|BCH payment amount must be at least 0.00000000000001, not ${transaction.amount}.'
                        example: 'BTC|LTC|BCH payment amount must be at least 0.00000000000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.eth
                        example: amount.eth
                        type: string
                      message:
                        description: 'ETH payment amount must be at least 0.000000000001, not ${transaction.amount}.'
                        example: 'ETH payment amount must be at least 0.000000000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.frozen
                        example: senderAccount.frozen
                        type: string
                      message:
                        description: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        example: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.pending
                        example: withdrawal.pending
                        type: string
                      message:
                        description: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        example: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
      summary: Send Dogecoin from Tatum account to address
      tags:
        - Offchain withdrawal
  /v3/offchain/ethereum/transfer:
    post:
      description: |
        <h4>4 credits per API call.</h4><br/><p>Send Ethereum from Tatum Ledger to account. This will create Tatum internal withdrawal request with ID. If every system works as expected, withdrawal request is marked as complete and transaction id is assigned to it.
        <ul>
        <li>If Ethereum server connection is unavailable, withdrawal request is cancelled.</li>
        <li>If blockchain transfer is successful, but is it not possible to reach Tatum, transaction id of blockchain transaction is returned and withdrawal request must be completed manually, otherwise all other withdrawals will be pending.</li>
        </ul>
        It is possible to perform ledger to blockchain transaction for ledger accounts without blockchain address assigned to them.<br/>
        This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.
        No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and losing funds. In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages.
        </p>
      operationId: EthTransfer
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to Ethereum | Polygon | KCS | XDC transaction. If not present, last known nonce will be used.'
                    address:
                      description: Blockchain address to send assets
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      maxLength: 42
                      minLength: 42
                      type: string
                    amount:
                      description: Amount to be sent in Ether | MATIC | XDC | KCS.
                      maxLength: 38
                      example: '100000'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    privateKey:
                      type: string
                      maxLength: 66
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      description: 'Private key of sender address. Either mnemonic and index, privateKey or signature Id must be present - depends on the type of account and xpub.'
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      type: string
                    gasLimit:
                      type: string
                      description: 'Gas limit for transaction in gas price. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '40000'
                    gasPrice:
                      type: string
                      description: 'Gas price in Gwei. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '20'
                  required:
                    - senderAccountId
                    - address
                    - amount
                    - privateKey
                - type: object
                  properties:
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to Ethereum | Polygon | KCS | XDC transaction. If not present, last known nonce will be used.'
                    address:
                      description: Blockchain address to send assets
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      maxLength: 42
                      minLength: 42
                      type: string
                    amount:
                      description: Amount to be sent in Ether | MATIC | XDC | KCS.
                      maxLength: 38
                      example: '100000'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    index:
                      description: Derivation index of sender address.
                      maximum: 2147483647
                      example: 0
                      type: integer
                    gasLimit:
                      type: string
                      description: 'Gas limit for transaction in gas price. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '40000'
                    gasPrice:
                      type: string
                      description: 'Gas price in Gwei. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '20'
                    mnemonic:
                      maxLength: 500
                      minLength: 1
                      description: 'Mnemonic to generate private key for sender address. Either mnemonic and index, privateKey or signature Id must be present - depends on the type of account and xpub.'
                      example: urge pulp usage sister evidence arrest palm math please chief egg abuse
                      type: string
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      type: string
                  required:
                    - senderAccountId
                    - address
                    - amount
                    - mnemonic
                    - index
                - type: object
                  properties:
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to Ethereum | Polygon | KCS | XDC transaction. If not present, last known nonce will be used.'
                    address:
                      description: Blockchain address to send assets
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      maxLength: 42
                      minLength: 42
                      type: string
                    amount:
                      description: Amount to be sent in Ether | MATIC | XDC | KCS.
                      maxLength: 38
                      example: '100000'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: |
                        Identifier of the mnemonic / private key associated in signing application.
                        When hash identifies mnemonic, index must be present to represent specific account to pay from.
                        Private key, mnemonic or signature Id must be present.
                    index:
                      description: Derivation index of sender address.
                      maximum: 2147483647
                      example: 0
                      type: integer
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      type: string
                    gasLimit:
                      type: string
                      description: 'Gas limit for transaction in gas price. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '40000'
                    gasPrice:
                      type: string
                      description: 'Gas price in Gwei. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '20'
                  required:
                    - senderAccountId
                    - address
                    - signatureId
                    - amount
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      id:
                        description: 'ID of withdrawal. If transaction is not valid in blockchain, use this id to cancel withdrawal.'
                        example: 5e68c66581f2ee32bc354087
                        type: string
                      txId:
                        description: TX hash of successful transaction.
                        example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
                        type: string
                      completed:
                        description: 'Whethet withdrawal was completed in Tatum''s internal ledger. If not, it must be done manually.'
                        example: true
                        type: boolean
                    required:
                      - txId
                      - id
                      - completed
                  - type: object
                    properties:
                      signatureId:
                        description: 'ID of prepared payment template to sign. This is should be stored on a client side to retrieve ID of the blockchain transaction, when signing application signs the transaction and broadcasts it to the blockchain.'
                        example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
                        format: uuid
                        type: string
                    required:
                      - id
                      - signatureId
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: withdrawal.missing
                        example: withdrawal.missing
                        type: string
                      message:
                        description: No such withdrawal.
                        example: No such withdrawal.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: rate.not.found
                        example: rate.not.found
                        type: string
                      message:
                        description: No such currency rate.
                        example: No such currency rate.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: vc.not.found
                        example: vc.not.found
                        type: string
                      message:
                        description: No such virtual currency.
                        example: No such virtual currency.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.recipient.format
                        example: withdrawal.recipient.format
                        type: string
                      message:
                        description: Recipient blockchain address has incorrect format.
                        example: Recipient blockchain address has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.failed.transaction.failed
                        example: withdrawal.failed.transaction.failed
                        type: string
                      message:
                        description: 'Unable to store withdrawal, it is impossible to create transaction.'
                        example: 'Unable to store withdrawal, it is impossible to create transaction.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.account.virtual
                        example: withdrawal.account.virtual
                        type: string
                      message:
                        description: Sender account cannot be virtual.
                        example: Sender account cannot be virtual.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: offchain.not.supported
                        example: offchain.not.supported
                        type: string
                      message:
                        description: 'Offchain not supported for account with ${account.currency} currency.'
                        example: 'Offchain not supported for account with ${account.currency} currency.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.format
                        example: amount.format
                        type: string
                      message:
                        description: Amount has incorrect format.
                        example: Amount has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: fee.format
                        example: fee.format
                        type: string
                      message:
                        description: Fee has incorrect format.
                        example: Fee has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.not.cancelled.transaction.failed
                        example: withdrawal.not.cancelled.transaction.failed
                        type: string
                      message:
                        description: 'Unable to broadcast transaction, and impossible to cancel withdrawal. ID is attached, "${withdrawalId}", cancel it manually.'
                        example: 'Unable to broadcast transaction, and impossible to cancel withdrawal. ID is attached, "${withdrawalId}", cancel it manually.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.prepare.failed
                        example: withdrawal.prepare.failed
                        type: string
                      message:
                        description: 'Unable to prepare transaction, withdrawal cancelled.'
                        example: 'Unable to prepare transaction, withdrawal cancelled.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.not.exists
                        example: senderAccount.not.exists
                        type: string
                      message:
                        description: 'Unable to find sender account ${transaction.senderAccountId}.'
                        example: 'Unable to find sender account ${transaction.senderAccountId}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.customer.disabled
                        example: senderAccount.customer.disabled
                        type: string
                      message:
                        description: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        example: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: balance.insufficient
                        example: balance.insufficient
                        type: string
                      message:
                        description: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        example: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.btc
                        example: amount.btc
                        type: string
                      message:
                        description: 'BTC|LTC|BCH payment amount must be at least 0.00000000000001, not ${transaction.amount}.'
                        example: 'BTC|LTC|BCH payment amount must be at least 0.00000000000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.eth
                        example: amount.eth
                        type: string
                      message:
                        description: 'ETH payment amount must be at least 0.000000000001, not ${transaction.amount}.'
                        example: 'ETH payment amount must be at least 0.000000000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.frozen
                        example: senderAccount.frozen
                        type: string
                      message:
                        description: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        example: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.pending
                        example: withdrawal.pending
                        type: string
                      message:
                        description: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        example: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: private.mnemonic.missing
                        example: private.mnemonic.missing
                        type: string
                      message:
                        description: Either mnemonic and index or private key must be present.
                        example: Either mnemonic and index or private key must be present.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.erc20.unsupported
                        example: eth.erc20.unsupported
                        type: string
                      message:
                        description: Unsupported ETH ERC20 blockchain.
                        example: Unsupported ETH ERC20 blockchain.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: ethereum.broadcast.failed
                        example: ethereum.broadcast.failed
                        type: string
                      message:
                        description: 'Unable to broadcast transaction due to ${error}.'
                        example: 'Unable to broadcast transaction due to ${error}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: gas.price.failed
                        example: gas.price.failed
                        type: string
                      message:
                        description: Unable to obtain current GAS price.
                        example: Unable to obtain current GAS price.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: ethereum.transaction.body
                        example: ethereum.transaction.body
                        type: string
                      message:
                        description: 'Either currency, or tokenAddress must be defined.'
                        example: 'Either currency, or tokenAddress must be defined.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.transaction.gas
                        example: eth.transaction.gas
                        type: string
                      message:
                        description: 'Unable to calculate gas limit for transaction. ${error}'
                        example: 'Unable to calculate gas limit for transaction. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.transaction.hash
                        example: eth.transaction.hash
                        type: string
                      message:
                        description: 'Unable to calculate transaction hash. ${error}'
                        example: 'Unable to calculate transaction hash. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.transaction.sign
                        example: eth.transaction.sign
                        type: string
                      message:
                        description: 'Unable to sign transaction. ${error}'
                        example: 'Unable to sign transaction. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
      summary: Send Ethereum from Tatum ledger to blockchain
      tags:
        - Offchain withdrawal
  /v3/offchain/klaytn/transfer:
    post:
      description: |
        <h4>4 credits per API call.</h4><br/>
        <p>Send KLAY or ERC20 from Tatum Ledger to account. This will create Tatum internal withdrawal request with ID. If every system works as expected, withdrawal request is marked as complete and transaction id is assigned to it.
        <br/>
        <br/>
        <ul>
        <li>If KLAY server connection is unavailable, withdrawal request is cancelled.</li>
        <li>If blockchain transfer is successful, but is it not possible to reach Tatum, transaction id of blockchain transaction is returned and withdrawal request must be completed manually, otherwise all other withdrawals will be pending.</li>
        </ul>
        It is possible to perform ledger to blockchain transaction for ledger accounts without blockchain address assigned to them.<br/>
        This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.
        No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and losing funds. In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages.
        </p>
      operationId: KlayTransfer
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to Ethereum | Polygon | KCS | XDC transaction. If not present, last known nonce will be used.'
                    address:
                      description: Blockchain address to send assets
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      maxLength: 42
                      minLength: 42
                      type: string
                    amount:
                      description: Amount to be sent in Ether | MATIC | XDC | KCS.
                      maxLength: 38
                      example: '100000'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    privateKey:
                      type: string
                      maxLength: 66
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      description: 'Private key of sender address. Either mnemonic and index, privateKey or signature Id must be present - depends on the type of account and xpub.'
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      type: string
                    gasLimit:
                      type: string
                      description: 'Gas limit for transaction in gas price. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '40000'
                    gasPrice:
                      type: string
                      description: 'Gas price in Gwei. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '20'
                  required:
                    - senderAccountId
                    - address
                    - amount
                    - privateKey
                - type: object
                  properties:
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to Ethereum | Polygon | KCS | XDC transaction. If not present, last known nonce will be used.'
                    address:
                      description: Blockchain address to send assets
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      maxLength: 42
                      minLength: 42
                      type: string
                    amount:
                      description: Amount to be sent in Ether | MATIC | XDC | KCS.
                      maxLength: 38
                      example: '100000'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    index:
                      description: Derivation index of sender address.
                      maximum: 2147483647
                      example: 0
                      type: integer
                    gasLimit:
                      type: string
                      description: 'Gas limit for transaction in gas price. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '40000'
                    gasPrice:
                      type: string
                      description: 'Gas price in Gwei. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '20'
                    mnemonic:
                      maxLength: 500
                      minLength: 1
                      description: 'Mnemonic to generate private key for sender address. Either mnemonic and index, privateKey or signature Id must be present - depends on the type of account and xpub.'
                      example: urge pulp usage sister evidence arrest palm math please chief egg abuse
                      type: string
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      type: string
                  required:
                    - senderAccountId
                    - address
                    - amount
                    - mnemonic
                    - index
                - type: object
                  properties:
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to Ethereum | Polygon | KCS | XDC transaction. If not present, last known nonce will be used.'
                    address:
                      description: Blockchain address to send assets
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      maxLength: 42
                      minLength: 42
                      type: string
                    amount:
                      description: Amount to be sent in Ether | MATIC | XDC | KCS.
                      maxLength: 38
                      example: '100000'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: |
                        Identifier of the mnemonic / private key associated in signing application.
                        When hash identifies mnemonic, index must be present to represent specific account to pay from.
                        Private key, mnemonic or signature Id must be present.
                    index:
                      description: Derivation index of sender address.
                      maximum: 2147483647
                      example: 0
                      type: integer
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      type: string
                    gasLimit:
                      type: string
                      description: 'Gas limit for transaction in gas price. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '40000'
                    gasPrice:
                      type: string
                      description: 'Gas price in Gwei. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '20'
                  required:
                    - senderAccountId
                    - address
                    - signatureId
                    - amount
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      id:
                        description: 'ID of withdrawal. If transaction is not valid in blockchain, use this id to cancel withdrawal.'
                        example: 5e68c66581f2ee32bc354087
                        type: string
                      txId:
                        description: TX hash of successful transaction.
                        example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
                        type: string
                      completed:
                        description: 'Whethet withdrawal was completed in Tatum''s internal ledger. If not, it must be done manually.'
                        example: true
                        type: boolean
                    required:
                      - txId
                      - id
                      - completed
                  - type: object
                    properties:
                      signatureId:
                        description: 'ID of prepared payment template to sign. This is should be stored on a client side to retrieve ID of the blockchain transaction, when signing application signs the transaction and broadcasts it to the blockchain.'
                        example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
                        format: uuid
                        type: string
                    required:
                      - id
                      - signatureId
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: withdrawal.missing
                        example: withdrawal.missing
                        type: string
                      message:
                        description: No such withdrawal.
                        example: No such withdrawal.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: rate.not.found
                        example: rate.not.found
                        type: string
                      message:
                        description: No such currency rate.
                        example: No such currency rate.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: vc.not.found
                        example: vc.not.found
                        type: string
                      message:
                        description: No such virtual currency.
                        example: No such virtual currency.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.recipient.format
                        example: withdrawal.recipient.format
                        type: string
                      message:
                        description: Recipient blockchain address has incorrect format.
                        example: Recipient blockchain address has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.failed.transaction.failed
                        example: withdrawal.failed.transaction.failed
                        type: string
                      message:
                        description: 'Unable to store withdrawal, it is impossible to create transaction.'
                        example: 'Unable to store withdrawal, it is impossible to create transaction.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.account.virtual
                        example: withdrawal.account.virtual
                        type: string
                      message:
                        description: Sender account cannot be virtual.
                        example: Sender account cannot be virtual.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: offchain.not.supported
                        example: offchain.not.supported
                        type: string
                      message:
                        description: 'Offchain not supported for account with ${account.currency} currency.'
                        example: 'Offchain not supported for account with ${account.currency} currency.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.format
                        example: amount.format
                        type: string
                      message:
                        description: Amount has incorrect format.
                        example: Amount has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: fee.format
                        example: fee.format
                        type: string
                      message:
                        description: Fee has incorrect format.
                        example: Fee has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.not.cancelled.transaction.failed
                        example: withdrawal.not.cancelled.transaction.failed
                        type: string
                      message:
                        description: 'Unable to broadcast transaction, and impossible to cancel withdrawal. ID is attached, "${withdrawalId}", cancel it manually.'
                        example: 'Unable to broadcast transaction, and impossible to cancel withdrawal. ID is attached, "${withdrawalId}", cancel it manually.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.prepare.failed
                        example: withdrawal.prepare.failed
                        type: string
                      message:
                        description: 'Unable to prepare transaction, withdrawal cancelled.'
                        example: 'Unable to prepare transaction, withdrawal cancelled.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.not.exists
                        example: senderAccount.not.exists
                        type: string
                      message:
                        description: 'Unable to find sender account ${transaction.senderAccountId}.'
                        example: 'Unable to find sender account ${transaction.senderAccountId}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.customer.disabled
                        example: senderAccount.customer.disabled
                        type: string
                      message:
                        description: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        example: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: balance.insufficient
                        example: balance.insufficient
                        type: string
                      message:
                        description: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        example: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.btc
                        example: amount.btc
                        type: string
                      message:
                        description: 'BTC|LTC|BCH payment amount must be at least 0.00000000000001, not ${transaction.amount}.'
                        example: 'BTC|LTC|BCH payment amount must be at least 0.00000000000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.eth
                        example: amount.eth
                        type: string
                      message:
                        description: 'ETH payment amount must be at least 0.000000000001, not ${transaction.amount}.'
                        example: 'ETH payment amount must be at least 0.000000000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.frozen
                        example: senderAccount.frozen
                        type: string
                      message:
                        description: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        example: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.pending
                        example: withdrawal.pending
                        type: string
                      message:
                        description: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        example: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: private.mnemonic.missing
                        example: private.mnemonic.missing
                        type: string
                      message:
                        description: Either mnemonic and index or private key must be present.
                        example: Either mnemonic and index or private key must be present.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.erc20.unsupported
                        example: eth.erc20.unsupported
                        type: string
                      message:
                        description: Unsupported ETH ERC20 blockchain.
                        example: Unsupported ETH ERC20 blockchain.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: ethereum.broadcast.failed
                        example: ethereum.broadcast.failed
                        type: string
                      message:
                        description: 'Unable to broadcast transaction due to ${error}.'
                        example: 'Unable to broadcast transaction due to ${error}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: gas.price.failed
                        example: gas.price.failed
                        type: string
                      message:
                        description: Unable to obtain current GAS price.
                        example: Unable to obtain current GAS price.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: ethereum.transaction.body
                        example: ethereum.transaction.body
                        type: string
                      message:
                        description: 'Either currency, or tokenAddress must be defined.'
                        example: 'Either currency, or tokenAddress must be defined.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.transaction.gas
                        example: eth.transaction.gas
                        type: string
                      message:
                        description: 'Unable to calculate gas limit for transaction. ${error}'
                        example: 'Unable to calculate gas limit for transaction. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.transaction.hash
                        example: eth.transaction.hash
                        type: string
                      message:
                        description: 'Unable to calculate transaction hash. ${error}'
                        example: 'Unable to calculate transaction hash. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.transaction.sign
                        example: eth.transaction.sign
                        type: string
                      message:
                        description: 'Unable to sign transaction. ${error}'
                        example: 'Unable to sign transaction. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
      summary: Send KLAY or ERC-20 from Tatum ledger to blockchain
      tags:
        - Offchain withdrawal

  /v3/offchain/polygon/transfer:
    post:
      description: |
        <h4>4 credits per API call.</h4><br/><p>Send MATIC or ERC20 on Polygon from Tatum Ledger to account. This will create Tatum internal withdrawal request with ID. If every system works as expected, withdrawal request is marked as complete and transaction id is assigned to it.
        <ul>
        <li>If Polygon server connection is unavailable, withdrawal request is cancelled.</li>
        <li>If blockchain transfer is successful, but is it not possible to reach Tatum, transaction id of blockchain transaction is returned and withdrawal request must be completed manually, otherwise all other withdrawals will be pending.</li>
        </ul>
        It is possible to perform ledger to blockchain transaction for ledger accounts without blockchain address assigned to them.<br/>
        This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.
        No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and losing funds. In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages.
        </p>
      operationId: PolygonTransfer
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to Ethereum | Polygon | KCS | XDC transaction. If not present, last known nonce will be used.'
                    address:
                      description: Blockchain address to send assets
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      maxLength: 42
                      minLength: 42
                      type: string
                    amount:
                      description: Amount to be sent in Ether | MATIC | XDC | KCS.
                      maxLength: 38
                      example: '100000'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    privateKey:
                      type: string
                      maxLength: 66
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      description: 'Private key of sender address. Either mnemonic and index, privateKey or signature Id must be present - depends on the type of account and xpub.'
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      type: string
                    gasLimit:
                      type: string
                      description: 'Gas limit for transaction in gas price. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '40000'
                    gasPrice:
                      type: string
                      description: 'Gas price in Gwei. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '20'
                  required:
                    - senderAccountId
                    - address
                    - amount
                    - privateKey
                - type: object
                  properties:
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to Ethereum | Polygon | KCS | XDC transaction. If not present, last known nonce will be used.'
                    address:
                      description: Blockchain address to send assets
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      maxLength: 42
                      minLength: 42
                      type: string
                    amount:
                      description: Amount to be sent in Ether | MATIC | XDC | KCS.
                      maxLength: 38
                      example: '100000'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    index:
                      description: Derivation index of sender address.
                      maximum: 2147483647
                      example: 0
                      type: integer
                    gasLimit:
                      type: string
                      description: 'Gas limit for transaction in gas price. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '40000'
                    gasPrice:
                      type: string
                      description: 'Gas price in Gwei. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '20'
                    mnemonic:
                      maxLength: 500
                      minLength: 1
                      description: 'Mnemonic to generate private key for sender address. Either mnemonic and index, privateKey or signature Id must be present - depends on the type of account and xpub.'
                      example: urge pulp usage sister evidence arrest palm math please chief egg abuse
                      type: string
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      type: string
                  required:
                    - senderAccountId
                    - address
                    - amount
                    - mnemonic
                    - index
                - type: object
                  properties:
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to Ethereum | Polygon | KCS | XDC transaction. If not present, last known nonce will be used.'
                    address:
                      description: Blockchain address to send assets
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      maxLength: 42
                      minLength: 42
                      type: string
                    amount:
                      description: Amount to be sent in Ether | MATIC | XDC | KCS.
                      maxLength: 38
                      example: '100000'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: |
                        Identifier of the mnemonic / private key associated in signing application.
                        When hash identifies mnemonic, index must be present to represent specific account to pay from.
                        Private key, mnemonic or signature Id must be present.
                    index:
                      description: Derivation index of sender address.
                      maximum: 2147483647
                      example: 0
                      type: integer
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      type: string
                    gasLimit:
                      type: string
                      description: 'Gas limit for transaction in gas price. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '40000'
                    gasPrice:
                      type: string
                      description: 'Gas price in Gwei. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '20'
                  required:
                    - senderAccountId
                    - address
                    - signatureId
                    - amount
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      id:
                        description: 'ID of withdrawal. If transaction is not valid in blockchain, use this id to cancel withdrawal.'
                        example: 5e68c66581f2ee32bc354087
                        type: string
                      txId:
                        description: TX hash of successful transaction.
                        example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
                        type: string
                      completed:
                        description: 'Whethet withdrawal was completed in Tatum''s internal ledger. If not, it must be done manually.'
                        example: true
                        type: boolean
                    required:
                      - txId
                      - id
                      - completed
                  - type: object
                    properties:
                      signatureId:
                        description: 'ID of prepared payment template to sign. This is should be stored on a client side to retrieve ID of the blockchain transaction, when signing application signs the transaction and broadcasts it to the blockchain.'
                        example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
                        format: uuid
                        type: string
                    required:
                      - id
                      - signatureId
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: withdrawal.missing
                        example: withdrawal.missing
                        type: string
                      message:
                        description: No such withdrawal.
                        example: No such withdrawal.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: rate.not.found
                        example: rate.not.found
                        type: string
                      message:
                        description: No such currency rate.
                        example: No such currency rate.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: vc.not.found
                        example: vc.not.found
                        type: string
                      message:
                        description: No such virtual currency.
                        example: No such virtual currency.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.recipient.format
                        example: withdrawal.recipient.format
                        type: string
                      message:
                        description: Recipient blockchain address has incorrect format.
                        example: Recipient blockchain address has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.failed.transaction.failed
                        example: withdrawal.failed.transaction.failed
                        type: string
                      message:
                        description: 'Unable to store withdrawal, it is impossible to create transaction.'
                        example: 'Unable to store withdrawal, it is impossible to create transaction.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.account.virtual
                        example: withdrawal.account.virtual
                        type: string
                      message:
                        description: Sender account cannot be virtual.
                        example: Sender account cannot be virtual.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: offchain.not.supported
                        example: offchain.not.supported
                        type: string
                      message:
                        description: 'Offchain not supported for account with ${account.currency} currency.'
                        example: 'Offchain not supported for account with ${account.currency} currency.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.format
                        example: amount.format
                        type: string
                      message:
                        description: Amount has incorrect format.
                        example: Amount has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: fee.format
                        example: fee.format
                        type: string
                      message:
                        description: Fee has incorrect format.
                        example: Fee has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.not.cancelled.transaction.failed
                        example: withdrawal.not.cancelled.transaction.failed
                        type: string
                      message:
                        description: 'Unable to broadcast transaction, and impossible to cancel withdrawal. ID is attached, "${withdrawalId}", cancel it manually.'
                        example: 'Unable to broadcast transaction, and impossible to cancel withdrawal. ID is attached, "${withdrawalId}", cancel it manually.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.prepare.failed
                        example: withdrawal.prepare.failed
                        type: string
                      message:
                        description: 'Unable to prepare transaction, withdrawal cancelled.'
                        example: 'Unable to prepare transaction, withdrawal cancelled.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.not.exists
                        example: senderAccount.not.exists
                        type: string
                      message:
                        description: 'Unable to find sender account ${transaction.senderAccountId}.'
                        example: 'Unable to find sender account ${transaction.senderAccountId}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.customer.disabled
                        example: senderAccount.customer.disabled
                        type: string
                      message:
                        description: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        example: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: balance.insufficient
                        example: balance.insufficient
                        type: string
                      message:
                        description: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        example: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.btc
                        example: amount.btc
                        type: string
                      message:
                        description: 'BTC|LTC|BCH payment amount must be at least 0.00000000000001, not ${transaction.amount}.'
                        example: 'BTC|LTC|BCH payment amount must be at least 0.00000000000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.eth
                        example: amount.eth
                        type: string
                      message:
                        description: 'ETH payment amount must be at least 0.000000000001, not ${transaction.amount}.'
                        example: 'ETH payment amount must be at least 0.000000000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.frozen
                        example: senderAccount.frozen
                        type: string
                      message:
                        description: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        example: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.pending
                        example: withdrawal.pending
                        type: string
                      message:
                        description: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        example: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: private.mnemonic.missing
                        example: private.mnemonic.missing
                        type: string
                      message:
                        description: Either mnemonic and index or private key must be present.
                        example: Either mnemonic and index or private key must be present.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.erc20.unsupported
                        example: eth.erc20.unsupported
                        type: string
                      message:
                        description: Unsupported ETH ERC20 blockchain.
                        example: Unsupported ETH ERC20 blockchain.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: ethereum.broadcast.failed
                        example: ethereum.broadcast.failed
                        type: string
                      message:
                        description: 'Unable to broadcast transaction due to ${error}.'
                        example: 'Unable to broadcast transaction due to ${error}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: gas.price.failed
                        example: gas.price.failed
                        type: string
                      message:
                        description: Unable to obtain current GAS price.
                        example: Unable to obtain current GAS price.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: ethereum.transaction.body
                        example: ethereum.transaction.body
                        type: string
                      message:
                        description: 'Either currency, or tokenAddress must be defined.'
                        example: 'Either currency, or tokenAddress must be defined.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.transaction.gas
                        example: eth.transaction.gas
                        type: string
                      message:
                        description: 'Unable to calculate gas limit for transaction. ${error}'
                        example: 'Unable to calculate gas limit for transaction. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.transaction.hash
                        example: eth.transaction.hash
                        type: string
                      message:
                        description: 'Unable to calculate transaction hash. ${error}'
                        example: 'Unable to calculate transaction hash. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.transaction.sign
                        example: eth.transaction.sign
                        type: string
                      message:
                        description: 'Unable to sign transaction. ${error}'
                        example: 'Unable to sign transaction. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
      summary: Send MATIC from Tatum ledger to blockchain
      tags:
        - Offchain withdrawal
  /v3/offchain/kcs/transfer:
    post:
      description: |
        <h4>4 credits per API call.</h4><br/><p>Send KCS or ERC20 on KCS from Tatum Ledger to account. This will create Tatum internal withdrawal request with ID. If every system works as expected, withdrawal request is marked as complete and transaction id is assigned to it.
        <ul>
        <li>If KCS server connection is unavailable, withdrawal request is cancelled.</li>
        <li>If blockchain transfer is successful, but is it not possible to reach Tatum, transaction id of blockchain transaction is returned and withdrawal request must be completed manually, otherwise all other withdrawals will be pending.</li>
        </ul>
        It is possible to perform ledger to blockchain transaction for ledger accounts without blockchain address assigned to them.<br/>
        This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.
        No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and losing funds. In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages.
        </p>
      operationId: KcsTransfer
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to KCS transaction. If not present, last known nonce will be used.'
                    address:
                      description: Blockchain address to send assets
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      maxLength: 42
                      minLength: 42
                      type: string
                    amount:
                      description: Amount to be sent in KCS.
                      maxLength: 38
                      example: '100000'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    fromPrivateKey:
                      type: string
                      maxLength: 66
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      description: 'Private key of sender address. Either mnemonic and index, privateKey or signature Id must be present - depends on the type of account and xpub.'
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      type: string
                    gasLimit:
                      type: string
                      description: 'Gas limit for transaction in gas price. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '40000'
                    gasPrice:
                      type: string
                      description: 'Gas price in Gwei. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '20'
                  required:
                    - senderAccountId
                    - address
                    - amount
                    - fromPrivateKey
                - type: object
                  properties:
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to KCS transaction. If not present, last known nonce will be used.'
                    address:
                      description: Blockchain address to send assets
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      maxLength: 42
                      minLength: 42
                      type: string
                    amount:
                      description: Amount to be sent in KCS.
                      maxLength: 38
                      example: '100000'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    index:
                      description: Derivation index of sender address.
                      maximum: 2147483647
                      example: 0
                      type: integer
                    gasLimit:
                      type: string
                      description: 'Gas limit for transaction in gas price. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '40000'
                    gasPrice:
                      type: string
                      description: 'Gas price in Gwei. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '20'
                    mnemonic:
                      maxLength: 500
                      minLength: 1
                      description: 'Mnemonic to generate private key for sender address. Either mnemonic and index, privateKey or signature Id must be present - depends on the type of account and xpub.'
                      example: urge pulp usage sister evidence arrest palm math please chief egg abuse
                      type: string
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      type: string
                  required:
                    - senderAccountId
                    - address
                    - amount
                    - mnemonic
                    - index
                - type: object
                  properties:
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to KCS transaction. If not present, last known nonce will be used.'
                    address:
                      description: Blockchain address to send assets
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      maxLength: 42
                      minLength: 42
                      type: string
                    amount:
                      description: Amount to be sent in KCS.
                      maxLength: 38
                      example: '100000'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: |
                        Identifier of the mnemonic / private key associated in signing application.
                        When hash identifies mnemonic, index must be present to represent specific account to pay from.
                        Private key, mnemonic or signature Id must be present.
                    index:
                      description: Derivation index of sender address.
                      maximum: 2147483647
                      example: 0
                      type: integer
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      type: string
                    gasLimit:
                      type: string
                      description: 'Gas limit for transaction in gas price. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '40000'
                    gasPrice:
                      type: string
                      description: 'Gas price in Gwei. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '20'
                  required:
                    - senderAccountId
                    - address
                    - signatureId
                    - amount
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      id:
                        description: 'ID of withdrawal. If transaction is not valid in blockchain, use this id to cancel withdrawal.'
                        example: 5e68c66581f2ee32bc354087
                        type: string
                      txId:
                        description: TX hash of successful transaction.
                        example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
                        type: string
                      completed:
                        description: 'Whethet withdrawal was completed in Tatum''s internal ledger. If not, it must be done manually.'
                        example: true
                        type: boolean
                    required:
                      - txId
                      - id
                      - completed
                  - type: object
                    properties:
                      signatureId:
                        description: 'ID of prepared payment template to sign. This is should be stored on a client side to retrieve ID of the blockchain transaction, when signing application signs the transaction and broadcasts it to the blockchain.'
                        example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
                        format: uuid
                        type: string
                    required:
                      - id
                      - signatureId
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: withdrawal.missing
                        example: withdrawal.missing
                        type: string
                      message:
                        description: No such withdrawal.
                        example: No such withdrawal.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: rate.not.found
                        example: rate.not.found
                        type: string
                      message:
                        description: No such currency rate.
                        example: No such currency rate.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: vc.not.found
                        example: vc.not.found
                        type: string
                      message:
                        description: No such virtual currency.
                        example: No such virtual currency.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.recipient.format
                        example: withdrawal.recipient.format
                        type: string
                      message:
                        description: Recipient blockchain address has incorrect format.
                        example: Recipient blockchain address has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.failed.transaction.failed
                        example: withdrawal.failed.transaction.failed
                        type: string
                      message:
                        description: 'Unable to store withdrawal, it is impossible to create transaction.'
                        example: 'Unable to store withdrawal, it is impossible to create transaction.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.account.virtual
                        example: withdrawal.account.virtual
                        type: string
                      message:
                        description: Sender account cannot be virtual.
                        example: Sender account cannot be virtual.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: offchain.not.supported
                        example: offchain.not.supported
                        type: string
                      message:
                        description: 'Offchain not supported for account with ${account.currency} currency.'
                        example: 'Offchain not supported for account with ${account.currency} currency.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.format
                        example: amount.format
                        type: string
                      message:
                        description: Amount has incorrect format.
                        example: Amount has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: fee.format
                        example: fee.format
                        type: string
                      message:
                        description: Fee has incorrect format.
                        example: Fee has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.not.cancelled.transaction.failed
                        example: withdrawal.not.cancelled.transaction.failed
                        type: string
                      message:
                        description: 'Unable to broadcast transaction, and impossible to cancel withdrawal. ID is attached, "${withdrawalId}", cancel it manually.'
                        example: 'Unable to broadcast transaction, and impossible to cancel withdrawal. ID is attached, "${withdrawalId}", cancel it manually.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.prepare.failed
                        example: withdrawal.prepare.failed
                        type: string
                      message:
                        description: 'Unable to prepare transaction, withdrawal cancelled.'
                        example: 'Unable to prepare transaction, withdrawal cancelled.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.not.exists
                        example: senderAccount.not.exists
                        type: string
                      message:
                        description: 'Unable to find sender account ${transaction.senderAccountId}.'
                        example: 'Unable to find sender account ${transaction.senderAccountId}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.customer.disabled
                        example: senderAccount.customer.disabled
                        type: string
                      message:
                        description: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        example: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: balance.insufficient
                        example: balance.insufficient
                        type: string
                      message:
                        description: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        example: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.btc
                        example: amount.btc
                        type: string
                      message:
                        description: 'BTC|LTC|BCH payment amount must be at least 0.00000000000001, not ${transaction.amount}.'
                        example: 'BTC|LTC|BCH payment amount must be at least 0.00000000000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.eth
                        example: amount.eth
                        type: string
                      message:
                        description: 'ETH payment amount must be at least 0.000000000001, not ${transaction.amount}.'
                        example: 'ETH payment amount must be at least 0.000000000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.frozen
                        example: senderAccount.frozen
                        type: string
                      message:
                        description: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        example: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.pending
                        example: withdrawal.pending
                        type: string
                      message:
                        description: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        example: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: private.mnemonic.missing
                        example: private.mnemonic.missing
                        type: string
                      message:
                        description: Either mnemonic and index or private key must be present.
                        example: Either mnemonic and index or private key must be present.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.erc20.unsupported
                        example: eth.erc20.unsupported
                        type: string
                      message:
                        description: Unsupported ETH ERC20 blockchain.
                        example: Unsupported ETH ERC20 blockchain.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: ethereum.broadcast.failed
                        example: ethereum.broadcast.failed
                        type: string
                      message:
                        description: 'Unable to broadcast transaction due to ${error}.'
                        example: 'Unable to broadcast transaction due to ${error}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: gas.price.failed
                        example: gas.price.failed
                        type: string
                      message:
                        description: Unable to obtain current GAS price.
                        example: Unable to obtain current GAS price.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: ethereum.transaction.body
                        example: ethereum.transaction.body
                        type: string
                      message:
                        description: 'Either currency, or tokenAddress must be defined.'
                        example: 'Either currency, or tokenAddress must be defined.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.transaction.gas
                        example: eth.transaction.gas
                        type: string
                      message:
                        description: 'Unable to calculate gas limit for transaction. ${error}'
                        example: 'Unable to calculate gas limit for transaction. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.transaction.hash
                        example: eth.transaction.hash
                        type: string
                      message:
                        description: 'Unable to calculate transaction hash. ${error}'
                        example: 'Unable to calculate transaction hash. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.transaction.sign
                        example: eth.transaction.sign
                        type: string
                      message:
                        description: 'Unable to sign transaction. ${error}'
                        example: 'Unable to sign transaction. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
      summary: Send KCS or Erc20 from Tatum ledger to blockchain
      tags:
        - Offchain withdrawal
  /v3/offchain/ethereum/erc20/transfer:
    post:
      description: |
        <h4>4 credits per API call.</h4><br/>
        <p>Transfer Ethereum ERC20 Smart Contract Tokens from Tatum account to blockchain address. This will create Tatum internal withdrawal request with ID. If every system works as expected, withdrawal request is marked as complete and transaction id is assigned to it.
        <ul>
        <li>If Ethereum server connection is unavailable, withdrawal request is cancelled.</li>
        <li>If blockchain transfer is successful, but is it not possible to reach Tatum, transaction id of blockchain transaction is returned and withdrawal request must be completed manually, otherwise all other withdrawals will be pending.</li>
        </ul>
        It is possible to perform ledger to blockchain transaction for ledger accounts without blockchain address assigned to them.<br/>
        This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.
        No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and losing funds. In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages.
        </p>
      operationId: EthTransferErc20
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      type: string
                    address:
                      maxLength: 42
                      minLength: 42
                      description: Blockchain address to send ERC20 token to
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    amount:
                      description: Amount to be sent.
                      maxLength: 38
                      example: '100000'
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                      type: string
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    currency:
                      description: ERC20 symbol. Required only for calls.
                      example: MY_SYMBOL
                      maxLength: 30
                      minLength: 1
                      type: string
                    gasLimit:
                      type: string
                      description: 'Gas limit for transaction in gas price. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '40000'
                    gasPrice:
                      type: string
                      description: 'Gas price in Gwei. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '20'
                    privateKey:
                      type: string
                      maxLength: 66
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      description: 'Private key of sender address. Either mnemonic and index, privateKey or signature Id must be present - depends on the type of account and xpub.'
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to Ethereum transaction. If not present, last known nonce will be used.'
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      type: string
                  required:
                    - senderAccountId
                    - address
                    - privateKey
                    - amount
                - type: object
                  properties:
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      type: string
                    address:
                      maxLength: 42
                      minLength: 42
                      description: Blockchain address to send ERC20 token to
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    amount:
                      description: Amount to be sent.
                      maxLength: 38
                      example: '100000'
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                      type: string
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    currency:
                      description: ERC20 symbol. Required only for calls.
                      example: MY_SYMBOL
                      maxLength: 30
                      minLength: 1
                      type: string
                    gasLimit:
                      type: string
                      description: 'Gas limit for transaction in gas price. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '40000'
                    gasPrice:
                      type: string
                      description: 'Gas price in Gwei. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '20'
                    mnemonic:
                      maxLength: 500
                      minLength: 1
                      description: 'Mnemonic to generate private key for sender address. Either mnemonic and index, or privateKey must be present - depends on the type of account and xpub.'
                      example: urge pulp usage sister evidence arrest palm math please chief egg abuse
                      type: string
                    index:
                      description: Derivation index of sender address.
                      maximum: 2147483647
                      example: 0
                      type: integer
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to Ethereum transaction. If not present, last known nonce will be used.'
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      type: string
                  required:
                    - senderAccountId
                    - address
                    - amount
                    - mnemonic
                    - index
                - type: object
                  properties:
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      type: string
                    address:
                      maxLength: 42
                      minLength: 42
                      description: Blockchain address to send ERC20 token to
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    amount:
                      description: Amount to be sent.
                      maxLength: 38
                      example: '100000'
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                      type: string
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    currency:
                      description: ERC20 symbol. Required only for calls.
                      example: MY_SYMBOL
                      maxLength: 30
                      minLength: 1
                      type: string
                    gasLimit:
                      type: string
                      description: 'Gas limit for transaction in gas price. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '40000'
                    gasPrice:
                      type: string
                      description: 'Gas price in Gwei. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '20'
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: |
                        Identifier of the mnemonic / private key associated in signing application.
                        When hash identifies mnemonic, index must be present to represent specific account to pay from.
                        Private key, mnemonic or signature Id must be present.
                    index:
                      description: Derivation index of sender address.
                      maximum: 2147483647
                      example: 0
                      type: integer
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to Ethereum transaction. If not present, last known nonce will be used.'
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      type: string
                  required:
                    - senderAccountId
                    - address
                    - amount
                    - signatureId
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      id:
                        description: 'ID of withdrawal. If transaction is not valid in blockchain, use this id to cancel withdrawal.'
                        example: 5e68c66581f2ee32bc354087
                        type: string
                      txId:
                        description: TX hash of successful transaction.
                        example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
                        type: string
                      completed:
                        description: 'Whethet withdrawal was completed in Tatum''s internal ledger. If not, it must be done manually.'
                        example: true
                        type: boolean
                    required:
                      - txId
                      - id
                      - completed
                  - type: object
                    properties:
                      signatureId:
                        description: 'ID of prepared payment template to sign. This is should be stored on a client side to retrieve ID of the blockchain transaction, when signing application signs the transaction and broadcasts it to the blockchain.'
                        example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
                        format: uuid
                        type: string
                    required:
                      - id
                      - signatureId
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: withdrawal.missing
                        example: withdrawal.missing
                        type: string
                      message:
                        description: No such withdrawal.
                        example: No such withdrawal.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: rate.not.found
                        example: rate.not.found
                        type: string
                      message:
                        description: No such currency rate.
                        example: No such currency rate.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: vc.not.found
                        example: vc.not.found
                        type: string
                      message:
                        description: No such virtual currency.
                        example: No such virtual currency.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.failed.transaction.failed
                        example: withdrawal.failed.transaction.failed
                        type: string
                      message:
                        description: 'Unable to store withdrawal, it is impossible to create transaction.'
                        example: 'Unable to store withdrawal, it is impossible to create transaction.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.account.virtual
                        example: withdrawal.account.virtual
                        type: string
                      message:
                        description: Sender account cannot be virtual.
                        example: Sender account cannot be virtual.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: offchain.not.supported
                        example: offchain.not.supported
                        type: string
                      message:
                        description: 'Offchain not supported for account with ${account.currency} currency.'
                        example: 'Offchain not supported for account with ${account.currency} currency.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.format
                        example: amount.format
                        type: string
                      message:
                        description: Amount has incorrect format.
                        example: Amount has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: fee.format
                        example: fee.format
                        type: string
                      message:
                        description: Fee has incorrect format.
                        example: Fee has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.not.cancelled.transaction.failed
                        example: withdrawal.not.cancelled.transaction.failed
                        type: string
                      message:
                        description: 'Unable to broadcast transaction, and impossible to cancel withdrawal. ID is attached, "${withdrawalId}", cancel it manually.'
                        example: 'Unable to broadcast transaction, and impossible to cancel withdrawal. ID is attached, "${withdrawalId}", cancel it manually.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.prepare.failed
                        example: withdrawal.prepare.failed
                        type: string
                      message:
                        description: 'Unable to prepare transaction, withdrawal cancelled.'
                        example: 'Unable to prepare transaction, withdrawal cancelled.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.not.exists
                        example: senderAccount.not.exists
                        type: string
                      message:
                        description: 'Unable to find sender account ${transaction.senderAccountId}.'
                        example: 'Unable to find sender account ${transaction.senderAccountId}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.customer.disabled
                        example: senderAccount.customer.disabled
                        type: string
                      message:
                        description: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        example: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: balance.insufficient
                        example: balance.insufficient
                        type: string
                      message:
                        description: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        example: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.btc
                        example: amount.btc
                        type: string
                      message:
                        description: 'BTC|LTC|BCH payment amount must be at least 0.00000000000001, not ${transaction.amount}.'
                        example: 'BTC|LTC|BCH payment amount must be at least 0.00000000000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.eth
                        example: amount.eth
                        type: string
                      message:
                        description: 'ETH payment amount must be at least 0.000000000001, not ${transaction.amount}.'
                        example: 'ETH payment amount must be at least 0.000000000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.frozen
                        example: senderAccount.frozen
                        type: string
                      message:
                        description: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        example: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.pending
                        example: withdrawal.pending
                        type: string
                      message:
                        description: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        example: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: private.mnemonic.missing
                        example: private.mnemonic.missing
                        type: string
                      message:
                        description: Either mnemonic and index or private key must be present.
                        example: Either mnemonic and index or private key must be present.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.erc20.unsupported
                        example: eth.erc20.unsupported
                        type: string
                      message:
                        description: Unsupported ETH ERC20 blockchain.
                        example: Unsupported ETH ERC20 blockchain.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: ethereum.broadcast.failed
                        example: ethereum.broadcast.failed
                        type: string
                      message:
                        description: 'Unable to broadcast transaction due to ${error}.'
                        example: 'Unable to broadcast transaction due to ${error}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: gas.price.failed
                        example: gas.price.failed
                        type: string
                      message:
                        description: Unable to obtain current GAS price.
                        example: Unable to obtain current GAS price.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: ethereum.transaction.body
                        example: ethereum.transaction.body
                        type: string
                      message:
                        description: 'Either currency, or tokenAddress must be defined.'
                        example: 'Either currency, or tokenAddress must be defined.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.transaction.gas
                        example: eth.transaction.gas
                        type: string
                      message:
                        description: 'Unable to calculate gas limit for transaction. ${error}'
                        example: 'Unable to calculate gas limit for transaction. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.transaction.hash
                        example: eth.transaction.hash
                        type: string
                      message:
                        description: 'Unable to calculate transaction hash. ${error}'
                        example: 'Unable to calculate transaction hash. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.transaction.sign
                        example: eth.transaction.sign
                        type: string
                      message:
                        description: 'Unable to sign transaction. ${error}'
                        example: 'Unable to sign transaction. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
      summary: Transfer Ethereum ERC20 from Tatum ledger to blockchain
      tags:
        - Offchain withdrawal
  /v3/offchain/withdrawal:
    post:
      description: |
        <h4>2 credits per API call.</h4><br/><p>
        <p>Create a withdrawal from Tatum Ledger account to the blockchain.<br/>
          <h4>BTC, LTC, DOGE, BCH</h4>
          <p>
            When withdrawal from Tatum is executed, all deposits, which are not processed yet are used as an input and
            change is moved to pool address 0 of wallet for defined account's xpub. If there are no unspent deposits, only last pool address 0 UTXO is used.
            If balance of wallet is not sufficient, it is impossible to perform withdrawal from this account -> funds were transferred to another
            linked wallet within system or outside of Tatum visibility.<br/>
            For the first time of withdrawal from wallet, there must be some deposit made and funds are obtained from that. Since
            there is no withdrawal, there was no transfer to pool address 0 and thus it is not present in vIn. Pool transfer is identified by missing data.address property in response.
            When last not cancelled withdrawal is not completed and thus there is no tx id of output transaction given,
            we cannot perform next withdrawal.
          </p>
          <h4>ETH</h4>
          <p>
            Withdrawal from Tatum can be processed only from 1 account. In Ethereum Blockchain, each address is recognized as an account and only funds from that account can be sent in 1 transaction.
            Example: Account A has 0.5 ETH, Account B has 0.3 ETH. Account A is linked to Tatum Account 1, Account B is linked to Tatum Account 2. Tatum Account 1 has balance 0.7 Ethereum and
            Tatum Account 2 has 0.1 ETH. Withdrawal from Tatum Account 1 can be at most 0.5 ETH, even though balance in Tatum Private Ledger is 0.7 ETH.
            Because of this Ethereum Blockchain limitation, withdrawal request should always contain sourceAddress, from which withdrawal will be made. To get available balances for Ethereum wallet accounts, use hint endpoint.
          </p>
          <h4>XRP</h4>
          <p>
            XRP withdrawal can contain DestinationTag except of address, which is placed in attr parameter of withdrawal request.
        SourceTag of the blockchain transaction should be withdrawal ID for autocomplete purposes of withdrawals.
          </p>
          <h4>XLM</h4>
          <p>
            XLM withdrawal can contain memo except of address, which is placed in attr parameter of withdrawal request. XLM blockchain does not have possibility to enter source account information.
            It is possible to create memo in format 'destination|source', which is supported way of memo in Tatum and also there is information about the sender account in the blockchain.
          </p>
        <br/>
        When withdrawal is created, all other withdrawals with the same currency are pending, unless the current one is marked as complete or cancelled.<br/>
        Tatum ledger transaction is created for every withdrawal request with operation type WITHDRAWAL. The value of the transaction is the withdrawal amount + blockchain fee, which should be paid.
        In the situation, when there is withdrawal for ERC20, XLM, or XRP based custom assets, the fee is not included in the transaction because it is paid in different assets than the withdrawal itself.
        </p>
      operationId: storeWithdrawal
      summary: Store withdrawal
      tags:
        - Withdrawal operations
      requestBody:
        content:
          application/json:
            schema:
              properties:
                senderAccountId:
                  description: Sender account ID
                  example: 5e68c66581f2ee32bc354087
                  maxLength: 24
                  minLength: 24
                  type: string
                address:
                  description: 'Blockchain address to send assets to. For BTC, LTC, DOGE and BCH, it is possible to enter list of multiple recipient blockchain addresses as a comma separated string.'
                  example: mpTwPdF8up9kidgcAStriUPwRdnE9MRAg7
                  maxLength: 10000
                  minLength: 1
                  type: string
                amount:
                  description: Amount to be withdrawn to blockchain.
                  maxLength: 38
                  example: '0.001'
                  type: string
                  pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                attr:
                  description: |
                    <p>Used to parametrize withdrawal. Used for XRP withdrawal to define destination tag of recipient, or XLM memo of the recipient, if needed.<br/>
                    For Bitcoin, Litecoin, Bitcoin Cash, used as a change address for left coins from transaction.</p>
                  maxLength: 64
                  minLength: 1
                  example: '12345'
                  type: string
                compliant:
                  description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                  example: false
                  type: boolean
                fee:
                  description: Fee to be submitted as a transaction fee to blockchain.
                  example: '0.0005'
                  type: string
                  pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                multipleAmounts:
                  description: 'For BTC, LTC, DOGE and BCH, it is possible to enter list of multiple recipient blockchain amounts. List of recipient addresses must be present in the address field and total sum of amounts must be equal to the amount field.'
                  type: array
                  items:
                    type: string
                    example: '0.1'
                    pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                paymentId:
                  description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                  example: '12345'
                  maxLength: 100
                  minLength: 1
                  type: string
                senderNote:
                  description: Note visible to owner of withdrawing account
                  example: Sender note
                  maxLength: 500
                  minLength: 1
                  type: string
              required:
                - amount
                - senderAccountId
                - address
                - fee
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  reference:
                    description: Transaction reference of the transaction connected to this withdrawal.
                    example: 5e6be8e9e6aa436299950c41
                    type: string
                  data:
                    items:
                      type: object
                      properties:
                        address:
                          required:
                            - address
                            - currency
                          properties:
                            address:
                              description: Blockchain address.
                              example: 7c21ed165e294db78b95f0f181086d6f
                              type: string
                            currency:
                              description: 'Currency of generated address. BTC, LTC, DOGE, BCH, ETH, XRP, XLM, BNB, TRX, ERC20, TRC20.'
                              example: BTC
                              type: string
                            derivationKey:
                              description: Derivation key index for given address.
                              format: int32
                              type: integer
                              maximum: 2147483647
                            xpub:
                              description: 'Extended public key to derive address from. In case of XRP, this is account address, since address is defined as DestinationTag, which is address field. In case of XLM, this is account address, since address is defined as message, which is address field.'
                              example: xpub6FB4LJzdKNkkpsjggFAGS2p34G48pqjtmSktmK2Ke3k1LKqm9ULsg8bGfDakYUrdhe2EHw5uGKX9DrMbrgYnVfDwrksT4ZVQ3vmgEruo3Ka
                              type: string
                            destinationTag:
                              description: 'In case of XRP, destinationTag is the distinguisher of the account.'
                              type: number
                              example: 5
                            memo:
                              description: 'In case of BNB, message is the distinguisher of the account.'
                              type: string
                              example: '5'
                            message:
                              description: 'In case of XLM, message is the distinguisher of the account.'
                              type: string
                              example: '5'
                          type: object
                        amount:
                          description: 'Amount of unprocessed transaction outputs, that can be used for withdrawal. Bitcoin, Litecoin, Bitcoin Cash only.'
                          type: number
                        vIn:
                          description: 'Last used unprocessed transaction output, that can be used. Bitcoin, Litecoin, Bitcoin Cash only. If -1, it indicates prepared vOut with amount to be transferred to pool address.'
                          type: string
                        vInIndex:
                          description: 'Index of last used unprocessed transaction output in raw transaction, that can be used. Bitcoin, Litecoin, Bitcoin Cash only.'
                          type: integer
                        scriptPubKey:
                          type: string
                          description: Script of last unprocessed UTXO. Bitcoin SV only.
                    type: array
                  id:
                    description: ID of withdrawal
                    example: 5e68c66581f2ee32bc354087
                    type: string
                type: object
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: rate.not.found
                        example: rate.not.found
                        type: string
                      message:
                        description: No such currency rate.
                        example: No such currency rate.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.recipient.format
                        example: withdrawal.recipient.format
                        type: string
                      message:
                        description: Recipient blockchain address has incorrect format.
                        example: Recipient blockchain address has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: vc.not.found
                        example: vc.not.found
                        type: string
                      message:
                        description: No such virtual currency.
                        example: No such virtual currency.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.failed.transaction.failed
                        example: withdrawal.failed.transaction.failed
                        type: string
                      message:
                        description: 'Unable to store withdrawal, it is impossible to create transaction.'
                        example: 'Unable to store withdrawal, it is impossible to create transaction.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.account.virtual
                        example: withdrawal.account.virtual
                        type: string
                      message:
                        description: Sender account cannot be virtual.
                        example: Sender account cannot be virtual.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: offchain.not.supported
                        example: offchain.not.supported
                        type: string
                      message:
                        description: 'Offchain not supported for account with ${account.currency} currency.'
                        example: 'Offchain not supported for account with ${account.currency} currency.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.format
                        example: amount.format
                        type: string
                      message:
                        description: Amount has incorrect format.
                        example: Amount has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: fee.format
                        example: fee.format
                        type: string
                      message:
                        description: Fee has incorrect format.
                        example: Fee has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.not.exists
                        example: senderAccount.not.exists
                        type: string
                      message:
                        description: 'Unable to find sender account ${transaction.senderAccountId}.'
                        example: 'Unable to find sender account ${transaction.senderAccountId}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.customer.disabled
                        example: senderAccount.customer.disabled
                        type: string
                      message:
                        description: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        example: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: balance.insufficient
                        example: balance.insufficient
                        type: string
                      message:
                        description: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        example: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: transaction.amount.btc
                        example: transaction.amount.btc
                        type: string
                      message:
                        description: 'BTC|LTC|BCH payment amount must be at least 0.00000001, not ${transaction.amount}.'
                        example: 'BTC|LTC|BCH payment amount must be at least 0.00000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.ada
                        example: amount.ada
                        type: string
                      message:
                        description: 'ADA payment amount must be at least 0.000000000001, not ${transaction.amount}.'
                        example: 'ADA payment amount must be at least 0.000000000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: transaction.amount.eth
                        example: transaction.amount.eth
                        type: string
                      message:
                        description: 'ETH payment amount must be at least 0.000000000000000001, not ${transaction.amount}.'
                        example: 'ETH payment amount must be at least 0.000000000000000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.frozen
                        example: senderAccount.frozen
                        type: string
                      message:
                        description: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        example: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.pending
                        example: withdrawal.pending
                        type: string
                      message:
                        description: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        example: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
    get:
      description: <h4>1 credit per API call.</h4><br/><p>Get withdrawals.</p>
      operationId: GetWithdrawals
      summary: Get withdrawals
      tags:
        - Withdrawal operations
      parameters:
        - description: Currency of the withdrawal
          in: query
          name: currency
          schema:
            minLength: 2
            maxLength: 30
            type: string
            example: BTC
        - description: Status of the withdrawal
          in: query
          name: status
          schema:
            type: string
            example: Done
            enum:
              - InProgress
              - Done
              - Cancelled
        - description: Max number of items per page is 50.
          in: query
          name: pageSize
          schema:
            type: number
            example: 10
            maximum: 50
            minimum: 1
          required: true
        - description: Offset to obtain next page of the data.
          in: query
          name: offset
          schema:
            type: number
            example: 0
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    id:
                      description: ID of the withdrawal
                      example: 5e68c66581f2ee32bc354088
                      type: string
                    txId:
                      description: Transaction ID of broadcast transaction
                      example: 62BD544D1B9031EFC330A3E855CC3A0D51CA5131455C1AB3BCAC6D243F65460D
                      type: string
                    accountId:
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      type: string
                    status:
                      description: Status of the withdrawal
                      example: InProgress
                      type: string
                      enum:
                        - InProgress
                        - Done
                        - Cancelled
                    address:
                      description: 'Blockchain address to send assets to. For BTC, LTC, DOGE and BCH, it is possible to enter list of multiple recipient blockchain addresses as a comma separated string.'
                      example: mpTwPdF8up9kidgcAStriUPwRdnE9MRAg7
                      maxLength: 10000
                      minLength: 1
                      type: string
                    reference:
                      description: 'Transaction internal reference - unique identifier within Tatum ledger. In order of failure, use this value to search for problems.'
                      example: 0c64cc04-5412-4e57-a51c-ee5727939bcb
                      type: string
                    amount:
                      description: Amount to be withdrawn to blockchain.
                      maxLength: 38
                      example: '0.001'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    attr:
                      description: |
                        <p>Used to parametrize withdrawal. Used for XRP withdrawal to define destination tag of recipient, or XLM memo of the recipient, if needed.<br/>
                        For Bitcoin, Litecoin, Bitcoin Cash, used as a change address for left coins from transaction.</p>
                      maxLength: 64
                      minLength: 1
                      example: '12345'
                      type: string
                    fee:
                      description: Fee to be submitted as a transaction fee to blockchain.
                      example: '0.0005'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    multipleAmounts:
                      description: 'For BTC, LTC, DOGE and BCH, it is possible to enter list of multiple recipient blockchain amounts. List of recipient addresses must be present in the address field and total sum of amounts must be equal to the amount field.'
                      type: array
                      items:
                        type: string
                        example: '0.1'
                        pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '12345'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderNote:
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      maxLength: 500
                      minLength: 1
                      type: string
                  required:
                    - amount
                    - id
                    - accountId
                    - address
                    - reference
                    - fee
                  type: object
                type: array
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/offchain/withdrawal/{id}/{txId}':
    put:
      description: |
        <h4>2 credits per API call.</h4><br/>
        <p>Invoke complete withdrawal as soon as blockchain transaction ID is available. All other withdrawals for the same currency will be pending unless the last one is processed and marked as completed.</p>
      operationId: completeWithdrawal
      summary: Complete withdrawal
      tags:
        - Withdrawal operations
      parameters:
        - description: ID of created withdrawal
          in: path
          name: id
          required: true
          schema:
            type: string
            maxLength: 50
            minLength: 10
        - description: Blockchain transaction ID of created withdrawal
          in: path
          name: txId
          required: true
          schema:
            type: string
            maxLength: 80
            minLength: 10
      responses:
        '204':
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: withdrawal.missing
                        example: withdrawal.missing
                        type: string
                      message:
                        description: No such withdrawal.
                        example: No such withdrawal.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.unexpected.state
                        example: withdrawal.unexpected.state
                        type: string
                      message:
                        description: 'Unable to complete withdrawal, which is not in InProgress state.'
                        example: 'Unable to complete withdrawal, which is not in InProgress state.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  '/v3/offchain/withdrawal/{id}':
    delete:
      description: |
        <h4>1 credit per API call.</h4><br/>
        <p>This method is helpful if you need to cancel the withdrawal if the blockchain transaction fails or is not yet processed.
        This does not cancel already broadcast blockchain transaction, only Tatum internal withdrawal, and the ledger transaction, that was linked to this withdrawal.<br/>
        By default, the transaction fee is included in the reverted transaction. There are situations, like sending ERC20 on ETH, TRC token on TRON, XLM or XRP based assets, when the fee should not be reverted, because e.g. the fee is in calculated
        in Ethereum and transaction was in ERC20 currency. In this situation, only the transaction amount should be reverted, not the fee.
        </p>
      operationId: cancelInProgressWithdrawal
      summary: Cancel withdrawal
      tags:
        - Withdrawal operations
      parameters:
        - description: ID of created withdrawal
          in: path
          name: id
          required: true
          schema:
            type: string
            maxLength: 24
            minLength: 24
        - description: Defines whether fee should be reverted to account balance as well as amount. Defaults to true. Revert true would be typically used when withdrawal was not broadcast to blockchain. False is used usually for Ethereum based currencies when gas was consumed but transaction was reverted.
          in: query
          name: revert
          required: false
          schema:
            default: true
            example: true
            type: boolean
      responses:
        '204':
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: rate.not.found
                        example: rate.not.found
                        type: string
                      message:
                        description: No such currency rate.
                        example: No such currency rate.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: vc.not.found
                        example: vc.not.found
                        type: string
                      message:
                        description: No such virtual currency.
                        example: No such virtual currency.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: account.not.exists
                        example: account.not.exists
                        type: string
                      message:
                        description: No such account.
                        example: No such account.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.not.cancelled.transaction.failed
                        example: withdrawal.not.cancelled.transaction.failed
                        type: string
                      message:
                        description: 'Unable to cancel withdrawal ${id}, it is impossible to create refund transaction.'
                        example: 'Unable to cancel withdrawal ${id}, it is impossible to create refund transaction.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  /v3/offchain/withdrawal/broadcast:
    post:
      description: |
        <h4>2 credits per API call.</h4><br/>
        <p>Broadcast signed raw transaction end complete withdrawal associated with it.
        When broadcast succeeded but it is impossible to complete withdrawal, transaction id of transaction is returned and withdrawal must be completed manually.
        </p>
      operationId: broadcastBlockchainTransaction
      summary: Broadcast signed transaction and complete withdrawal
      tags:
        - Withdrawal operations
      requestBody:
        content:
          application/json:
            schema:
              properties:
                currency:
                  description: 'Currency of signed transaction to be broadcast, BTC, LTC, DOGE, BNB, XLM, TRX, BCH, ETH, XRP, ERC20, TRC20'
                  example: BTC
                  maxLength: 40
                  minLength: 2
                  type: string
                txData:
                  description: Raw signed transaction to be published to network.
                  example: 62BD544D1B9031EFC330A3E855CC3A0D51CA5131455C1AB3BCAC6D243F65460D
                  maxLength: 500000
                  minLength: 1
                  type: string
                withdrawalId:
                  description: Withdrawal ID to be completed by transaction broadcast
                  example: 5e68c66581f2ee32bc354087
                  maxLength: 24
                  minLength: 24
                  type: string
                signatureId:
                  description: 'ID of prepared payment template to sign. This is should be stored on a client side to retrieve ID of the blockchain transaction, when signing application signs the transaction and broadcasts it to the blockchain.'
                  format: uuid
                  example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
                  type: string
                  maxLength: 36
                  minLength: 36
              required:
                - txData
                - currency
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  completed:
                    description: 'Flag, if withdrawal is successfully completed within Tatum systems.'
                    example: true
                    type: boolean
                  txId:
                    description: Transaction ID of broadcast transaction and status
                    example: 62BD544D1B9031EFC330A3E855CC3A0D51CA5131455C1AB3BCAC6D243F65460D
                    type: string
                type: object
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: withdrawal.missing
                        example: withdrawal.missing
                        type: string
                      message:
                        description: No such withdrawal.
                        example: No such withdrawal.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: broadcast.failed.withdrawalId
                        example: broadcast.failed.withdrawalId
                        type: string
                      message:
                        description: WithdrawalId must be present.
                        example: WithdrawalId must be present.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: ethereum.broadcast.failed
                        example: ethereum.broadcast.failed
                        type: string
                      message:
                        description: 'Unable to broadcast transaction due to ${error}.'
                        example: 'Unable to broadcast transaction due to ${error}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: blockchain.error.code
                        example: blockchain.error.code
                        type: string
                      message:
                        description: '${error.message} Code: ${error.code}'
                        example: '${error.message} Code: ${error.code}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: blockchain.broadcast.error
                        example: blockchain.broadcast.error
                        type: string
                      message:
                        description: 'Unable to broadcast transaction, wrong input data.'
                        example: 'Unable to broadcast transaction, wrong input data.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.unexpected.state
                        example: withdrawal.unexpected.state
                        type: string
                      message:
                        description: 'Unable to complete withdrawal, which is not in InProgress state.'
                        example: 'Unable to complete withdrawal, which is not in InProgress state.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
  /v3/offchain/bsc/transfer:
    post:
      description: |
        <h4>4 credits per API call.</h4><br/>
        <p>Send BSC or BEP20 from Tatum Ledger to account. This will create Tatum internal withdrawal request with ID. If every system works as expected, withdrawal request is marked as complete and transaction id is assigned to it.
        <br/>
        <br/>
        <ul>
        <li>If BSC server connection is unavailable, withdrawal request is cancelled.</li>
        <li>If blockchain transfer is successful, but is it not possible to reach Tatum, transaction id of blockchain transaction is returned and withdrawal request must be completed manually, otherwise all other withdrawals will be pending.</li>
        </ul>
        It is possible to perform ledger to blockchain transaction for ledger accounts without blockchain address assigned to them.<br/>
        This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.
        No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and losing funds. In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages.
        </p>
      operationId: BscOrBepTransfer
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to Binance Smart Chain transaction. If not present, last known nonce will be used.'
                    address:
                      description: Blockchain address to send assets
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      maxLength: 42
                      minLength: 42
                      type: string
                    amount:
                      description: Amount to be sent.
                      maxLength: 38
                      example: '100000'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    fromPrivateKey:
                      type: string
                      maxLength: 66
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      description: 'Private key of sender address. Either mnemonic and index, privateKey or signature Id must be present - depends on the type of account and xpub.'
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      type: string
                    gasLimit:
                      type: string
                      description: 'Gas limit for transaction in gas price. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '40000'
                    gasPrice:
                      type: string
                      description: 'Gas price in Gwei. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '20'
                  required:
                    - senderAccountId
                    - address
                    - amount
                    - fromPrivateKey
                - type: object
                  properties:
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to Binance Smart Chain transaction. If not present, last known nonce will be used.'
                    address:
                      description: Blockchain address to send assets
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      maxLength: 42
                      minLength: 42
                      type: string
                    amount:
                      description: Amount to be sent.
                      maxLength: 38
                      example: '100000'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    index:
                      description: Derivation index of sender address.
                      maximum: 2147483647
                      example: 0
                      type: integer
                    gasLimit:
                      type: string
                      description: 'Gas limit for transaction in gas price. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '40000'
                    gasPrice:
                      type: string
                      description: 'Gas price in Gwei. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '20'
                    mnemonic:
                      maxLength: 500
                      minLength: 1
                      description: 'Mnemonic to generate private key for sender address. Either mnemonic and index, privateKey or signature Id must be present - depends on the type of account and xpub.'
                      example: urge pulp usage sister evidence arrest palm math please chief egg abuse
                      type: string
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      type: string
                  required:
                    - senderAccountId
                    - address
                    - amount
                    - mnemonic
                    - index
                - type: object
                  properties:
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to Binance Smart Chain transaction. If not present, last known nonce will be used.'
                    address:
                      description: Blockchain address to send assets
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      maxLength: 42
                      minLength: 42
                      type: string
                    amount:
                      description: Amount to be sent.
                      maxLength: 38
                      example: '100000'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: |
                        Identifier of the mnemonic / private key associated in signing application.
                        When hash identifies mnemonic, index must be present to represent specific account to pay from.
                        Private key, mnemonic or signature Id must be present.
                    index:
                      description: Derivation index of sender address.
                      maximum: 2147483647
                      example: 0
                      type: integer
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      type: string
                    gasLimit:
                      type: string
                      description: 'Gas limit for transaction in gas price. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '40000'
                    gasPrice:
                      type: string
                      description: 'Gas price in Gwei. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '20'
                  required:
                    - senderAccountId
                    - address
                    - signatureId
                    - amount
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      id:
                        description: 'ID of withdrawal. If transaction is not valid in blockchain, use this id to cancel withdrawal.'
                        example: 5e68c66581f2ee32bc354087
                        type: string
                      txId:
                        description: TX hash of successful transaction.
                        example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
                        type: string
                      completed:
                        description: 'Whethet withdrawal was completed in Tatum''s internal ledger. If not, it must be done manually.'
                        example: true
                        type: boolean
                    required:
                      - txId
                      - id
                      - completed
                  - type: object
                    properties:
                      signatureId:
                        description: 'ID of prepared payment template to sign. This is should be stored on a client side to retrieve ID of the blockchain transaction, when signing application signs the transaction and broadcasts it to the blockchain.'
                        example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
                        format: uuid
                        type: string
                    required:
                      - id
                      - signatureId
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: withdrawal.missing
                        example: withdrawal.missing
                        type: string
                      message:
                        description: No such withdrawal.
                        example: No such withdrawal.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: rate.not.found
                        example: rate.not.found
                        type: string
                      message:
                        description: No such currency rate.
                        example: No such currency rate.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: vc.not.found
                        example: vc.not.found
                        type: string
                      message:
                        description: No such virtual currency.
                        example: No such virtual currency.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.recipient.format
                        example: withdrawal.recipient.format
                        type: string
                      message:
                        description: Recipient blockchain address has incorrect format.
                        example: Recipient blockchain address has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.failed.transaction.failed
                        example: withdrawal.failed.transaction.failed
                        type: string
                      message:
                        description: 'Unable to store withdrawal, it is impossible to create transaction.'
                        example: 'Unable to store withdrawal, it is impossible to create transaction.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.account.virtual
                        example: withdrawal.account.virtual
                        type: string
                      message:
                        description: Sender account cannot be virtual.
                        example: Sender account cannot be virtual.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: offchain.not.supported
                        example: offchain.not.supported
                        type: string
                      message:
                        description: 'Offchain not supported for account with ${account.currency} currency.'
                        example: 'Offchain not supported for account with ${account.currency} currency.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.format
                        example: amount.format
                        type: string
                      message:
                        description: Amount has incorrect format.
                        example: Amount has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: fee.format
                        example: fee.format
                        type: string
                      message:
                        description: Fee has incorrect format.
                        example: Fee has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.not.cancelled.transaction.failed
                        example: withdrawal.not.cancelled.transaction.failed
                        type: string
                      message:
                        description: 'Unable to broadcast transaction, and impossible to cancel withdrawal. ID is attached, "${withdrawalId}", cancel it manually.'
                        example: 'Unable to broadcast transaction, and impossible to cancel withdrawal. ID is attached, "${withdrawalId}", cancel it manually.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.prepare.failed
                        example: withdrawal.prepare.failed
                        type: string
                      message:
                        description: 'Unable to prepare transaction, withdrawal cancelled.'
                        example: 'Unable to prepare transaction, withdrawal cancelled.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.not.exists
                        example: senderAccount.not.exists
                        type: string
                      message:
                        description: 'Unable to find sender account ${transaction.senderAccountId}.'
                        example: 'Unable to find sender account ${transaction.senderAccountId}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.customer.disabled
                        example: senderAccount.customer.disabled
                        type: string
                      message:
                        description: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        example: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: balance.insufficient
                        example: balance.insufficient
                        type: string
                      message:
                        description: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        example: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.btc
                        example: amount.btc
                        type: string
                      message:
                        description: 'BTC|LTC|BCH payment amount must be at least 0.00000000000001, not ${transaction.amount}.'
                        example: 'BTC|LTC|BCH payment amount must be at least 0.00000000000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.eth
                        example: amount.eth
                        type: string
                      message:
                        description: 'ETH payment amount must be at least 0.000000000001, not ${transaction.amount}.'
                        example: 'ETH payment amount must be at least 0.000000000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.frozen
                        example: senderAccount.frozen
                        type: string
                      message:
                        description: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        example: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.pending
                        example: withdrawal.pending
                        type: string
                      message:
                        description: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        example: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: private.mnemonic.missing
                        example: private.mnemonic.missing
                        type: string
                      message:
                        description: Either mnemonic and index or private key must be present.
                        example: Either mnemonic and index or private key must be present.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.erc20.unsupported
                        example: eth.erc20.unsupported
                        type: string
                      message:
                        description: Unsupported ETH ERC20 blockchain.
                        example: Unsupported ETH ERC20 blockchain.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: ethereum.broadcast.failed
                        example: ethereum.broadcast.failed
                        type: string
                      message:
                        description: 'Unable to broadcast transaction due to ${error}.'
                        example: 'Unable to broadcast transaction due to ${error}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: gas.price.failed
                        example: gas.price.failed
                        type: string
                      message:
                        description: Unable to obtain current GAS price.
                        example: Unable to obtain current GAS price.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: ethereum.transaction.body
                        example: ethereum.transaction.body
                        type: string
                      message:
                        description: 'Either currency, or tokenAddress must be defined.'
                        example: 'Either currency, or tokenAddress must be defined.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.transaction.gas
                        example: eth.transaction.gas
                        type: string
                      message:
                        description: 'Unable to calculate gas limit for transaction. ${error}'
                        example: 'Unable to calculate gas limit for transaction. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.transaction.hash
                        example: eth.transaction.hash
                        type: string
                      message:
                        description: 'Unable to calculate transaction hash. ${error}'
                        example: 'Unable to calculate transaction hash. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.transaction.sign
                        example: eth.transaction.sign
                        type: string
                      message:
                        description: 'Unable to sign transaction. ${error}'
                        example: 'Unable to sign transaction. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
      summary: Send BSC or BEP20 from Tatum ledger to blockchain
      tags:
        - Offchain withdrawal
  /v3/offchain/xdc/transfer:
    post:
      description: |
        <h4>4 credits per API call.</h4><br/>
        <p>Send XDC or ERC20 from Tatum Ledger to account. This will create Tatum internal withdrawal request with ID. If every system works as expected, withdrawal request is marked as complete and transaction id is assigned to it.
        <br/>
        <br/>
        <ul>
        <li>If XDC server connection is unavailable, withdrawal request is cancelled.</li>
        <li>If blockchain transfer is successful, but is it not possible to reach Tatum, transaction id of blockchain transaction is returned and withdrawal request must be completed manually, otherwise all other withdrawals will be pending.</li>
        </ul>
        It is possible to perform ledger to blockchain transaction for ledger accounts without blockchain address assigned to them.<br/>
        This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.
        No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and losing funds. In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages.
        </p>
      operationId: XdcTransfer
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to Ethereum | Polygon | KCS | XDC transaction. If not present, last known nonce will be used.'
                    address:
                      description: Blockchain address to send assets
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      maxLength: 42
                      minLength: 42
                      type: string
                    amount:
                      description: Amount to be sent in Ether | MATIC | XDC | KCS.
                      maxLength: 38
                      example: '100000'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    privateKey:
                      type: string
                      maxLength: 66
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      description: 'Private key of sender address. Either mnemonic and index, privateKey or signature Id must be present - depends on the type of account and xpub.'
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      type: string
                    gasLimit:
                      type: string
                      description: 'Gas limit for transaction in gas price. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '40000'
                    gasPrice:
                      type: string
                      description: 'Gas price in Gwei. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '20'
                  required:
                    - senderAccountId
                    - address
                    - amount
                    - privateKey
                - type: object
                  properties:
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to Ethereum | Polygon | KCS | XDC transaction. If not present, last known nonce will be used.'
                    address:
                      description: Blockchain address to send assets
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      maxLength: 42
                      minLength: 42
                      type: string
                    amount:
                      description: Amount to be sent in Ether | MATIC | XDC | KCS.
                      maxLength: 38
                      example: '100000'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    index:
                      description: Derivation index of sender address.
                      maximum: 2147483647
                      example: 0
                      type: integer
                    gasLimit:
                      type: string
                      description: 'Gas limit for transaction in gas price. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '40000'
                    gasPrice:
                      type: string
                      description: 'Gas price in Gwei. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '20'
                    mnemonic:
                      maxLength: 500
                      minLength: 1
                      description: 'Mnemonic to generate private key for sender address. Either mnemonic and index, privateKey or signature Id must be present - depends on the type of account and xpub.'
                      example: urge pulp usage sister evidence arrest palm math please chief egg abuse
                      type: string
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      type: string
                  required:
                    - senderAccountId
                    - address
                    - amount
                    - mnemonic
                    - index
                - type: object
                  properties:
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to Ethereum | Polygon | KCS | XDC transaction. If not present, last known nonce will be used.'
                    address:
                      description: Blockchain address to send assets
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      maxLength: 42
                      minLength: 42
                      type: string
                    amount:
                      description: Amount to be sent in Ether | MATIC | XDC | KCS.
                      maxLength: 38
                      example: '100000'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: |
                        Identifier of the mnemonic / private key associated in signing application.
                        When hash identifies mnemonic, index must be present to represent specific account to pay from.
                        Private key, mnemonic or signature Id must be present.
                    index:
                      description: Derivation index of sender address.
                      maximum: 2147483647
                      example: 0
                      type: integer
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      type: string
                    gasLimit:
                      type: string
                      description: 'Gas limit for transaction in gas price. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '40000'
                    gasPrice:
                      type: string
                      description: 'Gas price in Gwei. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '20'
                  required:
                    - senderAccountId
                    - address
                    - signatureId
                    - amount
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      id:
                        description: 'ID of withdrawal. If transaction is not valid in blockchain, use this id to cancel withdrawal.'
                        example: 5e68c66581f2ee32bc354087
                        type: string
                      txId:
                        description: TX hash of successful transaction.
                        example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
                        type: string
                      completed:
                        description: 'Whethet withdrawal was completed in Tatum''s internal ledger. If not, it must be done manually.'
                        example: true
                        type: boolean
                    required:
                      - txId
                      - id
                      - completed
                  - type: object
                    properties:
                      signatureId:
                        description: 'ID of prepared payment template to sign. This is should be stored on a client side to retrieve ID of the blockchain transaction, when signing application signs the transaction and broadcasts it to the blockchain.'
                        example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
                        format: uuid
                        type: string
                    required:
                      - id
                      - signatureId
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: withdrawal.missing
                        example: withdrawal.missing
                        type: string
                      message:
                        description: No such withdrawal.
                        example: No such withdrawal.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: rate.not.found
                        example: rate.not.found
                        type: string
                      message:
                        description: No such currency rate.
                        example: No such currency rate.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: vc.not.found
                        example: vc.not.found
                        type: string
                      message:
                        description: No such virtual currency.
                        example: No such virtual currency.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.recipient.format
                        example: withdrawal.recipient.format
                        type: string
                      message:
                        description: Recipient blockchain address has incorrect format.
                        example: Recipient blockchain address has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.failed.transaction.failed
                        example: withdrawal.failed.transaction.failed
                        type: string
                      message:
                        description: 'Unable to store withdrawal, it is impossible to create transaction.'
                        example: 'Unable to store withdrawal, it is impossible to create transaction.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.account.virtual
                        example: withdrawal.account.virtual
                        type: string
                      message:
                        description: Sender account cannot be virtual.
                        example: Sender account cannot be virtual.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: offchain.not.supported
                        example: offchain.not.supported
                        type: string
                      message:
                        description: 'Offchain not supported for account with ${account.currency} currency.'
                        example: 'Offchain not supported for account with ${account.currency} currency.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.format
                        example: amount.format
                        type: string
                      message:
                        description: Amount has incorrect format.
                        example: Amount has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: fee.format
                        example: fee.format
                        type: string
                      message:
                        description: Fee has incorrect format.
                        example: Fee has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.not.cancelled.transaction.failed
                        example: withdrawal.not.cancelled.transaction.failed
                        type: string
                      message:
                        description: 'Unable to broadcast transaction, and impossible to cancel withdrawal. ID is attached, "${withdrawalId}", cancel it manually.'
                        example: 'Unable to broadcast transaction, and impossible to cancel withdrawal. ID is attached, "${withdrawalId}", cancel it manually.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.prepare.failed
                        example: withdrawal.prepare.failed
                        type: string
                      message:
                        description: 'Unable to prepare transaction, withdrawal cancelled.'
                        example: 'Unable to prepare transaction, withdrawal cancelled.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.not.exists
                        example: senderAccount.not.exists
                        type: string
                      message:
                        description: 'Unable to find sender account ${transaction.senderAccountId}.'
                        example: 'Unable to find sender account ${transaction.senderAccountId}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.customer.disabled
                        example: senderAccount.customer.disabled
                        type: string
                      message:
                        description: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        example: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: balance.insufficient
                        example: balance.insufficient
                        type: string
                      message:
                        description: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        example: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.btc
                        example: amount.btc
                        type: string
                      message:
                        description: 'BTC|LTC|BCH payment amount must be at least 0.00000000000001, not ${transaction.amount}.'
                        example: 'BTC|LTC|BCH payment amount must be at least 0.00000000000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.eth
                        example: amount.eth
                        type: string
                      message:
                        description: 'ETH payment amount must be at least 0.000000000001, not ${transaction.amount}.'
                        example: 'ETH payment amount must be at least 0.000000000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.frozen
                        example: senderAccount.frozen
                        type: string
                      message:
                        description: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        example: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.pending
                        example: withdrawal.pending
                        type: string
                      message:
                        description: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        example: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: private.mnemonic.missing
                        example: private.mnemonic.missing
                        type: string
                      message:
                        description: Either mnemonic and index or private key must be present.
                        example: Either mnemonic and index or private key must be present.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.erc20.unsupported
                        example: eth.erc20.unsupported
                        type: string
                      message:
                        description: Unsupported ETH ERC20 blockchain.
                        example: Unsupported ETH ERC20 blockchain.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: ethereum.broadcast.failed
                        example: ethereum.broadcast.failed
                        type: string
                      message:
                        description: 'Unable to broadcast transaction due to ${error}.'
                        example: 'Unable to broadcast transaction due to ${error}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: gas.price.failed
                        example: gas.price.failed
                        type: string
                      message:
                        description: Unable to obtain current GAS price.
                        example: Unable to obtain current GAS price.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: ethereum.transaction.body
                        example: ethereum.transaction.body
                        type: string
                      message:
                        description: 'Either currency, or tokenAddress must be defined.'
                        example: 'Either currency, or tokenAddress must be defined.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.transaction.gas
                        example: eth.transaction.gas
                        type: string
                      message:
                        description: 'Unable to calculate gas limit for transaction. ${error}'
                        example: 'Unable to calculate gas limit for transaction. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.transaction.hash
                        example: eth.transaction.hash
                        type: string
                      message:
                        description: 'Unable to calculate transaction hash. ${error}'
                        example: 'Unable to calculate transaction hash. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.transaction.sign
                        example: eth.transaction.sign
                        type: string
                      message:
                        description: 'Unable to sign transaction. ${error}'
                        example: 'Unable to sign transaction. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
      summary: Send XDC or ERC-20 from Tatum ledger to blockchain
      tags:
        - Offchain withdrawal
  /v3/offchain/one/transfer:
    post:
      description: |
        <h4>4 credits per API call.</h4><br/>
        <p>Send ONE or HRM20 from Tatum Ledger to account. This will create Tatum internal withdrawal request with ID. If every system works as expected, withdrawal request is marked as complete and transaction id is assigned to it.
        <br/>
        <br/>
        <ul>
        <li>If ONE server connection is unavailable, withdrawal request is cancelled.</li>
        <li>If blockchain transfer is successful, but is it not possible to reach Tatum, transaction id of blockchain transaction is returned and withdrawal request must be completed manually, otherwise all other withdrawals will be pending.</li>
        </ul>
        It is possible to perform ledger to blockchain transaction for ledger accounts without blockchain address assigned to them.<br/>
        This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.
        No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and losing funds. In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages.
        </p>
      operationId: OneTransfer
      parameters:
        - description: Shard to operate on
          in: query
          name: shardID
          required: false
          schema:
            default: 0
            type: number
            example: 0
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to Ethereum | Polygon | KCS | XDC transaction. If not present, last known nonce will be used.'
                    address:
                      description: Blockchain address to send assets
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      maxLength: 42
                      minLength: 42
                      type: string
                    amount:
                      description: Amount to be sent in Ether | MATIC | XDC | KCS.
                      maxLength: 38
                      example: '100000'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    privateKey:
                      type: string
                      maxLength: 66
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      description: 'Private key of sender address. Either mnemonic and index, privateKey or signature Id must be present - depends on the type of account and xpub.'
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      type: string
                    gasLimit:
                      type: string
                      description: 'Gas limit for transaction in gas price. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '40000'
                    gasPrice:
                      type: string
                      description: 'Gas price in Gwei. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '20'
                  required:
                    - senderAccountId
                    - address
                    - amount
                    - privateKey
                - type: object
                  properties:
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to Ethereum | Polygon | KCS | XDC transaction. If not present, last known nonce will be used.'
                    address:
                      description: Blockchain address to send assets
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      maxLength: 42
                      minLength: 42
                      type: string
                    amount:
                      description: Amount to be sent in Ether | MATIC | XDC | KCS.
                      maxLength: 38
                      example: '100000'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    index:
                      description: Derivation index of sender address.
                      maximum: 2147483647
                      example: 0
                      type: integer
                    gasLimit:
                      type: string
                      description: 'Gas limit for transaction in gas price. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '40000'
                    gasPrice:
                      type: string
                      description: 'Gas price in Gwei. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '20'
                    mnemonic:
                      maxLength: 500
                      minLength: 1
                      description: 'Mnemonic to generate private key for sender address. Either mnemonic and index, privateKey or signature Id must be present - depends on the type of account and xpub.'
                      example: urge pulp usage sister evidence arrest palm math please chief egg abuse
                      type: string
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      type: string
                  required:
                    - senderAccountId
                    - address
                    - amount
                    - mnemonic
                    - index
                - type: object
                  properties:
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to Ethereum | Polygon | KCS | XDC transaction. If not present, last known nonce will be used.'
                    address:
                      description: Blockchain address to send assets
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      maxLength: 42
                      minLength: 42
                      type: string
                    amount:
                      description: Amount to be sent in Ether | MATIC | XDC | KCS.
                      maxLength: 38
                      example: '100000'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: |
                        Identifier of the mnemonic / private key associated in signing application.
                        When hash identifies mnemonic, index must be present to represent specific account to pay from.
                        Private key, mnemonic or signature Id must be present.
                    index:
                      description: Derivation index of sender address.
                      maximum: 2147483647
                      example: 0
                      type: integer
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      type: string
                    gasLimit:
                      type: string
                      description: 'Gas limit for transaction in gas price. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '40000'
                    gasPrice:
                      type: string
                      description: 'Gas price in Gwei. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '20'
                  required:
                    - senderAccountId
                    - address
                    - signatureId
                    - amount
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      id:
                        description: 'ID of withdrawal. If transaction is not valid in blockchain, use this id to cancel withdrawal.'
                        example: 5e68c66581f2ee32bc354087
                        type: string
                      txId:
                        description: TX hash of successful transaction.
                        example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
                        type: string
                      completed:
                        description: 'Whethet withdrawal was completed in Tatum''s internal ledger. If not, it must be done manually.'
                        example: true
                        type: boolean
                    required:
                      - txId
                      - id
                      - completed
                  - type: object
                    properties:
                      signatureId:
                        description: 'ID of prepared payment template to sign. This is should be stored on a client side to retrieve ID of the blockchain transaction, when signing application signs the transaction and broadcasts it to the blockchain.'
                        example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
                        format: uuid
                        type: string
                    required:
                      - id
                      - signatureId
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: withdrawal.missing
                        example: withdrawal.missing
                        type: string
                      message:
                        description: No such withdrawal.
                        example: No such withdrawal.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: rate.not.found
                        example: rate.not.found
                        type: string
                      message:
                        description: No such currency rate.
                        example: No such currency rate.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: vc.not.found
                        example: vc.not.found
                        type: string
                      message:
                        description: No such virtual currency.
                        example: No such virtual currency.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.recipient.format
                        example: withdrawal.recipient.format
                        type: string
                      message:
                        description: Recipient blockchain address has incorrect format.
                        example: Recipient blockchain address has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.failed.transaction.failed
                        example: withdrawal.failed.transaction.failed
                        type: string
                      message:
                        description: 'Unable to store withdrawal, it is impossible to create transaction.'
                        example: 'Unable to store withdrawal, it is impossible to create transaction.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.account.virtual
                        example: withdrawal.account.virtual
                        type: string
                      message:
                        description: Sender account cannot be virtual.
                        example: Sender account cannot be virtual.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: offchain.not.supported
                        example: offchain.not.supported
                        type: string
                      message:
                        description: 'Offchain not supported for account with ${account.currency} currency.'
                        example: 'Offchain not supported for account with ${account.currency} currency.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.format
                        example: amount.format
                        type: string
                      message:
                        description: Amount has incorrect format.
                        example: Amount has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: fee.format
                        example: fee.format
                        type: string
                      message:
                        description: Fee has incorrect format.
                        example: Fee has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.not.cancelled.transaction.failed
                        example: withdrawal.not.cancelled.transaction.failed
                        type: string
                      message:
                        description: 'Unable to broadcast transaction, and impossible to cancel withdrawal. ID is attached, "${withdrawalId}", cancel it manually.'
                        example: 'Unable to broadcast transaction, and impossible to cancel withdrawal. ID is attached, "${withdrawalId}", cancel it manually.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.prepare.failed
                        example: withdrawal.prepare.failed
                        type: string
                      message:
                        description: 'Unable to prepare transaction, withdrawal cancelled.'
                        example: 'Unable to prepare transaction, withdrawal cancelled.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.not.exists
                        example: senderAccount.not.exists
                        type: string
                      message:
                        description: 'Unable to find sender account ${transaction.senderAccountId}.'
                        example: 'Unable to find sender account ${transaction.senderAccountId}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.customer.disabled
                        example: senderAccount.customer.disabled
                        type: string
                      message:
                        description: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        example: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: balance.insufficient
                        example: balance.insufficient
                        type: string
                      message:
                        description: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        example: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.btc
                        example: amount.btc
                        type: string
                      message:
                        description: 'BTC|LTC|BCH payment amount must be at least 0.00000000000001, not ${transaction.amount}.'
                        example: 'BTC|LTC|BCH payment amount must be at least 0.00000000000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.eth
                        example: amount.eth
                        type: string
                      message:
                        description: 'ETH payment amount must be at least 0.000000000001, not ${transaction.amount}.'
                        example: 'ETH payment amount must be at least 0.000000000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.frozen
                        example: senderAccount.frozen
                        type: string
                      message:
                        description: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        example: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.pending
                        example: withdrawal.pending
                        type: string
                      message:
                        description: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        example: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: private.mnemonic.missing
                        example: private.mnemonic.missing
                        type: string
                      message:
                        description: Either mnemonic and index or private key must be present.
                        example: Either mnemonic and index or private key must be present.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.erc20.unsupported
                        example: eth.erc20.unsupported
                        type: string
                      message:
                        description: Unsupported ETH ERC20 blockchain.
                        example: Unsupported ETH ERC20 blockchain.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: ethereum.broadcast.failed
                        example: ethereum.broadcast.failed
                        type: string
                      message:
                        description: 'Unable to broadcast transaction due to ${error}.'
                        example: 'Unable to broadcast transaction due to ${error}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: gas.price.failed
                        example: gas.price.failed
                        type: string
                      message:
                        description: Unable to obtain current GAS price.
                        example: Unable to obtain current GAS price.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: ethereum.transaction.body
                        example: ethereum.transaction.body
                        type: string
                      message:
                        description: 'Either currency, or tokenAddress must be defined.'
                        example: 'Either currency, or tokenAddress must be defined.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.transaction.gas
                        example: eth.transaction.gas
                        type: string
                      message:
                        description: 'Unable to calculate gas limit for transaction. ${error}'
                        example: 'Unable to calculate gas limit for transaction. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.transaction.hash
                        example: eth.transaction.hash
                        type: string
                      message:
                        description: 'Unable to calculate transaction hash. ${error}'
                        example: 'Unable to calculate transaction hash. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.transaction.sign
                        example: eth.transaction.sign
                        type: string
                      message:
                        description: 'Unable to sign transaction. ${error}'
                        example: 'Unable to sign transaction. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
      summary: Send ONE or HRM-20 from Tatum ledger to blockchain
      tags:
        - Offchain withdrawal
  /v3/offchain/celo/transfer:
    post:
      description: |
        <h4>4 credits per API call.</h4><br/>
        <p>Send Celo or ERC-20 from Tatum Ledger to account. This will create Tatum internal withdrawal request with ID. If every system works as expected, withdrawal request is marked as complete and transaction id is assigned to it.
        <br/>
        <br/>
        <ul>
        <li>If Celo server connection is unavailable, withdrawal request is cancelled.</li>
        <li>If blockchain transfer is successful, but is it not possible to reach Tatum, transaction id of blockchain transaction is returned and withdrawal request must be completed manually, otherwise all other withdrawals will be pending.</li>
        </ul>
        It is possible to perform ledger to blockchain transaction for ledger accounts without blockchain address assigned to them.<br/>
        This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.
        No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and losing funds. In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages.
        </p>
      operationId: CeloOrErc20Transfer
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to Celo transaction. If not present, last known nonce will be used.'
                    address:
                      description: Blockchain address to send assets
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      maxLength: 42
                      minLength: 42
                      type: string
                    amount:
                      description: Amount to be sent.
                      maxLength: 38
                      example: '100000'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    fromPrivateKey:
                      type: string
                      maxLength: 66
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      description: 'Private key of sender address. Either mnemonic and index, privateKey or signature Id must be present - depends on the type of account and xpub.'
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      type: string
                    feeCurrency:
                      type: string
                      description: Currency to pay for transaction gas
                      enum:
                        - CELO
                        - CUSD
                        - CEUR
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      type: string
                    gasLimit:
                      type: string
                      description: 'Gas limit for transaction in gas price. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '40000'
                    gasPrice:
                      type: string
                      description: 'Gas price in Gwei. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '20'
                  required:
                    - senderAccountId
                    - address
                    - amount
                    - feeCurrency
                    - fromPrivateKey
                - type: object
                  properties:
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to Celo transaction. If not present, last known nonce will be used.'
                    address:
                      description: Blockchain address to send assets
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      maxLength: 42
                      minLength: 42
                      type: string
                    amount:
                      description: Amount to be sent.
                      maxLength: 38
                      example: '100000'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    index:
                      description: Derivation index of sender address.
                      maximum: 2147483647
                      example: 0
                      type: integer
                    feeCurrency:
                      type: string
                      description: Currency to pay for transaction gas
                      enum:
                        - CELO
                        - CUSD
                        - CEUR
                    gasLimit:
                      type: string
                      description: 'Gas limit for transaction in gas price. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '40000'
                    gasPrice:
                      type: string
                      description: 'Gas price in Gwei. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '20'
                    mnemonic:
                      maxLength: 500
                      minLength: 1
                      description: 'Mnemonic to generate private key for sender address. Either mnemonic and index, privateKey or signature Id must be present - depends on the type of account and xpub.'
                      example: urge pulp usage sister evidence arrest palm math please chief egg abuse
                      type: string
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      type: string
                  required:
                    - senderAccountId
                    - address
                    - amount
                    - mnemonic
                    - feeCurrency
                    - index
                - type: object
                  properties:
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to Celo transaction. If not present, last known nonce will be used.'
                    address:
                      description: Blockchain address to send assets
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      maxLength: 42
                      minLength: 42
                      type: string
                    amount:
                      description: Amount to be sent.
                      maxLength: 38
                      example: '100000'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: |
                        Identifier of the mnemonic / private key associated in signing application.
                        When hash identifies mnemonic, index must be present to represent specific account to pay from.
                        Private key, mnemonic or signature Id must be present.
                    index:
                      description: Derivation index of sender address.
                      maximum: 2147483647
                      example: 0
                      type: integer
                    feeCurrency:
                      type: string
                      description: Currency to pay for transaction gas
                      enum:
                        - CELO
                        - CUSD
                        - CEUR
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      type: string
                    gasLimit:
                      type: string
                      description: 'Gas limit for transaction in gas price. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '40000'
                    gasPrice:
                      type: string
                      description: 'Gas price in Gwei. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '20'
                  required:
                    - senderAccountId
                    - address
                    - signatureId
                    - feeCurrency
                    - amount
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      id:
                        description: 'ID of withdrawal. If transaction is not valid in blockchain, use this id to cancel withdrawal.'
                        example: 5e68c66581f2ee32bc354087
                        type: string
                      txId:
                        description: TX hash of successful transaction.
                        example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
                        type: string
                      completed:
                        description: 'Whethet withdrawal was completed in Tatum''s internal ledger. If not, it must be done manually.'
                        example: true
                        type: boolean
                    required:
                      - txId
                      - id
                      - completed
                  - type: object
                    properties:
                      signatureId:
                        description: 'ID of prepared payment template to sign. This is should be stored on a client side to retrieve ID of the blockchain transaction, when signing application signs the transaction and broadcasts it to the blockchain.'
                        example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
                        format: uuid
                        type: string
                    required:
                      - id
                      - signatureId
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: withdrawal.missing
                        example: withdrawal.missing
                        type: string
                      message:
                        description: No such withdrawal.
                        example: No such withdrawal.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: rate.not.found
                        example: rate.not.found
                        type: string
                      message:
                        description: No such currency rate.
                        example: No such currency rate.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: vc.not.found
                        example: vc.not.found
                        type: string
                      message:
                        description: No such virtual currency.
                        example: No such virtual currency.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.recipient.format
                        example: withdrawal.recipient.format
                        type: string
                      message:
                        description: Recipient blockchain address has incorrect format.
                        example: Recipient blockchain address has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.failed.transaction.failed
                        example: withdrawal.failed.transaction.failed
                        type: string
                      message:
                        description: 'Unable to store withdrawal, it is impossible to create transaction.'
                        example: 'Unable to store withdrawal, it is impossible to create transaction.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.account.virtual
                        example: withdrawal.account.virtual
                        type: string
                      message:
                        description: Sender account cannot be virtual.
                        example: Sender account cannot be virtual.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: offchain.not.supported
                        example: offchain.not.supported
                        type: string
                      message:
                        description: 'Offchain not supported for account with ${account.currency} currency.'
                        example: 'Offchain not supported for account with ${account.currency} currency.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.format
                        example: amount.format
                        type: string
                      message:
                        description: Amount has incorrect format.
                        example: Amount has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: fee.format
                        example: fee.format
                        type: string
                      message:
                        description: Fee has incorrect format.
                        example: Fee has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.not.cancelled.transaction.failed
                        example: withdrawal.not.cancelled.transaction.failed
                        type: string
                      message:
                        description: 'Unable to broadcast transaction, and impossible to cancel withdrawal. ID is attached, "${withdrawalId}", cancel it manually.'
                        example: 'Unable to broadcast transaction, and impossible to cancel withdrawal. ID is attached, "${withdrawalId}", cancel it manually.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.prepare.failed
                        example: withdrawal.prepare.failed
                        type: string
                      message:
                        description: 'Unable to prepare transaction, withdrawal cancelled.'
                        example: 'Unable to prepare transaction, withdrawal cancelled.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.not.exists
                        example: senderAccount.not.exists
                        type: string
                      message:
                        description: 'Unable to find sender account ${transaction.senderAccountId}.'
                        example: 'Unable to find sender account ${transaction.senderAccountId}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.customer.disabled
                        example: senderAccount.customer.disabled
                        type: string
                      message:
                        description: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        example: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: balance.insufficient
                        example: balance.insufficient
                        type: string
                      message:
                        description: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        example: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.btc
                        example: amount.btc
                        type: string
                      message:
                        description: 'BTC|LTC|BCH payment amount must be at least 0.00000000000001, not ${transaction.amount}.'
                        example: 'BTC|LTC|BCH payment amount must be at least 0.00000000000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.eth
                        example: amount.eth
                        type: string
                      message:
                        description: 'ETH payment amount must be at least 0.000000000001, not ${transaction.amount}.'
                        example: 'ETH payment amount must be at least 0.000000000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.frozen
                        example: senderAccount.frozen
                        type: string
                      message:
                        description: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        example: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.pending
                        example: withdrawal.pending
                        type: string
                      message:
                        description: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        example: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: private.mnemonic.missing
                        example: private.mnemonic.missing
                        type: string
                      message:
                        description: Either mnemonic and index or private key must be present.
                        example: Either mnemonic and index or private key must be present.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.erc20.unsupported
                        example: eth.erc20.unsupported
                        type: string
                      message:
                        description: Unsupported ETH ERC20 blockchain.
                        example: Unsupported ETH ERC20 blockchain.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: ethereum.broadcast.failed
                        example: ethereum.broadcast.failed
                        type: string
                      message:
                        description: 'Unable to broadcast transaction due to ${error}.'
                        example: 'Unable to broadcast transaction due to ${error}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: gas.price.failed
                        example: gas.price.failed
                        type: string
                      message:
                        description: Unable to obtain current GAS price.
                        example: Unable to obtain current GAS price.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: ethereum.transaction.body
                        example: ethereum.transaction.body
                        type: string
                      message:
                        description: 'Either currency, or tokenAddress must be defined.'
                        example: 'Either currency, or tokenAddress must be defined.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.transaction.gas
                        example: eth.transaction.gas
                        type: string
                      message:
                        description: 'Unable to calculate gas limit for transaction. ${error}'
                        example: 'Unable to calculate gas limit for transaction. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.transaction.hash
                        example: eth.transaction.hash
                        type: string
                      message:
                        description: 'Unable to calculate transaction hash. ${error}'
                        example: 'Unable to calculate transaction hash. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.transaction.sign
                        example: eth.transaction.sign
                        type: string
                      message:
                        description: 'Unable to sign transaction. ${error}'
                        example: 'Unable to sign transaction. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
      summary: 'Send Celo, cUSD, cEUR or ERC-20 from Tatum ledger to blockchain'
      tags:
        - Offchain withdrawal
  /v3/offchain/solana/transfer:
    post:
      description: |
        <h4>10 credits per API call.</h4><br/><p>
        <p>Send SOL from virtual account to blockchain address. This will create Tatum internal withdrawal request with ID. When every system works as expected,
        withdrawal request is marked as complete and transaction id is assigned to it.
        <ul>
        <li>If SOL server connection is unavailable, withdrawal request is cancelled.</li>
        <li>If blockchain transfer is successful, but is it not possible to reach Tatum, transaction id of blockchain transaction is returned and withdrawal request must be completed manually, otherwise all other withdrawals will be pending.</li>
        </ul>
        It is possible to perform ledger to blockchain transaction for ledger accounts without blockchain address assigned to them.<br/>
        This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.
        No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and losing funds. In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages.
        </p>
      operationId: SolTransfer
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 61b3bffddfb389cde19c73be
                      type: string
                    from:
                      description: Blockchain account to send from
                      example: FykfMwA9WNShzPJbbb9DNXsfgDgS3XZzWiFgrVXfWoPJ
                      type: string
                    address:
                      description: Blockchain address to send assets
                      example: 9B5XszUGdMaxCZ7uSQhPzdks5ZQSmWxrmzCSvtJ6Ns6g
                      type: string
                    amount:
                      description: 'Amount to be sent, in SOL.'
                      maxLength: 38
                      example: '10000'
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                      type: string
                    privateKey:
                      maxLength: 128
                      minLength: 87
                      description: 'Private key for account. Private key, or signature Id must be present.'
                      example: zgsAKfjuXrAxEyuYRxbbxPM3rdsPbJPnGreaGMbcdUApJ6wHnCqQnf9b1RNPdeZxsRMkezh4VgXQ7YrbpndGtEv
                      type: string
                    fee:
                      description: 'Fee to be charged for the operation. For SOL, fee is decided by the blockchain, but default SOL fee is 0.000005. This fee will be only charged on top of the withdrawal amount to the virtual account.'
                      maxLength: 38
                      example: '10000'
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                      type: string
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account.
                      example: Sender note
                      type: string
                  required:
                    - from
                    - senderAccountId
                    - address
                    - privateKey
                    - amount
                - type: object
                  properties:
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 61b3bffddfb389cde19c73be
                      type: string
                    from:
                      description: Blockchain account to send from
                      example: FykfMwA9WNShzPJbbb9DNXsfgDgS3XZzWiFgrVXfWoPJ
                      type: string
                    address:
                      description: Blockchain address to send assets
                      example: 9B5XszUGdMaxCZ7uSQhPzdks5ZQSmWxrmzCSvtJ6Ns6g
                      type: string
                    amount:
                      description: 'Amount to be sent, in SOL.'
                      maxLength: 38
                      example: '10000'
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                      type: string
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: 'Identifier of the secret associated in signing application. Secret, or signature Id must be present.'
                    fee:
                      description: 'Fee to be charged for the operation. For SOL, fee is decided by the blockchain, but default SOL fee is 0.000005. This fee will be only charged on top of the withdrawal amount to the virtual account.'
                      maxLength: 38
                      example: '10000'
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                      type: string
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account.
                      example: Sender note
                      type: string
                  required:
                    - from
                    - senderAccountId
                    - address
                    - signatureId
                    - amount
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      id:
                        description: 'ID of withdrawal. If transaction is not valid in blockchain, use this id to cancel withdrawal.'
                        example: 5e68c66581f2ee32bc354087
                        type: string
                      txId:
                        description: TX hash of successful transaction.
                        example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
                        type: string
                      completed:
                        description: 'Whethet withdrawal was completed in Tatum''s internal ledger. If not, it must be done manually.'
                        example: true
                        type: boolean
                    required:
                      - txId
                      - id
                      - completed
                  - type: object
                    properties:
                      signatureId:
                        description: 'ID of prepared payment template to sign. This is should be stored on a client side to retrieve ID of the blockchain transaction, when signing application signs the transaction and broadcasts it to the blockchain.'
                        example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
                        format: uuid
                        type: string
                    required:
                      - id
                      - signatureId
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: rate.not.found
                        example: rate.not.found
                        type: string
                      message:
                        description: No such currency rate.
                        example: No such currency rate.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: vc.not.found
                        example: vc.not.found
                        type: string
                      message:
                        description: No such virtual currency.
                        example: No such virtual currency.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.failed.transaction.failed
                        example: withdrawal.failed.transaction.failed
                        type: string
                      message:
                        description: 'Unable to store withdrawal, it is impossible to create transaction.'
                        example: 'Unable to store withdrawal, it is impossible to create transaction.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.account.virtual
                        example: withdrawal.account.virtual
                        type: string
                      message:
                        description: Sender account cannot be virtual.
                        example: Sender account cannot be virtual.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: offchain.not.supported
                        example: offchain.not.supported
                        type: string
                      message:
                        description: 'Offchain not supported for account with ${account.currency} currency.'
                        example: 'Offchain not supported for account with ${account.currency} currency.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.format
                        example: amount.format
                        type: string
                      message:
                        description: Amount has incorrect format.
                        example: Amount has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.not.exists
                        example: senderAccount.not.exists
                        type: string
                      message:
                        description: 'Unable to find sender account ${transaction.senderAccountId}.'
                        example: 'Unable to find sender account ${transaction.senderAccountId}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.customer.disabled
                        example: senderAccount.customer.disabled
                        type: string
                      message:
                        description: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        example: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: balance.insufficient
                        example: balance.insufficient
                        type: string
                      message:
                        description: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        example: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.frozen
                        example: senderAccount.frozen
                        type: string
                      message:
                        description: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        example: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.pending
                        example: withdrawal.pending
                        type: string
                      message:
                        description: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        example: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
      summary: Send SOL from Tatum ledger to blockchain
      tags:
        - Offchain withdrawal
  /v3/offchain/xlm/transfer:
    post:
      description: |
        <h4>10 credits per API call.</h4><br/><p>
        <p>Send XLM or XLM-based Assets from account to account. This will create Tatum internal withdrawal request with ID. When every system works as expected,
        withdrawal request is marked as complete and transaction id is assigned to it.
        <ul>
        <li>If XLM server connection is unavailable, withdrawal request is cancelled.</li>
        <li>If blockchain transfer is successful, but is it not possible to reach Tatum, transaction id of blockchain transaction is returned and withdrawal request must be completed manually, otherwise all other withdrawals will be pending.</li>
        </ul>
        It is possible to perform ledger to blockchain transaction for ledger accounts without blockchain address assigned to them.<br/>
        This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.
        No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and losing funds. In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages.
        </p>
      operationId: XlmTransfer
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 61b3bffddfb389cde19c73be
                      type: string
                    fromAccount:
                      description: Blockchain account to send from
                      example: GBRPYHIL2CI3FNQ4BXLFMNDLFJUNPU2HY3ZMFSHONUCEOASW7QC7OX2H
                      maxLength: 56
                      minLength: 56
                      type: string
                    address:
                      description: Blockchain address to send assets
                      example: GBRPYHIL2CI3FNQ4BXLFMNDLFJUNPU2HY3ZMFSHONUCEOASW7QC7OX2H
                      maxLength: 56
                      minLength: 56
                      type: string
                    amount:
                      description: 'Amount to be sent, in XLM or XLM-based Asset.'
                      maxLength: 38
                      example: '10000'
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                      type: string
                    secret:
                      maxLength: 56
                      minLength: 56
                      description: 'Secret for account. Secret, or signature Id must be present.'
                      example: SCVVKNLBHOWBNJYHD3CNROOA2P3K35I5GNTYUHLLMUHMHWQYNEI7LVED
                      type: string
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    attr:
                      description: 'Short message to recipient. Usually used as an account discriminator. It can be either 28 characters long ASCII text, 64 characters long HEX string or uint64 number. When using as an account disciminator in Tatum Offchain ledger, can be in format of destination_acc|source_acc.'
                      example: '12355'
                      pattern: '^[ -~]{0,64}$'
                      type: string
                      maxLength: 64
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account.
                      example: Sender note
                      type: string
                  required:
                    - fromAccount
                    - senderAccountId
                    - address
                    - secret
                    - amount
                - type: object
                  properties:
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 61b3bffddfb389cde19c73be
                      type: string
                    fromAccount:
                      description: Blockchain account to send from
                      example: GBRPYHIL2CI3FNQ4BXLFMNDLFJUNPU2HY3ZMFSHONUCEOASW7QC7OX2H
                      maxLength: 56
                      minLength: 56
                      type: string
                    address:
                      description: Blockchain address to send assets
                      example: GBRPYHIL2CI3FNQ4BXLFMNDLFJUNPU2HY3ZMFSHONUCEOASW7QC7OX2H
                      maxLength: 56
                      minLength: 56
                      type: string
                    amount:
                      description: 'Amount to be sent, in XLM or XLM-based Asset.'
                      maxLength: 38
                      example: '10000'
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                      type: string
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: 'Identifier of the secret associated in signing application. Secret, or signature Id must be present.'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    attr:
                      description: 'Short message to recipient. Usually used as an account discriminator. It can be either 28 characters long ASCII text, 64 characters long HEX string or uint64 number. When using as an account disciminator in Tatum Offchain ledger, can be in format of destination_acc|source_acc.'
                      example: '12355'
                      pattern: '^[ -~]{0,64}$'
                      type: string
                      maxLength: 64
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account.
                      example: Sender note
                      type: string
                  required:
                    - fromAccount
                    - senderAccountId
                    - address
                    - amount
                    - signatureId
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      id:
                        description: 'ID of withdrawal. If transaction is not valid in blockchain, use this id to cancel withdrawal.'
                        example: 5e68c66581f2ee32bc354087
                        type: string
                      txId:
                        description: TX hash of successful transaction.
                        example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
                        type: string
                      completed:
                        description: 'Whethet withdrawal was completed in Tatum''s internal ledger. If not, it must be done manually.'
                        example: true
                        type: boolean
                    required:
                      - txId
                      - id
                      - completed
                  - type: object
                    properties:
                      signatureId:
                        description: 'ID of prepared payment template to sign. This is should be stored on a client side to retrieve ID of the blockchain transaction, when signing application signs the transaction and broadcasts it to the blockchain.'
                        example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
                        format: uuid
                        type: string
                    required:
                      - id
                      - signatureId
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: xlm.failed
                        example: xlm.failed
                        type: string
                      message:
                        description: 'Unable to communicate with blockchain. ${error}'
                        example: 'Unable to communicate with blockchain. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: xlm.tx.failed
                        example: xlm.tx.failed
                        type: string
                      message:
                        description: 'Unable to construct transaction. ${error}'
                        example: 'Unable to construct transaction. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: rate.not.found
                        example: rate.not.found
                        type: string
                      message:
                        description: No such currency rate.
                        example: No such currency rate.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: vc.not.found
                        example: vc.not.found
                        type: string
                      message:
                        description: No such virtual currency.
                        example: No such virtual currency.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.failed.transaction.failed
                        example: withdrawal.failed.transaction.failed
                        type: string
                      message:
                        description: 'Unable to store withdrawal, it is impossible to create transaction.'
                        example: 'Unable to store withdrawal, it is impossible to create transaction.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.account.virtual
                        example: withdrawal.account.virtual
                        type: string
                      message:
                        description: Sender account cannot be virtual.
                        example: Sender account cannot be virtual.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: offchain.not.supported
                        example: offchain.not.supported
                        type: string
                      message:
                        description: 'Offchain not supported for account with ${account.currency} currency.'
                        example: 'Offchain not supported for account with ${account.currency} currency.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.format
                        example: amount.format
                        type: string
                      message:
                        description: Amount has incorrect format.
                        example: Amount has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.not.exists
                        example: senderAccount.not.exists
                        type: string
                      message:
                        description: 'Unable to find sender account ${transaction.senderAccountId}.'
                        example: 'Unable to find sender account ${transaction.senderAccountId}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.customer.disabled
                        example: senderAccount.customer.disabled
                        type: string
                      message:
                        description: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        example: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: balance.insufficient
                        example: balance.insufficient
                        type: string
                      message:
                        description: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        example: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.frozen
                        example: senderAccount.frozen
                        type: string
                      message:
                        description: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        example: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.pending
                        example: withdrawal.pending
                        type: string
                      message:
                        description: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        example: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
      summary: Send XLM / Asset from Tatum ledger to blockchain
      tags:
        - Offchain withdrawal
  /v3/offchain/terra/transfer:
    post:
      description: |
        <h4>10 credits per API call.</h4><br/><p>
        <p>Send LUNA, KRW or USD from virtual account to blockchain. This will create Tatum internal withdrawal request with ID. When every system works as expected,
        withdrawal request is marked as complete and transaction id is assigned to it.
        <ul>
        <li>If Terra server connection is unavailable, withdrawal request is cancelled.</li>
        <li>If blockchain transfer is successful, but is it not possible to reach Tatum, transaction id of blockchain transaction is returned and withdrawal request must be
        completed manually, otherwise all other withdrawals will be pending.</li>
        </ul>
        It is possible to perform ledger to blockchain transaction for ledger accounts without blockchain address assigned to them.<br/>
        This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.
        No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and losing funds. In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages.
        </p>
      operationId: TerraTransfer
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 61b3bffddfb389cde19c73be
                      type: string
                    address:
                      description: Blockchain address to send assets
                      example: terra1fex9f78reuwhfsnc8sun6mz8rl9zwqh03fhwf3
                      maxLength: 44
                      minLength: 44
                      type: string
                    amount:
                      description: 'Amount to be sent, in LUNA, LUNA_USD or LUNA_KRW.'
                      maxLength: 38
                      example: '10000'
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                      type: string
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    attr:
                      description: 'Memo of the recipient account, if any.'
                      example: '12355'
                      type: string
                    fee:
                      description: Fee to be charged for the operation. This fee will be charged on top of the withdrawal amount to the virtual account.
                      maxLength: 38
                      example: '0.002'
                      default: '0.002'
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                      type: string
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    fromPrivateKey:
                      type: string
                      maxLength: 64
                      minLength: 64
                      example: 42833dd2c36df40d5e4f0ba525d665a25103fc8e01ef86a9d962941855b9902c
                      description: Private key of sender address.
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account.
                      example: Sender note
                      type: string
                  required:
                    - senderAccountId
                    - address
                    - amount
                    - fromPrivateKey
                - type: object
                  properties:
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 61b3bffddfb389cde19c73be
                      type: string
                    address:
                      description: Blockchain address to send assets
                      example: terra1fex9f78reuwhfsnc8sun6mz8rl9zwqh03fhwf3
                      maxLength: 44
                      minLength: 44
                      type: string
                    amount:
                      description: 'Amount to be sent, in LUNA, LUNA_USD or LUNA_KRW.'
                      maxLength: 38
                      example: '10000'
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                      type: string
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    attr:
                      description: 'Memo of the recipient account, if any.'
                      example: '12355'
                      type: string
                    fee:
                      description: Fee to be charged for the operation. This fee will be charged on top of the withdrawal amount to the virtual account.
                      maxLength: 38
                      example: '0.002'
                      default: '0.002'
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                      type: string
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: 'Identifier of the secret associated in signing application. Secret, or signature Id must be present.'
                    fromAddress:
                      description: Blockchain address to send from.
                      example: tbnb1q82g2h9q0kfe7sysnj5w7nlak92csfjztymp39
                      maxLength: 50
                      minLength: 42
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account.
                      example: Sender note
                      type: string
                  required:
                    - senderAccountId
                    - fromAddress
                    - address
                    - amount
                    - signatureId
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      id:
                        description: 'ID of withdrawal. If transaction is not valid in blockchain, use this id to cancel withdrawal.'
                        example: 5e68c66581f2ee32bc354087
                        type: string
                      txId:
                        description: TX hash of successful transaction.
                        example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
                        type: string
                      completed:
                        description: 'Whethet withdrawal was completed in Tatum''s internal ledger. If not, it must be done manually.'
                        example: true
                        type: boolean
                    required:
                      - txId
                      - id
                      - completed
                  - type: object
                    properties:
                      signatureId:
                        description: 'ID of prepared payment template to sign. This is should be stored on a client side to retrieve ID of the blockchain transaction, when signing application signs the transaction and broadcasts it to the blockchain.'
                        example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
                        format: uuid
                        type: string
                    required:
                      - id
                      - signatureId
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: terra.failed
                        example: terra.failed
                        type: string
                      message:
                        description: 'Unable to communicate with blockchain. ${error}'
                        example: 'Unable to communicate with blockchain. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: rate.not.found
                        example: rate.not.found
                        type: string
                      message:
                        description: No such currency rate.
                        example: No such currency rate.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: vc.not.found
                        example: vc.not.found
                        type: string
                      message:
                        description: No such virtual currency.
                        example: No such virtual currency.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.failed.transaction.failed
                        example: withdrawal.failed.transaction.failed
                        type: string
                      message:
                        description: 'Unable to store withdrawal, it is impossible to create transaction.'
                        example: 'Unable to store withdrawal, it is impossible to create transaction.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.account.virtual
                        example: withdrawal.account.virtual
                        type: string
                      message:
                        description: Sender account cannot be virtual.
                        example: Sender account cannot be virtual.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: offchain.not.supported
                        example: offchain.not.supported
                        type: string
                      message:
                        description: 'Offchain not supported for account with ${account.currency} currency.'
                        example: 'Offchain not supported for account with ${account.currency} currency.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.format
                        example: amount.format
                        type: string
                      message:
                        description: Amount has incorrect format.
                        example: Amount has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.not.exists
                        example: senderAccount.not.exists
                        type: string
                      message:
                        description: 'Unable to find sender account ${transaction.senderAccountId}.'
                        example: 'Unable to find sender account ${transaction.senderAccountId}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.customer.disabled
                        example: senderAccount.customer.disabled
                        type: string
                      message:
                        description: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        example: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: balance.insufficient
                        example: balance.insufficient
                        type: string
                      message:
                        description: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        example: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.frozen
                        example: senderAccount.frozen
                        type: string
                      message:
                        description: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        example: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.pending
                        example: withdrawal.pending
                        type: string
                      message:
                        description: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        example: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
      summary: Send LUNA from Tatum ledger to blockchain
      tags:
        - Offchain withdrawal
  /v3/offchain/xrp/transfer:
    post:
      description: |
        <h4>10 credits per API call.</h4><br/><p>
        <p>Send XRP from account to account. This will create Tatum internal withdrawal request with ID. When every system works as expected,
        withdrawal request is marked as complete and transaction id is assigned to it.
        <ul>
        <li>If XRP server connection is unavailable, withdrawal request is cancelled.</li>
        <li>If blockchain transfer is successful, but is it not possible to reach Tatum, transaction id of blockchain transaction is returned and withdrawal request must be
        completed manually, otherwise all other withdrawals will be pending.</li>
        </ul>
        It is possible to perform ledger to blockchain transaction for ledger accounts without blockchain address assigned to them.<br/>
        This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.
        No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and losing funds. In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages.
        </p>
      operationId: XrpTransfer
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 61b3bffddfb389cde19c73be
                      type: string
                    account:
                      maxLength: 100
                      minLength: 1
                      description: XRP account address. Must be the one used for generating deposit tags.
                      example: rPRxSZzTFd6Yez3UMxFUPJvnhUhjewpjfV
                      type: string
                    address:
                      description: Blockchain address to send assets
                      example: rPRxSZzTFd6Yez3UMxFUPJvnhUhjewpjfV
                      maxLength: 100
                      minLength: 1
                      type: string
                    amount:
                      description: 'Amount to be sent, in XRP.'
                      maxLength: 38
                      example: '10000'
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                      type: string
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    attr:
                      description: 'Destination tag of the recipient account, if any. Must be stringified uint32.'
                      example: '12355'
                      type: string
                    sourceTag:
                      description: 'Source tag of sender account, if any.'
                      example: 12355
                      type: integer
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    secret:
                      maxLength: 29
                      minLength: 29
                      description: 'Secret for account. Secret, or signature Id must be present.'
                      example: snSFTHdvSYQKKkYntvEt8cnmZuPJB
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account.
                      example: Sender note
                      type: string
                  required:
                    - account
                    - senderAccountId
                    - address
                    - amount
                    - secret
                - type: object
                  properties:
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 61b3bffddfb389cde19c73be
                      type: string
                    account:
                      maxLength: 100
                      minLength: 1
                      description: XRP account address. Must be the one used for generating deposit tags.
                      example: rPRxSZzTFd6Yez3UMxFUPJvnhUhjewpjfV
                      type: string
                    address:
                      description: Blockchain address to send assets
                      example: rPRxSZzTFd6Yez3UMxFUPJvnhUhjewpjfV
                      maxLength: 100
                      minLength: 1
                      type: string
                    amount:
                      description: 'Amount to be sent, in XRP.'
                      maxLength: 38
                      example: '10000'
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                      type: string
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    attr:
                      description: 'Destination tag of the recipient account, if any. Must be stringified uint32.'
                      example: '12355'
                      type: string
                    sourceTag:
                      description: 'Source tag of sender account, if any.'
                      example: 12355
                      type: integer
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: 'Identifier of the secret associated in signing application. Secret, or signature Id must be present.'
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account.
                      example: Sender note
                      type: string
                  required:
                    - account
                    - senderAccountId
                    - address
                    - signatureId
                    - amount
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      id:
                        description: 'ID of withdrawal. If transaction is not valid in blockchain, use this id to cancel withdrawal.'
                        example: 5e68c66581f2ee32bc354087
                        type: string
                      txId:
                        description: TX hash of successful transaction.
                        example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
                        type: string
                      completed:
                        description: 'Whethet withdrawal was completed in Tatum''s internal ledger. If not, it must be done manually.'
                        example: true
                        type: boolean
                    required:
                      - txId
                      - id
                      - completed
                  - type: object
                    properties:
                      signatureId:
                        description: 'ID of prepared payment template to sign. This is should be stored on a client side to retrieve ID of the blockchain transaction, when signing application signs the transaction and broadcasts it to the blockchain.'
                        example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
                        format: uuid
                        type: string
                    required:
                      - id
                      - signatureId
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: xrp.failed
                        example: xrp.failed
                        type: string
                      message:
                        description: 'Unable to communicate with blockchain. ${error}'
                        example: 'Unable to communicate with blockchain. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: attr.wrong.format
                        example: attr.wrong.format
                        type: string
                      message:
                        description: 'Wrong attr of withdrawal, should be of uint32 type.'
                        example: 'Wrong attr of withdrawal, should be of uint32 type.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: xrp.broadcast.failed
                        example: xrp.broadcast.failed
                        type: string
                      message:
                        description: 'Xrp submit tx failed. ${error}'
                        example: 'Xrp submit tx failed. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: xrp.fee
                        example: xrp.fee
                        type: string
                      message:
                        description: Unable to calculate fee.
                        example: Unable to calculate fee.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: xrp.sign.failed
                        example: xrp.sign.failed
                        type: string
                      message:
                        description: 'Unable to sign tx. ${error}'
                        example: 'Unable to sign tx. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: xrp.account.failed
                        example: xrp.account.failed
                        type: string
                      message:
                        description: '${error} Code: ${code}'
                        example: '${error} Code: ${code}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: rate.not.found
                        example: rate.not.found
                        type: string
                      message:
                        description: No such currency rate.
                        example: No such currency rate.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: vc.not.found
                        example: vc.not.found
                        type: string
                      message:
                        description: No such virtual currency.
                        example: No such virtual currency.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.failed.transaction.failed
                        example: withdrawal.failed.transaction.failed
                        type: string
                      message:
                        description: 'Unable to store withdrawal, it is impossible to create transaction.'
                        example: 'Unable to store withdrawal, it is impossible to create transaction.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.account.virtual
                        example: withdrawal.account.virtual
                        type: string
                      message:
                        description: Sender account cannot be virtual.
                        example: Sender account cannot be virtual.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: offchain.not.supported
                        example: offchain.not.supported
                        type: string
                      message:
                        description: 'Offchain not supported for account with ${account.currency} currency.'
                        example: 'Offchain not supported for account with ${account.currency} currency.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.format
                        example: amount.format
                        type: string
                      message:
                        description: Amount has incorrect format.
                        example: Amount has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.not.exists
                        example: senderAccount.not.exists
                        type: string
                      message:
                        description: 'Unable to find sender account ${transaction.senderAccountId}.'
                        example: 'Unable to find sender account ${transaction.senderAccountId}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.customer.disabled
                        example: senderAccount.customer.disabled
                        type: string
                      message:
                        description: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        example: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: balance.insufficient
                        example: balance.insufficient
                        type: string
                      message:
                        description: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        example: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.frozen
                        example: senderAccount.frozen
                        type: string
                      message:
                        description: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        example: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.pending
                        example: withdrawal.pending
                        type: string
                      message:
                        description: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        example: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
      summary: Send XRP from Tatum ledger to blockchain
      tags:
        - Offchain withdrawal
  /v3/offchain/bnb/transfer:
    post:
      description: |
        <h4>10 credits per API call.</h4><br/><p>
        <p>Send BNB or BNB Asset from account to blockchain. This will create Tatum internal withdrawal request with ID. When every system works as expected,
        withdrawal request is marked as complete and transaction id is assigned to it.
        <ul>
        <li>If BNB server connection is unavailable, withdrawal request is cancelled.</li>
        <li>If blockchain transfer is successful, but is it not possible to reach Tatum, transaction id of blockchain transaction is returned and withdrawal request must be
        completed manually, otherwise all other withdrawals will be pending.</li>
        </ul>
        It is possible to perform ledger to blockchain transaction for ledger accounts without blockchain address assigned to them.<br/>
        This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.
        No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and losing funds. In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages.
        </p>
      operationId: BnbTransfer
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 61b3bffddfb389cde19c73be
                      type: string
                    address:
                      description: Blockchain address to send assets
                      example: tbnb1q82g2h9q0kfe7sysnj5w7nlak92csfjztymp39
                      maxLength: 100
                      minLength: 1
                      type: string
                    amount:
                      description: 'Amount to be sent, in BNB.'
                      maxLength: 38
                      example: '10000'
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                      type: string
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    attr:
                      description: 'Memo of the recipient account, if any.'
                      example: '12355'
                      type: string
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    fromPrivateKey:
                      type: string
                      maxLength: 64
                      minLength: 64
                      example: 8ac4b14b38d8a5af58019088ce5a24b764536bccd1981cf79d3e09e9d1f2ad31
                      description: Private key of sender address.
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account.
                      example: Sender note
                      type: string
                  required:
                    - senderAccountId
                    - address
                    - amount
                    - fromPrivateKey
                - type: object
                  properties:
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 61b3bffddfb389cde19c73be
                      type: string
                    address:
                      description: Blockchain address to send assets
                      example: tbnb1q82g2h9q0kfe7sysnj5w7nlak92csfjztymp39
                      maxLength: 100
                      minLength: 1
                      type: string
                    amount:
                      description: 'Amount to be sent, in BNB.'
                      maxLength: 38
                      example: '10000'
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                      type: string
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    attr:
                      description: 'Memo of the recipient account, if any.'
                      example: '12355'
                      type: string
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: 'Identifier of the secret associated in signing application. Secret, or signature Id must be present.'
                    fromAddress:
                      description: Blockchain address to send from.
                      example: tbnb1q82g2h9q0kfe7sysnj5w7nlak92csfjztymp39
                      maxLength: 50
                      minLength: 42
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account.
                      example: Sender note
                      type: string
                  required:
                    - senderAccountId
                    - fromAddress
                    - address
                    - amount
                    - signatureId
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      id:
                        description: 'ID of withdrawal. If transaction is not valid in blockchain, use this id to cancel withdrawal.'
                        example: 5e68c66581f2ee32bc354087
                        type: string
                      txId:
                        description: TX hash of successful transaction.
                        example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
                        type: string
                      completed:
                        description: 'Whethet withdrawal was completed in Tatum''s internal ledger. If not, it must be done manually.'
                        example: true
                        type: boolean
                    required:
                      - txId
                      - id
                      - completed
                  - type: object
                    properties:
                      signatureId:
                        description: 'ID of prepared payment template to sign. This is should be stored on a client side to retrieve ID of the blockchain transaction, when signing application signs the transaction and broadcasts it to the blockchain.'
                        example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
                        format: uuid
                        type: string
                    required:
                      - id
                      - signatureId
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: bnb.failed
                        example: bnb.failed
                        type: string
                      message:
                        description: 'Unable to communicate with blockchain. ${error}'
                        example: 'Unable to communicate with blockchain. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: Address.bnb.generation.failed.wrong.xpub
                        example: address.bnb.generation.failed.wrong.xpub
                        type: string
                      message:
                        description: 'Unable to generate BNB address, wrong xpub and account type.'
                        example: 'Unable to generate BNB address, wrong xpub and account type.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: bnb.broadcast.bad.signature
                        example: bnb.broadcast.bad.signature
                        type: string
                      message:
                        description: 'Unable to broadcast BNB transaction, bad signature.'
                        example: 'Unable to broadcast BNB transaction, bad signature.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: bnb.broadcast.failed.tx.state
                        example: bnb.broadcast.failed.tx.state
                        type: string
                      message:
                        description: 'Unable to broadcast BNB transaction, tx ${hash} state not OK.'
                        example: 'Unable to broadcast BNB transaction, tx ${hash} state not OK.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: bnb.transfer.failed
                        example: bnb.transfer.failed
                        type: string
                      message:
                        description: 'Unable to transfer funds. ${error}'
                        example: 'Unable to transfer funds. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: rate.not.found
                        example: rate.not.found
                        type: string
                      message:
                        description: No such currency rate.
                        example: No such currency rate.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: vc.not.found
                        example: vc.not.found
                        type: string
                      message:
                        description: No such virtual currency.
                        example: No such virtual currency.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.failed.transaction.failed
                        example: withdrawal.failed.transaction.failed
                        type: string
                      message:
                        description: 'Unable to store withdrawal, it is impossible to create transaction.'
                        example: 'Unable to store withdrawal, it is impossible to create transaction.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.account.virtual
                        example: withdrawal.account.virtual
                        type: string
                      message:
                        description: Sender account cannot be virtual.
                        example: Sender account cannot be virtual.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: offchain.not.supported
                        example: offchain.not.supported
                        type: string
                      message:
                        description: 'Offchain not supported for account with ${account.currency} currency.'
                        example: 'Offchain not supported for account with ${account.currency} currency.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.format
                        example: amount.format
                        type: string
                      message:
                        description: Amount has incorrect format.
                        example: Amount has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.not.exists
                        example: senderAccount.not.exists
                        type: string
                      message:
                        description: 'Unable to find sender account ${transaction.senderAccountId}.'
                        example: 'Unable to find sender account ${transaction.senderAccountId}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.customer.disabled
                        example: senderAccount.customer.disabled
                        type: string
                      message:
                        description: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        example: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: balance.insufficient
                        example: balance.insufficient
                        type: string
                      message:
                        description: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        example: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.frozen
                        example: senderAccount.frozen
                        type: string
                      message:
                        description: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        example: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.pending
                        example: withdrawal.pending
                        type: string
                      message:
                        description: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        example: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
      summary: Send BNB from Tatum ledger to blockchain
      tags:
        - Offchain withdrawal
  /v3/offchain/ada/transfer:
    post:
      description: |
        <h4>10 credits per API call.</h4><br/><p>Send ADA asset from Tatum Ledger to account. This will create Tatum internal withdrawal request with ID. If every system works as expected, withdrawal request is marked as complete and transaction id is assigned to it.
        <ul>
        <li>If ADA server connection is unavailable, withdrawal request is cancelled.</li>
        <li>If blockchain transfer is successful, but is it not possible to reach Tatum, transaction id of blockchain transaction is returned and withdrawal request must be completed manually, otherwise all other withdrawals will be pending.</li>
        </ul>
        It is possible to perform ledger to blockchain transaction for ledger accounts without blockchain address assigned to them.<br/>
        This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.
        No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and losing funds. In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages.
        </p>
      operationId: AdaTransferOffchain
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - properties:
                    senderAccountId:
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      maxLength: 24
                      minLength: 24
                      type: string
                    address:
                      description: Blockchain address to send assets to.
                      example: mpTwPdF8up9kidgcAStriUPwRdnE9MRAg7
                      maxLength: 150
                      minLength: 1
                      type: string
                    amount:
                      description: Amount to be withdrawn to blockchain.
                      maxLength: 38
                      example: '0.001'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    fee:
                      description: 'Fee to be submitted as a transaction fee to blockchain. If none is set, default value of 0.5 ADA is used.'
                      example: '0.5'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    keyPair:
                      description: |
                        Array of assigned blockchain addresses with their private keys.
                        Either mnemonic, keyPair or signature Id must be present - depends on the type of account and xpub.
                        Tatum KMS does not support keyPair type of off-chain transaction, only mnemonic based.
                      type: array
                      items:
                        type: object
                        properties:
                          address:
                            type: string
                            description: Blockchain address assigned to account withdrawal is made from.
                            maxLength: 150
                            minLength: 30
                          privateKey:
                            type: string
                            description: Private key of blockchain address.
                            maxLength: 192
                            example: 7808a501e1bbc9926ac8ac6981e47cb0401288ae331a1f2333d1bed46c5b3051b5f875c39477b05bc3a43a3800b763f616ae3646f21df0ab5d95db944e71f5cfa8082d5c4e6241d49b17b2b6173f01bb3fd03be012cc8908ceea9e559e33e4fc
                            minLength: 192
                    attr:
                      description: Used to parametrize withdrawal as a change address for left coins from transaction. XPub or attr must be used.
                      maxLength: 256
























                      minLength: 1

                      type: string
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderNote:
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      maxLength: 500
                      minLength: 1
                      type: string
                  required:
                    - amount
                    - senderAccountId
                    - address
                    - keyPair
                    - attr
                  type: object
                  title: keyPair
                - type: object
                  title: mnemonic
                  properties:
                    address:
                      description: Blockchain address to send assets
                      example: addr1qyyxyhaa2e7kxeqcc72w7f747zqlgwwwstlzsg9umuxc40wnhawldxl4nan95rhtlcnju9q2r8j9qz8vslwsmrkj5r4spxhep9
                      type: string
                    amount:
                      description: Amount to be sent in ADA.
                      maxLength: 38
                      example: '100000'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    fee:
                      description: 'Fee to be submitted as a transaction fee to blockchain. If none is set, default value of 1 ADA is used.'
                      example: '2.5'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    index:
                      description: Derivation index of sender address.
                      maximum: 2147483647
                      example: 0
                      type: integer
                    mnemonic:
                      maxLength: 500
                      minLength: 1
                      description: 'Mnemonic to generate private key for sender address. Either mnemonic and index, privateKey or signature Id must be present - depends on the type of account and xpub.'
                      example: urge pulp usage sister evidence arrest palm math please chief egg abuse
                      type: string
                    xpub:
                      description: 'Extended public key (xpub) of the wallet associated with the accounts. Should be present, when mnemonic is used.'
                      maxLength: 192
                      minLength: 1
                      example: 41253768cd7c5831988e580cfc7eeecaa78bf52a1ede2bd2f245406605adfbadd5911ab567bc3dc7713e29c2c14bb898b24bb1f01a4992605343ad14703037b9
                      type: string
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      type: string
                  required:
                    - senderAccountId
                    - address
                    - amount
                    - mnemonic
                    - xpub
                    - index
                - type: object
                  title: signature
                  properties:
                    address:
                      description: Blockchain address to send assets to
                      example: addr1qyyxyhaa2e7kxeqcc72w7f747zqlgwwwstlzsg9umuxc40wnhawldxl4nan95rhtlcnju9q2r8j9qz8vslwsmrkj5r4spxhep9
                      type: string
                    amount:
                      description: Amount to be sent in ADA.
                      maxLength: 38
                      example: '100000'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    fee:
                      description: 'Fee to be submitted as a transaction fee to blockchain. If none is set, default value of 1 ADA is used.'
                      example: '2.5'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    from:
                      description: Blockchain address to send assets from
                      example: addr1qyyxyhaa2e7kxeqcc72w7f747zqlgwwwstlzsg9umuxc40wnhawldxl4nan95rhtlcnju9q2r8j9qz8vslwsmrkj5r4spxhep9
                      type: string
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: |
                        Identifier of the mnemonic / private key associated in signing application.
                        When hash identifies mnemonic, index must be present to represent specific account to pay from.
                        Private key, mnemonic or signature Id must be present.
                    xpub:
                      description: Extended public key (xpub) of the wallet associated with the accounts. XPub or attr must be used with signatureId.
                      maxLength: 192
                      minLength: 1
                      example: 41253768cd7c5831988e580cfc7eeecaa78bf52a1ede2bd2f245406605adfbadd5911ab567bc3dc7713e29c2c14bb898b24bb1f01a4992605343ad14703037b9
                      type: string
                    attr:
                      description: Used to parametrize withdrawal as a change address for left coins from transaction. XPub or attr must be used with signatureId.
                      maxLength: 256
                      minLength: 1
                      type: string
                    index:
                      description: Derivation index of sender address.
                      maximum: 2147483647
                      example: 0
                      type: integer
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      type: string
                  required:
                    - senderAccountId
                    - from
                    - address
                    - signatureId
                    - amount
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      id:
                        description: 'ID of withdrawal. If transaction is not valid in blockchain, use this id to cancel withdrawal.'
                        example: 5e68c66581f2ee32bc354087
                        type: string
                      txId:
                        description: TX hash of successful transaction.
                        example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
                        type: string
                      completed:
                        description: 'Whethet withdrawal was completed in Tatum''s internal ledger. If not, it must be done manually.'
                        example: true
                        type: boolean
                    required:
                      - txId
                      - id
                      - completed
                  - type: object
                    properties:
                      signatureId:
                        description: 'ID of prepared payment template to sign. This is should be stored on a client side to retrieve ID of the blockchain transaction, when signing application signs the transaction and broadcasts it to the blockchain.'
                        example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
                        format: uuid
                        type: string
                    required:
                      - id
                      - signatureId
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: withdrawal.missing
                        example: withdrawal.missing
                        type: string
                      message:
                        description: No such withdrawal.
                        example: No such withdrawal.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: rate.not.found
                        example: rate.not.found
                        type: string
                      message:
                        description: No such currency rate.
                        example: No such currency rate.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: vc.not.found
                        example: vc.not.found
                        type: string
                      message:
                        description: No such virtual currency.
                        example: No such virtual currency.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.recipient.format
                        example: withdrawal.recipient.format
                        type: string
                      message:
                        description: Recipient blockchain address has incorrect format.
                        example: Recipient blockchain address has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.failed.transaction.failed
                        example: withdrawal.failed.transaction.failed
                        type: string
                      message:
                        description: 'Unable to store withdrawal, it is impossible to create transaction.'
                        example: 'Unable to store withdrawal, it is impossible to create transaction.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.account.virtual
                        example: withdrawal.account.virtual
                        type: string
                      message:
                        description: Sender account cannot be virtual.
                        example: Sender account cannot be virtual.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: offchain.not.supported
                        example: offchain.not.supported
                        type: string
                      message:
                        description: 'Offchain not supported for account with ${account.currency} currency.'
                        example: 'Offchain not supported for account with ${account.currency} currency.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.format
                        example: amount.format
                        type: string
                      message:
                        description: Amount has incorrect format.
                        example: Amount has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: fee.format
                        example: fee.format
                        type: string
                      message:
                        description: Fee has incorrect format.
                        example: Fee has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.not.cancelled.transaction.failed
                        example: withdrawal.not.cancelled.transaction.failed
                        type: string
                      message:
                        description: 'Unable to broadcast transaction, and impossible to cancel withdrawal. ID is attached, "${withdrawalId}", cancel it manually.'
                        example: 'Unable to broadcast transaction, and impossible to cancel withdrawal. ID is attached, "${withdrawalId}", cancel it manually.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.prepare.failed
                        example: withdrawal.prepare.failed
                        type: string
                      message:
                        description: 'Unable to prepare transaction, withdrawal cancelled.'
                        example: 'Unable to prepare transaction, withdrawal cancelled.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.not.exists
                        example: senderAccount.not.exists
                        type: string
                      message:
                        description: 'Unable to find sender account ${transaction.senderAccountId}.'
                        example: 'Unable to find sender account ${transaction.senderAccountId}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.customer.disabled
                        example: senderAccount.customer.disabled
                        type: string
                      message:
                        description: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        example: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: balance.insufficient
                        example: balance.insufficient
                        type: string
                      message:
                        description: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        example: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.btc
                        example: amount.btc
                        type: string
                      message:
                        description: 'BTC|LTC|BCH payment amount must be at least 0.00000000000001, not ${transaction.amount}.'
                        example: 'BTC|LTC|BCH payment amount must be at least 0.00000000000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.eth
                        example: amount.eth
                        type: string
                      message:
                        description: 'ETH payment amount must be at least 0.000000000001, not ${transaction.amount}.'
                        example: 'ETH payment amount must be at least 0.000000000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.frozen
                        example: senderAccount.frozen
                        type: string
                      message:
                        description: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        example: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.pending
                        example: withdrawal.pending
                        type: string
                      message:
                        description: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        example: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
      summary: Send ADA from Tatum ledger to blockchain
      tags:
        - Offchain withdrawal
  /v3/offchain/tron/transfer:
    post:
      description: |
        <h4>10 credits per API call.</h4><br/><p>Send Tron or TRC asset from Tatum Ledger to account. This will create Tatum internal withdrawal request with ID. If every system works as expected, withdrawal request is marked as complete and transaction id is assigned to it.
        <ul>
        <li>If Tron server connection is unavailable, withdrawal request is cancelled.</li>
        <li>If blockchain transfer is successful, but is it not possible to reach Tatum, transaction id of blockchain transaction is returned and withdrawal request must be completed manually, otherwise all other withdrawals will be pending.</li>
        </ul>
        It is possible to perform ledger to blockchain transaction for ledger accounts without blockchain address assigned to them.<br/>
        This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.
        No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and losing funds. In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages.
        </p>
      operationId: TronTransferOffchain
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    address:
                      description: Blockchain address to send assets
                      example: TVAEYCmc15awaDRAjUZ1kvcHwQQaoPw2CW
                      maxLength: 34
                      minLength: 34
                      type: string
                    amount:
                      description: Amount to be sent in Tron.
                      maxLength: 38
                      example: '100000'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    fromPrivateKey:
                      type: string
                      maxLength: 64
                      minLength: 64
                      example: e75d702ce00987633f8009fbb1eabb5b187cb5b50fe9179a8d6cee6bab076b66
                      description: 'Private key of sender address. Either mnemonic and index, privateKey or signature Id must be present - depends on the type of account and xpub.'
                    fee:
                      description: 'Fee to be submitted as a transaction fee to blockchain. If none is set, default value of 2.5 TRX is used.'
                      example: '2.5'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      type: string
                  required:
                    - senderAccountId
                    - address
                    - amount
                    - fromPrivateKey
                - type: object
                  properties:
                    address:
                      description: Blockchain address to send assets
                      example: TVAEYCmc15awaDRAjUZ1kvcHwQQaoPw2CW
                      maxLength: 34
                      minLength: 34
                      type: string
                    amount:
                      description: Amount to be sent in Tron.
                      maxLength: 38
                      example: '100000'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    fee:
                      description: 'Fee to be submitted as a transaction fee to blockchain. If none is set, default value of 2.5 TRX is used.'
                      example: '2.5'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    index:
                      description: Derivation index of sender address.
                      maximum: 2147483647
                      example: 0
                      type: integer
                    mnemonic:
                      maxLength: 500
                      minLength: 1
                      description: 'Mnemonic to generate private key for sender address. Either mnemonic and index, privateKey or signature Id must be present - depends on the type of account and xpub.'
                      example: urge pulp usage sister evidence arrest palm math please chief egg abuse
                      type: string
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      type: string
                  required:
                    - senderAccountId
                    - address
                    - amount
                    - mnemonic
                    - index
                - type: object
                  properties:
                    address:
                      description: Blockchain address to send assets to
                      example: TVAEYCmc15awaDRAjUZ1kvcHwQQaoPw2CW
                      maxLength: 34
                      minLength: 34
                      type: string
                    amount:
                      description: Amount to be sent in Tron.
                      maxLength: 38
                      example: '100000'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    fee:
                      description: 'Fee to be submitted as a transaction fee to blockchain. If none is set, default value of 2.5 TRX is used.'
                      example: '2.5'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    from:
                      description: Blockchain address to send assets from
                      example: TVAEYCmc15awaDRAjUZ1kvcHwQQaoPw2CW
                      maxLength: 34
                      minLength: 34
                      type: string
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: |
                        Identifier of the mnemonic / private key associated in signing application.
                        When hash identifies mnemonic, index must be present to represent specific account to pay from.
                        Private key, mnemonic or signature Id must be present.
                    index:
                      description: Derivation index of sender address.
                      maximum: 2147483647
                      example: 0
                      type: integer
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      type: string
                  required:
                    - senderAccountId
                    - from
                    - address
                    - signatureId
                    - amount
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      id:
                        description: 'ID of withdrawal. If transaction is not valid in blockchain, use this id to cancel withdrawal.'
                        example: 5e68c66581f2ee32bc354087
                        type: string
                      txId:
                        description: TX hash of successful transaction.
                        example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
                        type: string
                      completed:
                        description: 'Whethet withdrawal was completed in Tatum''s internal ledger. If not, it must be done manually.'
                        example: true
                        type: boolean
                    required:
                      - txId
                      - id
                      - completed
                  - type: object
                    properties:
                      signatureId:
                        description: 'ID of prepared payment template to sign. This is should be stored on a client side to retrieve ID of the blockchain transaction, when signing application signs the transaction and broadcasts it to the blockchain.'
                        example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
                        format: uuid
                        type: string
                    required:
                      - id
                      - signatureId
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: withdrawal.missing
                        example: withdrawal.missing
                        type: string
                      message:
                        description: No such withdrawal.
                        example: No such withdrawal.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: rate.not.found
                        example: rate.not.found
                        type: string
                      message:
                        description: No such currency rate.
                        example: No such currency rate.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: vc.not.found
                        example: vc.not.found
                        type: string
                      message:
                        description: No such virtual currency.
                        example: No such virtual currency.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.recipient.format
                        example: withdrawal.recipient.format
                        type: string
                      message:
                        description: Recipient blockchain address has incorrect format.
                        example: Recipient blockchain address has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.failed.transaction.failed
                        example: withdrawal.failed.transaction.failed
                        type: string
                      message:
                        description: 'Unable to store withdrawal, it is impossible to create transaction.'
                        example: 'Unable to store withdrawal, it is impossible to create transaction.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.account.virtual
                        example: withdrawal.account.virtual
                        type: string
                      message:
                        description: Sender account cannot be virtual.
                        example: Sender account cannot be virtual.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: offchain.not.supported
                        example: offchain.not.supported
                        type: string
                      message:
                        description: 'Offchain not supported for account with ${account.currency} currency.'
                        example: 'Offchain not supported for account with ${account.currency} currency.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.format
                        example: amount.format
                        type: string
                      message:
                        description: Amount has incorrect format.
                        example: Amount has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: fee.format
                        example: fee.format
                        type: string
                      message:
                        description: Fee has incorrect format.
                        example: Fee has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.not.cancelled.transaction.failed
                        example: withdrawal.not.cancelled.transaction.failed
                        type: string
                      message:
                        description: 'Unable to broadcast transaction, and impossible to cancel withdrawal. ID is attached, "${withdrawalId}", cancel it manually.'
                        example: 'Unable to broadcast transaction, and impossible to cancel withdrawal. ID is attached, "${withdrawalId}", cancel it manually.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.prepare.failed
                        example: withdrawal.prepare.failed
                        type: string
                      message:
                        description: 'Unable to prepare transaction, withdrawal cancelled.'
                        example: 'Unable to prepare transaction, withdrawal cancelled.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.not.exists
                        example: senderAccount.not.exists
                        type: string
                      message:
                        description: 'Unable to find sender account ${transaction.senderAccountId}.'
                        example: 'Unable to find sender account ${transaction.senderAccountId}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.customer.disabled
                        example: senderAccount.customer.disabled
                        type: string
                      message:
                        description: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        example: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: balance.insufficient
                        example: balance.insufficient
                        type: string
                      message:
                        description: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        example: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.btc
                        example: amount.btc
                        type: string
                      message:
                        description: 'BTC|LTC|BCH payment amount must be at least 0.00000000000001, not ${transaction.amount}.'
                        example: 'BTC|LTC|BCH payment amount must be at least 0.00000000000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.eth
                        example: amount.eth
                        type: string
                      message:
                        description: 'ETH payment amount must be at least 0.000000000001, not ${transaction.amount}.'
                        example: 'ETH payment amount must be at least 0.000000000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.frozen
                        example: senderAccount.frozen
                        type: string
                      message:
                        description: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        example: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.pending
                        example: withdrawal.pending
                        type: string
                      message:
                        description: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        example: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: private.mnemonic.missing
                        example: private.mnemonic.missing
                        type: string
                      message:
                        description: Either mnemonic and index or private key must be present.
                        example: Either mnemonic and index or private key must be present.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.erc20.unsupported
                        example: eth.erc20.unsupported
                        type: string
                      message:
                        description: Unsupported ETH ERC20 blockchain.
                        example: Unsupported ETH ERC20 blockchain.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: ethereum.broadcast.failed
                        example: ethereum.broadcast.failed
                        type: string
                      message:
                        description: 'Unable to broadcast transaction due to ${error}.'
                        example: 'Unable to broadcast transaction due to ${error}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: gas.price.failed
                        example: gas.price.failed
                        type: string
                      message:
                        description: Unable to obtain current GAS price.
                        example: Unable to obtain current GAS price.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: ethereum.transaction.body
                        example: ethereum.transaction.body
                        type: string
                      message:
                        description: 'Either currency, or tokenAddress must be defined.'
                        example: 'Either currency, or tokenAddress must be defined.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.transaction.gas
                        example: eth.transaction.gas
                        type: string
                      message:
                        description: 'Unable to calculate gas limit for transaction. ${error}'
                        example: 'Unable to calculate gas limit for transaction. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.transaction.hash
                        example: eth.transaction.hash
                        type: string
                      message:
                        description: 'Unable to calculate transaction hash. ${error}'
                        example: 'Unable to calculate transaction hash. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.transaction.sign
                        example: eth.transaction.sign
                        type: string
                      message:
                        description: 'Unable to sign transaction. ${error}'
                        example: 'Unable to sign transaction. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
      summary: Send Tron or TRC asset from Tatum ledger to blockchain
      tags:
        - Offchain withdrawal
  /v3/offchain/egld/transfer:
    post:
      description: |
        <h4>4 credits per API call.</h4><br/>
        <p>Send EGLD from Tatum Ledger to account. This will create Tatum internal withdrawal request with ID. If every system works as expected, withdrawal request is marked as complete and transaction id is assigned to it.
        <br/>
        <br/>
        <ul>
        <li>If server connection is unavailable, withdrawal request is cancelled.</li>
        <li>If blockchain transfer is successful, but is it not possible to reach Tatum, transaction id of blockchain transaction is returned and withdrawal request must be completed manually, otherwise all other withdrawals will be pending.</li>
        </ul>
        It is possible to perform ledger to blockchain transaction for ledger accounts without blockchain address assigned to them.<br/>
        This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.
        No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and losing funds. In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages.
        </p>
      operationId: EgldTransfer
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to Ethereum | Polygon | KCS | XDC transaction. If not present, last known nonce will be used.'
                    address:
                      description: Blockchain address to send assets
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      maxLength: 42
                      minLength: 42
                      type: string
                    amount:
                      description: Amount to be sent in Ether | MATIC | XDC | KCS.
                      maxLength: 38
                      example: '100000'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    privateKey:
                      type: string
                      maxLength: 66
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      description: 'Private key of sender address. Either mnemonic and index, privateKey or signature Id must be present - depends on the type of account and xpub.'
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      type: string
                    gasLimit:
                      type: string
                      description: 'Gas limit for transaction in gas price. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '40000'
                    gasPrice:
                      type: string
                      description: 'Gas price in Gwei. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '20'
                  required:
                    - senderAccountId
                    - address
                    - amount
                    - privateKey
                - type: object
                  properties:
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to Ethereum | Polygon | KCS | XDC transaction. If not present, last known nonce will be used.'
                    address:
                      description: Blockchain address to send assets
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      maxLength: 42
                      minLength: 42
                      type: string
                    amount:
                      description: Amount to be sent in Ether | MATIC | XDC | KCS.
                      maxLength: 38
                      example: '100000'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    index:
                      description: Derivation index of sender address.
                      maximum: 2147483647
                      example: 0
                      type: integer
                    gasLimit:
                      type: string
                      description: 'Gas limit for transaction in gas price. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '40000'
                    gasPrice:
                      type: string
                      description: 'Gas price in Gwei. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '20'
                    mnemonic:
                      maxLength: 500
                      minLength: 1
                      description: 'Mnemonic to generate private key for sender address. Either mnemonic and index, privateKey or signature Id must be present - depends on the type of account and xpub.'
                      example: urge pulp usage sister evidence arrest palm math please chief egg abuse
                      type: string
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      type: string
                  required:
                    - senderAccountId
                    - address
                    - amount
                    - mnemonic
                    - index
                - type: object
                  properties:
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to Ethereum | Polygon | KCS | XDC transaction. If not present, last known nonce will be used.'
                    address:
                      description: Blockchain address to send assets
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      maxLength: 42
                      minLength: 42
                      type: string
                    amount:
                      description: Amount to be sent in Ether | MATIC | XDC | KCS.
                      maxLength: 38
                      example: '100000'
                      type: string
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: |
                        Identifier of the mnemonic / private key associated in signing application.
                        When hash identifies mnemonic, index must be present to represent specific account to pay from.
                        Private key, mnemonic or signature Id must be present.
                    index:
                      description: Derivation index of sender address.
                      maximum: 2147483647
                      example: 0
                      type: integer
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 5e68c66581f2ee32bc354087
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note visible to owner of withdrawing account
                      example: Sender note
                      type: string
                    gasLimit:
                      type: string
                      description: 'Gas limit for transaction in gas price. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '40000'
                    gasPrice:
                      type: string
                      description: 'Gas price in Gwei. If not set, automatic calculation will be used.'
                      pattern: '^[+]?\d+$'
                      example: '20'
                  required:
                    - senderAccountId
                    - address
                    - signatureId
                    - amount
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      id:
                        description: 'ID of withdrawal. If transaction is not valid in blockchain, use this id to cancel withdrawal.'
                        example: 5e68c66581f2ee32bc354087
                        type: string
                      txId:
                        description: TX hash of successful transaction.
                        example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
                        type: string
                      completed:
                        description: 'Whethet withdrawal was completed in Tatum''s internal ledger. If not, it must be done manually.'
                        example: true
                        type: boolean
                    required:
                      - txId
                      - id
                      - completed
                  - type: object
                    properties:
                      signatureId:
                        description: 'ID of prepared payment template to sign. This is should be stored on a client side to retrieve ID of the blockchain transaction, when signing application signs the transaction and broadcasts it to the blockchain.'
                        example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
                        format: uuid
                        type: string
                    required:
                      - id
                      - signatureId
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: withdrawal.missing
                        example: withdrawal.missing
                        type: string
                      message:
                        description: No such withdrawal.
                        example: No such withdrawal.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: rate.not.found
                        example: rate.not.found
                        type: string
                      message:
                        description: No such currency rate.
                        example: No such currency rate.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: vc.not.found
                        example: vc.not.found
                        type: string
                      message:
                        description: No such virtual currency.
                        example: No such virtual currency.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.recipient.format
                        example: withdrawal.recipient.format
                        type: string
                      message:
                        description: Recipient blockchain address has incorrect format.
                        example: Recipient blockchain address has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.failed.transaction.failed
                        example: withdrawal.failed.transaction.failed
                        type: string
                      message:
                        description: 'Unable to store withdrawal, it is impossible to create transaction.'
                        example: 'Unable to store withdrawal, it is impossible to create transaction.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.account.virtual
                        example: withdrawal.account.virtual
                        type: string
                      message:
                        description: Sender account cannot be virtual.
                        example: Sender account cannot be virtual.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: offchain.not.supported
                        example: offchain.not.supported
                        type: string
                      message:
                        description: 'Offchain not supported for account with ${account.currency} currency.'
                        example: 'Offchain not supported for account with ${account.currency} currency.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.format
                        example: amount.format
                        type: string
                      message:
                        description: Amount has incorrect format.
                        example: Amount has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: fee.format
                        example: fee.format
                        type: string
                      message:
                        description: Fee has incorrect format.
                        example: Fee has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.not.cancelled.transaction.failed
                        example: withdrawal.not.cancelled.transaction.failed
                        type: string
                      message:
                        description: 'Unable to broadcast transaction, and impossible to cancel withdrawal. ID is attached, "${withdrawalId}", cancel it manually.'
                        example: 'Unable to broadcast transaction, and impossible to cancel withdrawal. ID is attached, "${withdrawalId}", cancel it manually.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.prepare.failed
                        example: withdrawal.prepare.failed
                        type: string
                      message:
                        description: 'Unable to prepare transaction, withdrawal cancelled.'
                        example: 'Unable to prepare transaction, withdrawal cancelled.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.not.exists
                        example: senderAccount.not.exists
                        type: string
                      message:
                        description: 'Unable to find sender account ${transaction.senderAccountId}.'
                        example: 'Unable to find sender account ${transaction.senderAccountId}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.customer.disabled
                        example: senderAccount.customer.disabled
                        type: string
                      message:
                        description: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        example: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: balance.insufficient
                        example: balance.insufficient
                        type: string
                      message:
                        description: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        example: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.btc
                        example: amount.btc
                        type: string
                      message:
                        description: 'BTC|LTC|BCH payment amount must be at least 0.00000000000001, not ${transaction.amount}.'
                        example: 'BTC|LTC|BCH payment amount must be at least 0.00000000000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.eth
                        example: amount.eth
                        type: string
                      message:
                        description: 'ETH payment amount must be at least 0.000000000001, not ${transaction.amount}.'
                        example: 'ETH payment amount must be at least 0.000000000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.frozen
                        example: senderAccount.frozen
                        type: string
                      message:
                        description: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        example: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.pending
                        example: withdrawal.pending
                        type: string
                      message:
                        description: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        example: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: private.mnemonic.missing
                        example: private.mnemonic.missing
                        type: string
                      message:
                        description: Either mnemonic and index or private key must be present.
                        example: Either mnemonic and index or private key must be present.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.erc20.unsupported
                        example: eth.erc20.unsupported
                        type: string
                      message:
                        description: Unsupported ETH ERC20 blockchain.
                        example: Unsupported ETH ERC20 blockchain.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: ethereum.broadcast.failed
                        example: ethereum.broadcast.failed
                        type: string
                      message:
                        description: 'Unable to broadcast transaction due to ${error}.'
                        example: 'Unable to broadcast transaction due to ${error}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: gas.price.failed
                        example: gas.price.failed
                        type: string
                      message:
                        description: Unable to obtain current GAS price.
                        example: Unable to obtain current GAS price.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: ethereum.transaction.body
                        example: ethereum.transaction.body
                        type: string
                      message:
                        description: 'Either currency, or tokenAddress must be defined.'
                        example: 'Either currency, or tokenAddress must be defined.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.transaction.gas
                        example: eth.transaction.gas
                        type: string
                      message:
                        description: 'Unable to calculate gas limit for transaction. ${error}'
                        example: 'Unable to calculate gas limit for transaction. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.transaction.hash
                        example: eth.transaction.hash
                        type: string
                      message:
                        description: 'Unable to calculate transaction hash. ${error}'
                        example: 'Unable to calculate transaction hash. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.transaction.sign
                        example: eth.transaction.sign
                        type: string
                      message:
                        description: 'Unable to sign transaction. ${error}'
                        example: 'Unable to sign transaction. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
      summary: Send EGLD from Tatum ledger to blockchain
      tags:
        - Offchain withdrawal
  /v3/offchain/algorand/transfer:
    post:
      description: |
        <h4>4 credits per API call.</h4><br/>
        <p>Send ALGO or Erc20 from Tatum Ledger to account. This will create Tatum internal withdrawal request with ID. If every system works as expected, withdrawal request is marked as complete and transaction id is assigned to it.
        <br/>
        <br/>
        <ul>
        <li>If server connection is unavailable, withdrawal request is cancelled.</li>
        <li>If blockchain transfer is successful, but is it not possible to reach Tatum, transaction id of blockchain transaction is returned and withdrawal request must be completed manually, otherwise all other withdrawals will be pending.</li>
        </ul>
        It is possible to perform ledger to blockchain transaction for ledger accounts without blockchain address assigned to them.<br/>
        This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.
        No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and losing funds. In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages.
        Before transfer Algorand Erc20, you need to do zero transfer for preparing to be enable receive the token on recepient.
        </p>
      operationId: AlgoTransfer
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 61b3bffddfb389cde19c73be
                      type: string
                    account:
                      description: Blockchain account to send from
                      example: '0xee82856bf20e2aa6'
                      maxLength: 18
                      minLength: 18
                      type: string
                    address:
                      description: Blockchain address to send assets
                      example: '0xee82856bf20e2aa6'
                      maxLength: 18
                      minLength: 18
                      type: string
                    amount:
                      description: 'Amount to be sent, in Algo.'
                      maxLength: 38
                      example: '10000'
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                      type: string
                    privateKey:
                      maxLength: 103
                      minLength: 103
                      description: 'Secret for account. Secret, or signature Id must be present.'
                      example: NBYMCVEEDFYV3TPWVRE6APE7PKHUJD4XAKXCKNCLKGUXOC3LFNJGZQCJCRA53HB7ZAHF6NFJH2QIVQ5USQNWG35QCJLD4KZ5IWMB24Q
                      type: string
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note without any spaces.
                      example: Sendernote
                      type: string
                  required:
                    - account
                    - senderAccountId
                    - address
                    - privateKey
                    - amount
                - type: object
                  properties:
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 61b3bffddfb389cde19c73be
                      type: string
                    address:
                      description: Blockchain address to receive assets
                      example: 5YVZBUH3STSQ5ABCTLEIEIJ7QOZFILM2DLAEEA4ZL6CU55ODZIQXO5EMYM
                      maxLength: 58
                      minLength: 58
                      type: string
                    amount:
                      description: Amount to be sent.
                      maxLength: 38
                      example: '10000'
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                      type: string
                    privateKey:
                      maxLength: 103
                      minLength: 103
                      description: 'Secret for account. Secret, or signature Id must be present.'
                      example: NBYMCVEEDFYV3TPWVRE6APE7PKHUJD4XAKXCKNCLKGUXOC3LFNJGZQCJCRA53HB7ZAHF6NFJH2QIVQ5USQNWG35QCJLD4KZ5IWMB24Q
                      type: string
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note without any spaces.
                      example: Sendernote
                      type: string
                  required:
                    - senderAccountId
                    - address
                    - privateKey
                    - amount
                - type: object
                  properties:
                    senderAccountId:
                      maxLength: 24
                      minLength: 24
                      description: Sender account ID
                      example: 61b3bffddfb389cde19c73be
                      type: string
                    account:
                      description: Blockchain account to send from
                      example: '0xee82856bf20e2aa6'
                      maxLength: 18
                      minLength: 18
                      type: string
                    address:
                      description: Blockchain address to send assets
                      example: '0xee82856bf20e2aa6'
                      maxLength: 18
                      minLength: 18
                      type: string
                    amount:
                      description: 'Amount to be sent, in Algo.'
                      maxLength: 38
                      example: '10000'
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                      type: string
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: 'Identifier of the secret associated in signing application. Secret, or signature Id must be present.'
                    index:
                      type: number
                      minimum: 0
                      description: 'If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.'
                    compliant:
                      description: 'Compliance check, if withdrawal is not compliant, it will not be processed.'
                      example: false
                      type: boolean
                    paymentId:
                      description: 'Identifier of the payment, shown for created Transaction within Tatum sender account.'
                      example: '1234'
                      maxLength: 100
                      minLength: 1
                      type: string
                    senderNote:
                      maxLength: 500
                      minLength: 1
                      description: Note without any spaces.
                      example: Sendernote
                      type: string
                  required:
                    - account
                    - senderAccountId
                    - address
                    - amount
                    - signatureId
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      id:
                        description: 'ID of withdrawal. If transaction is not valid in blockchain, use this id to cancel withdrawal.'
                        example: 5e68c66581f2ee32bc354087
                        type: string
                      txId:
                        description: TX hash of successful transaction.
                        example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
                        type: string
                      completed:
                        description: 'Whethet withdrawal was completed in Tatum''s internal ledger. If not, it must be done manually.'
                        example: true
                        type: boolean
                    required:
                      - txId
                      - id
                      - completed
                  - type: object
                    properties:
                      signatureId:
                        description: 'ID of prepared payment template to sign. This is should be stored on a client side to retrieve ID of the blockchain transaction, when signing application signs the transaction and broadcasts it to the blockchain.'
                        example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
                        format: uuid
                        type: string
                    required:
                      - id
                      - signatureId
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: withdrawal.missing
                        example: withdrawal.missing
                        type: string
                      message:
                        description: No such withdrawal.
                        example: No such withdrawal.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: rate.not.found
                        example: rate.not.found
                        type: string
                      message:
                        description: No such currency rate.
                        example: No such currency rate.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: vc.not.found
                        example: vc.not.found
                        type: string
                      message:
                        description: No such virtual currency.
                        example: No such virtual currency.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.recipient.format
                        example: withdrawal.recipient.format
                        type: string
                      message:
                        description: Recipient blockchain address has incorrect format.
                        example: Recipient blockchain address has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.failed.transaction.failed
                        example: withdrawal.failed.transaction.failed
                        type: string
                      message:
                        description: 'Unable to store withdrawal, it is impossible to create transaction.'
                        example: 'Unable to store withdrawal, it is impossible to create transaction.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.account.virtual
                        example: withdrawal.account.virtual
                        type: string
                      message:
                        description: Sender account cannot be virtual.
                        example: Sender account cannot be virtual.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: offchain.not.supported
                        example: offchain.not.supported
                        type: string
                      message:
                        description: 'Offchain not supported for account with ${account.currency} currency.'
                        example: 'Offchain not supported for account with ${account.currency} currency.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.format
                        example: amount.format
                        type: string
                      message:
                        description: Amount has incorrect format.
                        example: Amount has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: fee.format
                        example: fee.format
                        type: string
                      message:
                        description: Fee has incorrect format.
                        example: Fee has incorrect format.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.not.cancelled.transaction.failed
                        example: withdrawal.not.cancelled.transaction.failed
                        type: string
                      message:
                        description: 'Unable to broadcast transaction, and impossible to cancel withdrawal. ID is attached, "${withdrawalId}", cancel it manually.'
                        example: 'Unable to broadcast transaction, and impossible to cancel withdrawal. ID is attached, "${withdrawalId}", cancel it manually.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.prepare.failed
                        example: withdrawal.prepare.failed
                        type: string
                      message:
                        description: 'Unable to prepare transaction, withdrawal cancelled.'
                        example: 'Unable to prepare transaction, withdrawal cancelled.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.not.exists
                        example: senderAccount.not.exists
                        type: string
                      message:
                        description: 'Unable to find sender account ${transaction.senderAccountId}.'
                        example: 'Unable to find sender account ${transaction.senderAccountId}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.customer.disabled
                        example: senderAccount.customer.disabled
                        type: string
                      message:
                        description: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        example: 'Sender accounts customer ${senderAccount.customerId} is disabled, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: balance.insufficient
                        example: balance.insufficient
                        type: string
                      message:
                        description: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        example: 'Insufficient balance for account ${transaction.senderAccountId} and payment amount ${transaction.amount}. Sender balance is ${senderAccount.balance.availableBalance as string}, amount is ${amount}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.btc
                        example: amount.btc
                        type: string
                      message:
                        description: 'BTC|LTC|BCH payment amount must be at least 0.00000000000001, not ${transaction.amount}.'
                        example: 'BTC|LTC|BCH payment amount must be at least 0.00000000000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: amount.eth
                        example: amount.eth
                        type: string
                      message:
                        description: 'ETH payment amount must be at least 0.000000000001, not ${transaction.amount}.'
                        example: 'ETH payment amount must be at least 0.000000000001, not ${transaction.amount}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: senderAccount.frozen
                        example: senderAccount.frozen
                        type: string
                      message:
                        description: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        example: 'Sender account ${transaction.senderAccountId} is frozen, unable to perform payment.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: withdrawal.pending
                        example: withdrawal.pending
                        type: string
                      message:
                        description: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        example: 'Unable to prepare withdrawal, last withdrawal with id ${id} is not yet processed by blockchain.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: private.mnemonic.missing
                        example: private.mnemonic.missing
                        type: string
                      message:
                        description: Either mnemonic and index or private key must be present.
                        example: Either mnemonic and index or private key must be present.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.erc20.unsupported
                        example: eth.erc20.unsupported
                        type: string
                      message:
                        description: Unsupported ETH ERC20 blockchain.
                        example: Unsupported ETH ERC20 blockchain.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: ethereum.broadcast.failed
                        example: ethereum.broadcast.failed
                        type: string
                      message:
                        description: 'Unable to broadcast transaction due to ${error}.'
                        example: 'Unable to broadcast transaction due to ${error}.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: gas.price.failed
                        example: gas.price.failed
                        type: string
                      message:
                        description: Unable to obtain current GAS price.
                        example: Unable to obtain current GAS price.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: ethereum.transaction.body
                        example: ethereum.transaction.body
                        type: string
                      message:
                        description: 'Either currency, or tokenAddress must be defined.'
                        example: 'Either currency, or tokenAddress must be defined.'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.transaction.gas
                        example: eth.transaction.gas
                        type: string
                      message:
                        description: 'Unable to calculate gas limit for transaction. ${error}'
                        example: 'Unable to calculate gas limit for transaction. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.transaction.hash
                        example: eth.transaction.hash
                        type: string
                      message:
                        description: 'Unable to calculate transaction hash. ${error}'
                        example: 'Unable to calculate transaction hash. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        description: eth.transaction.sign
                        example: eth.transaction.sign
                        type: string
                      message:
                        description: 'Unable to sign transaction. ${error}'
                        example: 'Unable to sign transaction. ${error}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
      summary: Send ALGO or Erc20 from Tatum ledger to blockchain
      tags:
        - Offchain withdrawal
components:
  securitySchemes:
    X-Api-Key:
      description: |
        To maintain the highest security level, Tatum requires X-API-Key HTTP header.
        This X-API-Key represents identification of the plan and can be used by 1 developer or per environment.
        Each X-API-Key is bound to the test or production blockchains.
      in: header
      name: x-api-key
      type: apiKey
